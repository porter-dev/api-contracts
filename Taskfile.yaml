version: '3'

vars:
  CONTRACT_DIR: .
  GENERATE_DIR: gen

tasks:
  all:
    desc: Format, Lint, check for breaking changes, then generate all models, clients, and server stubs
    cmds:
    - task: format
    - task: lint
    # - task: breaking
    - task: generate

  generate:
    desc: Generate all proto stubs for all supported languages
    dir: "{{.CONTRACT_DIR}}"
    cmds:
    - cmd: rm -rf generated/go; rm -rf generated/js/src;
      ignore_error: false
    - cmd: buf generate --config buf.yaml --template buf.gen.yaml
      ignore_error: false
  
  breaking:
    desc: Check for breaking changes against main branch
    dir: "{{.CONTRACT_DIR}}"
    cmds:
    - cmd: buf breaking --config buf.yaml --against .git#branch=main,subdir=.
      ignore_error: false

  lint:
    desc: Lint proto files for consistency
    dir: "{{.CONTRACT_DIR}}"
    cmds:
    - cmd: buf lint
      ignore_error: false

  format:
    desc: Format proto files for consistency
    dir: "{{.CONTRACT_DIR}}"
    cmds:
    - cmd: buf format -w
      ignore_error: false

  release:
    desc: "Create and tag a release. Usage: `task release v0.0.0` where v0.0.0 is your desired tag"
    cmds:
    - cmd: if [ -z "{{.CLI_ARGS}}" ]; then echo "missing version"; exit 1; fi
      ignore_error: false
    - task: all
      ignore_error: false
    - cmd: cd generated/js; npm version {{.CLI_ARGS}}
      ignore_error: false
    - cmd: git commit -am "Releasing {{.CLI_ARGS}}"
      ignore_error: false
    - cmd: git tag {{.CLI_ARGS}}
      ignore_error: false
    - cmd: git push origin main
      ignore_error: false
  
  install-tools:
    desc: Install commonly used tools for gRPC
    cmds:
    - go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
    - go install github.com/bufbuild/buf/cmd/buf@latest
    - go install github.com/bufbuild/connect-go/cmd/protoc-gen-connect-go@latest
    - go install github.com/fullstorydev/grpcurl/cmd/grpcurl@latest
    - npm install -g @bufbuild/protobuf @bufbuild/protoc-gen-es


