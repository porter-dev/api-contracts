// @generated by protoc-gen-es v1.4.2
// @generated from file porter/v1/datastore.proto (package porter.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * UpdateDatastorePayload is used to send messages via nats to update a datastore
 *
 * @generated from message porter.v1.UpdateDatastorePayload
 */
export declare class UpdateDatastorePayload extends Message<UpdateDatastorePayload> {
  /**
   * project_id is the id of the project that the datastore belongs to
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * datastore_id is the id of the datastore
   *
   * @generated from field: string datastore_id = 2;
   */
  datastoreId: string;

  constructor(data?: PartialMessage<UpdateDatastorePayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateDatastorePayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDatastorePayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDatastorePayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDatastorePayload;

  static equals(a: UpdateDatastorePayload | PlainMessage<UpdateDatastorePayload> | undefined, b: UpdateDatastorePayload | PlainMessage<UpdateDatastorePayload> | undefined): boolean;
}

/**
 * DatastoreCredential is used to connect to a datastore
 *
 * @generated from message porter.v1.DatastoreCredential
 */
export declare class DatastoreCredential extends Message<DatastoreCredential> {
  /**
   * host is the datastore host
   *
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * database_name is the name of the database
   *
   * @generated from field: string database_name = 2;
   */
  databaseName: string;

  /**
   * username is the username required to access the datastore
   *
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * password is the password required to access the datastore
   *
   * @generated from field: string password = 4;
   */
  password: string;

  /**
   * port is the port to connect to
   *
   * @generated from field: int64 port = 5;
   */
  port: bigint;

  constructor(data?: PartialMessage<DatastoreCredential>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DatastoreCredential";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DatastoreCredential;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DatastoreCredential;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DatastoreCredential;

  static equals(a: DatastoreCredential | PlainMessage<DatastoreCredential> | undefined, b: DatastoreCredential | PlainMessage<DatastoreCredential> | undefined): boolean;
}

