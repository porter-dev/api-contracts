// @generated by protoc-gen-es v1.1.0
// @generated from file porter/v1/contract.proto (package porter.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Cluster } from "./cluster_pb.js";

/**
 * Contract represents the API contract for Porter, commonly known as "porter.yaml"
 *
 * @generated from message porter.v1.Contract
 */
export declare class Contract extends Message<Contract> {
  /**
   * @generated from field: porter.v1.Cluster cluster = 1;
   */
  cluster?: Cluster;

  constructor(data?: PartialMessage<Contract>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.Contract";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract;

  static equals(a: Contract | PlainMessage<Contract> | undefined, b: Contract | PlainMessage<Contract> | undefined): boolean;
}

/**
 * ContractRevision represents a contract revision which should be acted upon, depending on the stream
 * that is was passed through. This approach goes against microservice architectures, by expecting every consumer
 * to read the specific contract from the database
 *
 * @generated from message porter.v1.ContractRevision
 */
export declare class ContractRevision extends Message<ContractRevision> {
  /**
   * @generated from field: int32 cluster_id = 1;
   */
  clusterId: number;

  /**
   * @generated from field: int32 project_id = 2;
   */
  projectId: number;

  /**
   * @generated from field: string revision_id = 3;
   */
  revisionId: string;

  constructor(data?: PartialMessage<ContractRevision>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ContractRevision";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContractRevision;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContractRevision;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContractRevision;

  static equals(a: ContractRevision | PlainMessage<ContractRevision> | undefined, b: ContractRevision | PlainMessage<ContractRevision> | undefined): boolean;
}

