// @generated by protoc-gen-es v1.8.0
// @generated from file porter/v1/cluster_control_plane.proto (package porter.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";
import { EnumCloudProvider } from "./cluster_pb.js";
import { CloudContract, MachineType } from "./cloud_contract_pb.js";
import { GKEPreflightValues } from "./gke_pb.js";
import { AWSVpc, EKSPreflightValues } from "./eks_pb.js";
import { Error } from "./errors_pb.js";
import { Contract, ContractRevision } from "./contract_pb.js";
import { ContractComplianceCheckGroup, EnumComplianceProfile, EnumComplianceVendor, VendorComplianceCheck } from "./compliance_pb.js";
import { AppImage, Build, Deletions, DeploymentTarget, DeploymentTargetIdentifier, EnumAppRevisionStatus, EnvGroup, EnvGroupVariables, EnvVariableDeletions, JobRun, PorterApp } from "./porter_app_pb.js";
import { Addon, PrerequisiteAddon } from "./addons_pb.js";
import { AppEventType } from "./agent_app_event_types_pb.js";
import { Alert } from "./prometheus_alerts_pb.js";
import { EnumEnvGroupProviderType } from "./env_group_pb.js";
import { NotificationConfig } from "./notification_pb.js";
import { DatastoreCredential, ManagedDatastore } from "./datastore_pb.js";
import { AssumeRoleChainLink } from "./aws_assume_role_pb.js";
import { ClusterStatus, SystemServiceStatusHistory } from "./system_service_pb.js";

/**
 * EnumUpdateTrigger describes the action that triggered a porter app revision update
 *
 * @generated from enum porter.v1.EnumUpdateTrigger
 */
export const EnumUpdateTrigger = /*@__PURE__*/ proto3.makeEnum(
  "porter.v1.EnumUpdateTrigger",
  [
    {no: 0, name: "ENUM_UPDATE_TRIGGER_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "ENUM_UPDATE_TRIGGER_ROLLBACK", localName: "ROLLBACK"},
  ],
);

/**
 * @generated from enum porter.v1.EnumPredeployStatus
 */
export const EnumPredeployStatus = /*@__PURE__*/ proto3.makeEnum(
  "porter.v1.EnumPredeployStatus",
  [
    {no: 0, name: "ENUM_PREDEPLOY_STATUS_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "ENUM_PREDEPLOY_STATUS_IN_PROGRESS", localName: "IN_PROGRESS"},
    {no: 2, name: "ENUM_PREDEPLOY_STATUS_FAILED", localName: "FAILED"},
    {no: 3, name: "ENUM_PREDEPLOY_STATUS_SUCCESSFUL", localName: "SUCCESSFUL"},
  ],
);

/**
 * @generated from enum porter.v1.EnumQuotaIncrease
 */
export const EnumQuotaIncrease = /*@__PURE__*/ proto3.makeEnum(
  "porter.v1.EnumQuotaIncrease",
  [
    {no: 0, name: "ENUM_QUOTA_INCREASE_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "ENUM_QUOTA_INCREASE_AWS_VPC", localName: "AWS_VPC"},
    {no: 2, name: "ENUM_QUOTA_INCREASE_AWS_VCPU", localName: "AWS_VCPU"},
    {no: 3, name: "ENUM_QUOTA_INCREASE_AWS_EIP", localName: "AWS_EIP"},
    {no: 4, name: "ENUM_QUOTA_INCREASE_AWS_NAT", localName: "AWS_NAT"},
    {no: 5, name: "ENUM_QUOTA_INCREASE_GCP", localName: "GCP"},
    {no: 6, name: "ENUM_QUOTA_INCREASE_AZURE", localName: "AZURE"},
  ],
);

/**
 * @generated from enum porter.v1.EnumCLIAction
 */
export const EnumCLIAction = /*@__PURE__*/ proto3.makeEnum(
  "porter.v1.EnumCLIAction",
  [
    {no: 0, name: "ENUM_CLI_ACTION_UNSPECIFIED"},
    {no: 1, name: "ENUM_CLI_ACTION_NONE"},
    {no: 2, name: "ENUM_CLI_ACTION_BUILD"},
    {no: 3, name: "ENUM_CLI_ACTION_TRACK_PREDEPLOY"},
  ],
);

/**
 * @generated from enum porter.v1.EnumRevisionStatus
 */
export const EnumRevisionStatus = /*@__PURE__*/ proto3.makeEnum(
  "porter.v1.EnumRevisionStatus",
  [
    {no: 0, name: "ENUM_REVISION_STATUS_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "ENUM_REVISION_STATUS_PREDEPLOY_FAILED", localName: "PREDEPLOY_FAILED"},
    {no: 2, name: "ENUM_REVISION_STATUS_DEPLOY_FAILED", localName: "DEPLOY_FAILED"},
    {no: 3, name: "ENUM_REVISION_STATUS_BUILD_FAILED", localName: "BUILD_FAILED"},
    {no: 4, name: "ENUM_REVISION_STATUS_BUILD_SUCCESSFUL", localName: "BUILD_SUCCESSFUL"},
  ],
);

/**
 * @generated from enum porter.v1.EnumServiceDeploymentStatus
 */
export const EnumServiceDeploymentStatus = /*@__PURE__*/ proto3.makeEnum(
  "porter.v1.EnumServiceDeploymentStatus",
  [
    {no: 0, name: "ENUM_SERVICE_DEPLOYMENT_STATUS_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "ENUM_SERVICE_DEPLOYMENT_STATUS_PROGRESSING", localName: "PROGRESSING"},
    {no: 2, name: "ENUM_SERVICE_DEPLOYMENT_STATUS_SUCCESS", localName: "SUCCESS"},
    {no: 3, name: "ENUM_SERVICE_DEPLOYMENT_STATUS_FAILED", localName: "FAILED"},
  ],
);

/**
 * @generated from enum porter.v1.EnumPatchCloudContractOperation
 */
export const EnumPatchCloudContractOperation = /*@__PURE__*/ proto3.makeEnum(
  "porter.v1.EnumPatchCloudContractOperation",
  [
    {no: 0, name: "ENUM_PATCH_CLOUD_CONTRACT_OPERATION_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "ENUM_PATCH_CLOUD_CONTRACT_OPERATION_UPDATE", localName: "UPDATE"},
    {no: 2, name: "ENUM_PATCH_CLOUD_CONTRACT_OPERATION_DELETE", localName: "DELETE"},
  ],
);

/**
 * @generated from enum porter.v1.EnumPatchCloudContractType
 */
export const EnumPatchCloudContractType = /*@__PURE__*/ proto3.makeEnum(
  "porter.v1.EnumPatchCloudContractType",
  [
    {no: 0, name: "ENUM_PATCH_CLOUD_CONTRACT_TYPE_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "ENUM_PATCH_CLOUD_CONTRACT_TYPE_DATASTORE", localName: "DATASTORE"},
  ],
);

/**
 * EnumDatastore represents the datastore type
 *
 * @generated from enum porter.v1.EnumDatastore
 */
export const EnumDatastore = /*@__PURE__*/ proto3.makeEnum(
  "porter.v1.EnumDatastore",
  [
    {no: 0, name: "ENUM_DATASTORE_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "ENUM_DATASTORE_RDS_POSTGRESQL", localName: "RDS_POSTGRESQL"},
    {no: 2, name: "ENUM_DATASTORE_RDS_AURORA_POSTGRESQL", localName: "RDS_AURORA_POSTGRESQL"},
    {no: 3, name: "ENUM_DATASTORE_ELASTICACHE_REDIS", localName: "ELASTICACHE_REDIS"},
    {no: 4, name: "ENUM_DATASTORE_ELASTICACHE_MEMCACHED", localName: "ELASTICACHE_MEMCACHED"},
    {no: 5, name: "ENUM_DATASTORE_RDS_MYSQL", localName: "RDS_MYSQL"},
  ],
);

/**
 * @generated from message porter.v1.MachineTypesRequest
 */
export const MachineTypesRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.MachineTypesRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cloud_provider", kind: "enum", T: proto3.getEnumType(EnumCloudProvider) },
    { no: 3, name: "cloud_provider_credentials_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "region", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.MachineTypesResponse
 */
export const MachineTypesResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.MachineTypesResponse",
  () => [
    { no: 1, name: "machine_types", kind: "message", T: MachineType, repeated: true },
    { no: 2, name: "unsupported_machine_types", kind: "message", T: MachineType, repeated: true },
  ],
);

/**
 * @generated from message porter.v1.QuotaIncreaseRequest
 */
export const QuotaIncreaseRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.QuotaIncreaseRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cloud_provider", kind: "enum", T: proto3.getEnumType(EnumCloudProvider) },
    { no: 3, name: "cloud_provider_credentials_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "quota_increases", kind: "enum", T: proto3.getEnumType(EnumQuotaIncrease), repeated: true },
    { no: 5, name: "gke_preflight_values", kind: "message", T: GKEPreflightValues, oneof: "preflight_values" },
    { no: 6, name: "eks_preflight_values", kind: "message", T: EKSPreflightValues, oneof: "preflight_values" },
  ],
);

/**
 * @generated from message porter.v1.QuotaIncreaseResponse
 */
export const QuotaIncreaseResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.QuotaIncreaseResponse",
  () => [
    { no: 1, name: "error", kind: "message", T: Error },
  ],
);

/**
 * Deprecated: use CloudContractPreflightCheckRequest instead
 *
 * @generated from message porter.v1.PreflightCheckRequest
 * @deprecated
 */
export const PreflightCheckRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.PreflightCheckRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cloud_provider", kind: "enum", T: proto3.getEnumType(EnumCloudProvider) },
    { no: 3, name: "cloud_provider_credentials_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "gke_preflight_values", kind: "message", T: GKEPreflightValues, oneof: "preflight_values" },
    { no: 5, name: "eks_preflight_values", kind: "message", T: EKSPreflightValues, oneof: "preflight_values" },
    { no: 6, name: "contract", kind: "message", T: Contract },
  ],
);

/**
 * Deprecated: use CloudContractPreflightCheckResponse instead
 *
 * @generated from message porter.v1.PreflightCheckResponse
 * @deprecated
 */
export const PreflightCheckResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.PreflightCheckResponse",
  () => [
    { no: 1, name: "preflight_checks", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Error} },
  ],
);

/**
 * CloudContractPreflightCheckRequest is the request object for running preflight checks on a cloud contract
 *
 * @generated from message porter.v1.CloudContractPreflightCheckRequest
 */
export const CloudContractPreflightCheckRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CloudContractPreflightCheckRequest",
  () => [
    { no: 1, name: "contract", kind: "message", T: Contract },
  ],
);

/**
 * CloudContractPreflightCheckResponse is the response object for running preflight checks on a cloud contract
 *
 * @generated from message porter.v1.CloudContractPreflightCheckResponse
 */
export const CloudContractPreflightCheckResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CloudContractPreflightCheckResponse",
  () => [
    { no: 1, name: "failing_preflight_checks", kind: "message", T: CloudContractPreflightCheck, repeated: true },
  ],
);

/**
 * CloudContractPreflightCheck represents a failing preflight check for a cloud contract
 *
 * @generated from message porter.v1.CloudContractPreflightCheck
 */
export const CloudContractPreflightCheck = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CloudContractPreflightCheck",
  () => [
    { no: 1, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "metadata", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 * @generated from message porter.v1.QuotaPreflightCheckRequest
 * @deprecated
 */
export const QuotaPreflightCheckRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.QuotaPreflightCheckRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "target_arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "external_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "region", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.QuotaPreflightCheckResponse
 * @deprecated
 */
export const QuotaPreflightCheckResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.QuotaPreflightCheckResponse",
  [],
);

/**
 * @generated from message porter.v1.CreateAssumeRoleChainRequest
 * @deprecated
 */
export const CreateAssumeRoleChainRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CreateAssumeRoleChainRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "source_arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "target_access_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "target_secret_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "target_session_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "target_arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "external_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.CreateAssumeRoleChainResponse
 * @deprecated
 */
export const CreateAssumeRoleChainResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CreateAssumeRoleChainResponse",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "target_arn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.SaveAzureCredentialsRequest
 * @deprecated
 */
export const SaveAzureCredentialsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.SaveAzureCredentialsRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "subscription_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "tenant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "service_principal_secret", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * @generated from message porter.v1.SaveAzureCredentialsResponse
 * @deprecated
 */
export const SaveAzureCredentialsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.SaveAzureCredentialsResponse",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "credentials_identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.KubeConfigForClusterRequest
 */
export const KubeConfigForClusterRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.KubeConfigForClusterRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message porter.v1.KubeConfigForClusterResponse
 */
export const KubeConfigForClusterResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.KubeConfigForClusterResponse",
  () => [
    { no: 1, name: "kube_config", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.UpdateContractRequest
 */
export const UpdateContractRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateContractRequest",
  () => [
    { no: 1, name: "contract", kind: "message", T: Contract },
  ],
);

/**
 * @generated from message porter.v1.UpdateContractResponse
 */
export const UpdateContractResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateContractResponse",
  () => [
    { no: 1, name: "contract_revision", kind: "message", T: ContractRevision },
  ],
);

/**
 * @generated from message porter.v1.ClusterStatusRequest
 */
export const ClusterStatusRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ClusterStatusRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message porter.v1.ClusterStatusResponse
 */
export const ClusterStatusResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ClusterStatusResponse",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "phase", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "infrastructure_status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "control_plane_status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message porter.v1.DeleteClusterRequest
 */
export const DeleteClusterRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeleteClusterRequest",
  () => [
    { no: 1, name: "contract_revision", kind: "message", T: ContractRevision },
  ],
);

/**
 * @generated from message porter.v1.DeleteClusterResponse
 */
export const DeleteClusterResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeleteClusterResponse",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message porter.v1.ListRepositoriesForRegistryRequest
 */
export const ListRepositoriesForRegistryRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ListRepositoriesForRegistryRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "registry_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.ListRepositoriesForRegistryResponse
 */
export const ListRepositoriesForRegistryResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ListRepositoriesForRegistryResponse",
  () => [
    { no: 1, name: "repositories", kind: "message", T: Repository, repeated: true },
  ],
);

/**
 * @generated from message porter.v1.Repository
 */
export const Repository = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.Repository",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.ListImagesForRepositoryRequest
 */
export const ListImagesForRepositoryRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ListImagesForRepositoryRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "registry_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "repo_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.ListImagesForRepositoryResponse
 */
export const ListImagesForRepositoryResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ListImagesForRepositoryResponse",
  () => [
    { no: 1, name: "images", kind: "message", T: Image, repeated: true },
  ],
);

/**
 * @generated from message porter.v1.Image
 * @deprecated
 */
export const Image = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.Image",
  () => [
    { no: 1, name: "repository_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "tag", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "digest", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "updated_at", kind: "message", T: Timestamp },
  ],
);

/**
 * ImageInfo describes everything related to a cloud-agnostic Docker image
 *
 * @generated from message porter.v1.ImageInfo
 */
export const ImageInfo = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ImageInfo",
  () => [
    { no: 1, name: "uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "artifacts", kind: "message", T: ImageArtifact, repeated: true },
  ],
);

/**
 * @generated from message porter.v1.ImageArtifact
 */
export const ImageArtifact = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ImageArtifact",
  () => [
    { no: 1, name: "tag", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "updated_at", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message porter.v1.TokenForRegistryRequest
 */
export const TokenForRegistryRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.TokenForRegistryRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "registry_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.TokenForRegistryResponse
 */
export const TokenForRegistryResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.TokenForRegistryResponse",
  () => [
    { no: 1, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "expiry", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message porter.v1.ReadContractRequest
 */
export const ReadContractRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ReadContractRequest",
  () => [
    { no: 1, name: "contract_revision", kind: "message", T: ContractRevision },
  ],
);

/**
 * @generated from message porter.v1.ReadContractResponse
 */
export const ReadContractResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ReadContractResponse",
  () => [
    { no: 1, name: "base64_contract", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.ContractComplianceChecksRequest
 */
export const ContractComplianceChecksRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ContractComplianceChecksRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "vendor", kind: "enum", T: proto3.getEnumType(EnumComplianceVendor) },
    { no: 4, name: "profile", kind: "enum", T: proto3.getEnumType(EnumComplianceProfile) },
  ],
);

/**
 * @generated from message porter.v1.ContractComplianceChecksResponse
 */
export const ContractComplianceChecksResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ContractComplianceChecksResponse",
  () => [
    { no: 1, name: "check_groups", kind: "message", T: ContractComplianceCheckGroup, repeated: true },
    { no: 2, name: "vendor_checks", kind: "message", T: VendorComplianceCheck, repeated: true },
  ],
);

/**
 * @generated from message porter.v1.ValidatePorterAppRequest
 */
export const ValidatePorterAppRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ValidatePorterAppRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "commit_sha", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "app", kind: "message", T: PorterApp },
    { no: 5, name: "deletions", kind: "message", T: Deletions },
    { no: 6, name: "app_overrides", kind: "message", T: PorterApp },
    { no: 7, name: "base_deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
  ],
);

/**
 * @generated from message porter.v1.ValidatePorterAppResponse
 */
export const ValidatePorterAppResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ValidatePorterAppResponse",
  () => [
    { no: 1, name: "app", kind: "message", T: PorterApp },
  ],
);

/**
 * @generated from message porter.v1.ApplyPorterAppRequest
 */
export const ApplyPorterAppRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ApplyPorterAppRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "app", kind: "message", T: PorterApp },
    { no: 4, name: "porter_app_revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "force_build", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "app_env", kind: "message", T: EnvGroupVariables },
    { no: 7, name: "is_hard_env_update", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
  ],
);

/**
 * @generated from message porter.v1.ApplyPorterAppResponse
 */
export const ApplyPorterAppResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ApplyPorterAppResponse",
  () => [
    { no: 1, name: "porter_app_revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "cli_action", kind: "enum", T: proto3.getEnumType(EnumCLIAction) },
  ],
);

/**
 * @generated from message porter.v1.UpdateAppRequest
 */
export const UpdateAppRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateAppRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 3, name: "app", kind: "message", T: PorterApp },
    { no: 4, name: "app_revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "app_env", kind: "message", T: EnvGroupVariables },
    { no: 6, name: "deletions", kind: "message", T: Deletions },
    { no: 7, name: "app_overrides", kind: "message", T: PorterApp },
    { no: 8, name: "is_env_override", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "is_predeploy_eligible", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "commit_sha", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "addons", kind: "message", T: Addon, repeated: true },
    { no: 12, name: "addon_overrides", kind: "message", T: Addon, repeated: true },
    { no: 13, name: "exact", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 14, name: "b64_description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "app_env_overrides", kind: "message", T: EnvGroupVariables },
    { no: 16, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message porter.v1.UpdateAppResponse
 */
export const UpdateAppResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateAppResponse",
  () => [
    { no: 1, name: "app_revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "cli_action", kind: "enum", T: proto3.getEnumType(EnumCLIAction) },
  ],
);

/**
 * @generated from message porter.v1.UpdateAddonRequest
 */
export const UpdateAddonRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateAddonRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 4, name: "addon", kind: "message", T: Addon },
    { no: 5, name: "addon_env", kind: "message", T: EnvGroupVariables },
  ],
);

/**
 * @generated from message porter.v1.UpdateAddonResponse
 */
export const UpdateAddonResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateAddonResponse",
  [],
);

/**
 * @generated from message porter.v1.DeleteAddonRequest
 */
export const DeleteAddonRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeleteAddonRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 4, name: "addon_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.DeleteAddonResponse
 */
export const DeleteAddonResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeleteAddonResponse",
  [],
);

/**
 * @generated from message porter.v1.UpdateRevisionStatusRequest
 */
export const UpdateRevisionStatusRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateRevisionStatusRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "revision_status", kind: "enum", T: proto3.getEnumType(EnumRevisionStatus) },
  ],
);

/**
 * @generated from message porter.v1.UpdateRevisionStatusResponse
 */
export const UpdateRevisionStatusResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateRevisionStatusResponse",
  [],
);

/**
 * @generated from message porter.v1.RollbackRevisionRequest
 */
export const RollbackRevisionRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.RollbackRevisionRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "app_revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 6, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.RollbackRevisionResponse
 */
export const RollbackRevisionResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.RollbackRevisionResponse",
  () => [
    { no: 1, name: "target_revision_number", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "app_revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * DeletePorterAppRequest is the request object when deleting a porter app from a given project
 *
 * @generated from message porter.v1.DeletePorterAppRequest
 */
export const DeletePorterAppRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeletePorterAppRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * DeletePorterAppResponse is the response object when deleting a porter app from a given project
 *
 * @generated from message porter.v1.DeletePorterAppResponse
 */
export const DeletePorterAppResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeletePorterAppResponse",
  () => [
    { no: 1, name: "app_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * DeleteAppDeploymentRequest is the request object when removing a porter app from a given deployment target
 *
 * @generated from message porter.v1.DeleteAppDeploymentRequest
 */
export const DeleteAppDeploymentRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeleteAppDeploymentRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
  ],
);

/**
 * DeleteAppDeploymentResponse is the response object when removing a porter app from a given deployment target
 *
 * @generated from message porter.v1.DeleteAppDeploymentResponse
 */
export const DeleteAppDeploymentResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeleteAppDeploymentResponse",
  [],
);

/**
 * DeleteDeploymentTargetRequest is the request object when removing a deployment target from a given cluster
 *
 * @generated from message porter.v1.DeleteDeploymentTargetRequest
 */
export const DeleteDeploymentTargetRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeleteDeploymentTargetRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
  ],
);

/**
 * DeleteDeploymentTargetResponse is the response object when removing a deployment target from a given cluster
 *
 * @generated from message porter.v1.DeleteDeploymentTargetResponse
 */
export const DeleteDeploymentTargetResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeleteDeploymentTargetResponse",
  [],
);

/**
 * @generated from message porter.v1.CurrentAppRevisionRequest
 */
export const CurrentAppRevisionRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CurrentAppRevisionRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 5, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.AppRevision
 */
export const AppRevision = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AppRevision",
  () => [
    { no: 1, name: "app", kind: "message", T: PorterApp },
    { no: 2, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "revision_number", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "created_at", kind: "message", T: Timestamp },
    { no: 5, name: "updated_at", kind: "message", T: Timestamp },
    { no: 6, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "app_instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "app_instance_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "porter_app_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "b64_description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * AppRevisionStatusRequest is used to query the status of an app revision
 *
 * @generated from message porter.v1.AppRevisionStatusRequest
 */
export const AppRevisionStatusRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AppRevisionStatusRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * AppRevisionStatusResponse is the response object from querying the status of an app revision
 *
 * @generated from message porter.v1.AppRevisionStatusResponse
 */
export const AppRevisionStatusResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AppRevisionStatusResponse",
  () => [
    { no: 1, name: "predeploy_started", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "predeploy_successful", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "predeploy_failed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "install_started", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "install_successful", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "install_failed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "deployment_started", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "deployment_successful", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "deployment_failed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "is_in_terminal_status", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "status", kind: "enum", T: proto3.getEnumType(EnumAppRevisionStatus) },
  ],
);

/**
 * UpdateRevisionPayload is used to send messages via nats to update a revision
 *
 * @generated from message porter.v1.UpdateRevisionPayload
 */
export const UpdateRevisionPayload = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateRevisionPayload",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "commit_sha", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "image", kind: "message", T: AppImage },
    { no: 5, name: "triggered_by", kind: "enum", T: proto3.getEnumType(EnumUpdateTrigger) },
    { no: 6, name: "prerequisite_addons", kind: "message", T: PrerequisiteAddon, repeated: true },
  ],
);

/**
 * UpdateAddonPayload is used to send messages via nats to update an addon
 *
 * @generated from message porter.v1.UpdateAddonPayload
 */
export const UpdateAddonPayload = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateAddonPayload",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "commit_sha", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.RequireAppPayload
 */
export const RequireAppPayload = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.RequireAppPayload",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "app_revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "source_deployment_target", kind: "message", T: DeploymentTargetIdentifier },
  ],
);

/**
 * @generated from message porter.v1.CurrentAppRevisionResponse
 */
export const CurrentAppRevisionResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CurrentAppRevisionResponse",
  () => [
    { no: 1, name: "app_revision", kind: "message", T: AppRevision },
  ],
);

/**
 * @generated from message porter.v1.ListAppRevisionsRequest
 */
export const ListAppRevisionsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ListAppRevisionsRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 5, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.ListAppRevisionsResponse
 */
export const ListAppRevisionsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ListAppRevisionsResponse",
  () => [
    { no: 1, name: "app_revisions", kind: "message", T: AppRevision, repeated: true },
  ],
);

/**
 * @generated from message porter.v1.LatestAppRevisionsRequest
 */
export const LatestAppRevisionsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.LatestAppRevisionsRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 3, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message porter.v1.LatestAppRevisionsResponse
 */
export const LatestAppRevisionsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.LatestAppRevisionsResponse",
  () => [
    { no: 1, name: "app_revisions", kind: "message", T: AppRevision, repeated: true },
  ],
);

/**
 * @generated from message porter.v1.GetAppRevisionRequest
 */
export const GetAppRevisionRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.GetAppRevisionRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.GetAppRevisionResponse
 */
export const GetAppRevisionResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.GetAppRevisionResponse",
  () => [
    { no: 1, name: "app_revision", kind: "message", T: AppRevision },
  ],
);

/**
 * @generated from message porter.v1.AppTemplateRequest
 */
export const AppTemplateRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AppTemplateRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message porter.v1.AppTemplateResponse
 */
export const AppTemplateResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AppTemplateResponse",
  () => [
    { no: 1, name: "app_template", kind: "message", T: PorterApp },
    { no: 2, name: "app_env", kind: "message", T: EnvGroupVariables },
    { no: 3, name: "addon_templates", kind: "message", T: AddonWithEnvVars, repeated: true },
  ],
);

/**
 * AddonTemplatesPayload is an object containg a list of addons to be included alongside an app template
 * these addons will be applied or updated whenever an app is deployed to a new preview deployment target
 *
 * @generated from message porter.v1.AddonTemplatesPayload
 */
export const AddonTemplatesPayload = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AddonTemplatesPayload",
  () => [
    { no: 1, name: "addon_templates", kind: "message", T: Addon, repeated: true },
  ],
);

/**
 * @generated from message porter.v1.AddonWithEnvVars
 */
export const AddonWithEnvVars = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AddonWithEnvVars",
  () => [
    { no: 1, name: "addon", kind: "message", T: Addon },
    { no: 2, name: "env_vars", kind: "message", T: EnvGroupVariables },
  ],
);

/**
 * @generated from message porter.v1.UpdateAppTemplateRequest
 */
export const UpdateAppTemplateRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateAppTemplateRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "app_template", kind: "message", T: PorterApp },
    { no: 4, name: "app_env", kind: "message", T: EnvGroupVariables },
    { no: 5, name: "addon_templates", kind: "message", T: AddonWithEnvVars, repeated: true },
    { no: 6, name: "base_deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.UpdateAppTemplateResponse
 */
export const UpdateAppTemplateResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateAppTemplateResponse",
  [],
);

/**
 * @generated from message porter.v1.LatestAddonsRequest
 */
export const LatestAddonsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.LatestAddonsRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 4, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message porter.v1.LatestAddonsResponse
 */
export const LatestAddonsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.LatestAddonsResponse",
  () => [
    { no: 1, name: "addons", kind: "message", T: Addon, repeated: true },
    { no: 2, name: "addons_with_env", kind: "message", T: AddonWithEnvVars, repeated: true },
  ],
);

/**
 * @generated from message porter.v1.PredeployStatusRequest
 */
export const PredeployStatusRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.PredeployStatusRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.PredeployStatusResponse
 */
export const PredeployStatusResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.PredeployStatusResponse",
  () => [
    { no: 1, name: "predeploy_status", kind: "enum", T: proto3.getEnumType(EnumPredeployStatus) },
  ],
);

/**
 * @generated from message porter.v1.DeploymentTargetDetailsRequest
 */
export const DeploymentTargetDetailsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeploymentTargetDetailsRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
  ],
);

/**
 * @generated from message porter.v1.DeploymentTargetDetailsResponse
 */
export const DeploymentTargetDetailsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeploymentTargetDetailsResponse",
  () => [
    { no: 1, name: "namespace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "is_preview", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "deployment_target_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "deployment_target", kind: "message", T: DeploymentTarget },
  ],
);

/**
 * CreateDeploymentTargetRequest is the request object for CreateDeploymentTarget
 *
 * @generated from message porter.v1.CreateDeploymentTargetRequest
 */
export const CreateDeploymentTargetRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CreateDeploymentTargetRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "namespace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "is_preview", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * CreateDeploymentTargetResponse is the response object for CreateDeploymentTarget
 *
 * @generated from message porter.v1.CreateDeploymentTargetResponse
 */
export const CreateDeploymentTargetResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CreateDeploymentTargetResponse",
  () => [
    { no: 1, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * DeploymentTargetsRequest is the request object for DeploymentTargets
 *
 * @generated from message porter.v1.DeploymentTargetsRequest
 */
export const DeploymentTargetsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeploymentTargetsRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * DeploymentTargetsResponse is the response object for DeploymentTargets
 *
 * @generated from message porter.v1.DeploymentTargetsResponse
 */
export const DeploymentTargetsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeploymentTargetsResponse",
  () => [
    { no: 1, name: "deployment_targets", kind: "message", T: DeploymentTarget, repeated: true },
  ],
);

/**
 * DefaultDeploymentTargetRequest is the request object for DefaultDeploymentTarget
 *
 * @generated from message porter.v1.DefaultDeploymentTargetRequest
 */
export const DefaultDeploymentTargetRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DefaultDeploymentTargetRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * DefaultDeploymentTargetResponse is the response object for DefaultDeploymentTarget
 *
 * @generated from message porter.v1.DefaultDeploymentTargetResponse
 */
export const DefaultDeploymentTargetResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DefaultDeploymentTargetResponse",
  () => [
    { no: 1, name: "deployment_target", kind: "message", T: DeploymentTarget },
  ],
);

/**
 * @generated from message porter.v1.SeedAppRevisionsRequest
 */
export const SeedAppRevisionsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.SeedAppRevisionsRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "release_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "source_namespace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "target_namespace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "use_health_helm_values", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "target_project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "target_cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "number_of_revisions", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "reset_count", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message porter.v1.SeedAppRevisionsResponse
 */
export const SeedAppRevisionsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.SeedAppRevisionsResponse",
  () => [
    { no: 1, name: "latest_revision_diff", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * EnvGroupVariablesRequest is the request object when retrieving the variables for a given EnvGroup
 *
 * @generated from message porter.v1.EnvGroupVariablesRequest
 */
export const EnvGroupVariablesRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.EnvGroupVariablesRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "env_group", kind: "message", T: EnvGroup },
    { no: 4, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
  ],
);

/**
 * EnvGroupVariablesResponse is the response object when retrieving the variables for a given EnvGroup
 *
 * @generated from message porter.v1.EnvGroupVariablesResponse
 */
export const EnvGroupVariablesResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.EnvGroupVariablesResponse",
  () => [
    { no: 1, name: "env_group_variables", kind: "message", T: EnvGroupVariables },
  ],
);

/**
 * LatestEnvGroupWithVariablesRequest is the request object when retrieving the latest EnvGroup and its variables for a given deployment target
 *
 * @generated from message porter.v1.LatestEnvGroupWithVariablesRequest
 */
export const LatestEnvGroupWithVariablesRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.LatestEnvGroupWithVariablesRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "env_group_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 5, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * LatestEnvGroupWithVariablesResponse is the response object when retrieving the latest EnvGroup and its variables for a given deployment target
 * Note: Secrets returned in this response will not be obfuscated in any way
 *
 * @generated from message porter.v1.LatestEnvGroupWithVariablesResponse
 */
export const LatestEnvGroupWithVariablesResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.LatestEnvGroupWithVariablesResponse",
  () => [
    { no: 1, name: "env_group", kind: "message", T: EnvGroup },
    { no: 2, name: "env_group_variables", kind: "message", T: EnvGroupVariables },
  ],
);

/**
 * AppEnvVariablesRequest is the request object for retrieving all of the latest env variables attached to an app
 *
 * @generated from message porter.v1.AppEnvVariablesRequest
 */
export const AppEnvVariablesRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AppEnvVariablesRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 4, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * AppEnvVariablesResponse is the response object for retrieving all of the latest env variables attached to an app
 * Note: Secrets returned in this response will not be obfuscated in any way
 *
 * @generated from message porter.v1.AppEnvVariablesResponse
 */
export const AppEnvVariablesResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AppEnvVariablesResponse",
  () => [
    { no: 1, name: "env_variables", kind: "message", T: EnvGroupVariables },
  ],
);

/**
 * @generated from message porter.v1.UpdateAppImageRequest
 */
export const UpdateAppImageRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateAppImageRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "repository_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "tag", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 7, name: "b64_description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.UpdateAppImageResponse
 */
export const UpdateAppImageResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateAppImageResponse",
  () => [
    { no: 1, name: "repository_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "tag", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.UpdateAppBuildSettingsRequest
 */
export const UpdateAppBuildSettingsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateAppBuildSettingsRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 4, name: "build", kind: "message", T: Build },
  ],
);

/**
 * @generated from message porter.v1.UpdateAppBuildSettingsResponse
 */
export const UpdateAppBuildSettingsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateAppBuildSettingsResponse",
  () => [
    { no: 1, name: "revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * UpdateAppsLinkedToEnvGroupRequest is the request object for UpdateAppsLinkedToEnvGroup
 *
 * @generated from message porter.v1.UpdateAppsLinkedToEnvGroupRequest
 */
export const UpdateAppsLinkedToEnvGroupRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateAppsLinkedToEnvGroupRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "env_group_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * UpdateAppsLinkedToEnvGroupResponse is the response object for UpdateAppsLinkedToEnvGroup
 *
 * @generated from message porter.v1.UpdateAppsLinkedToEnvGroupResponse
 */
export const UpdateAppsLinkedToEnvGroupResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateAppsLinkedToEnvGroupResponse",
  [],
);

/**
 * AppHelmValuesRequest is the request object when retrieving the helm values for a given app
 *
 * @generated from message porter.v1.AppHelmValuesRequest
 */
export const AppHelmValuesRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AppHelmValuesRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "with_defaults", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 6, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * AppHelmValuesResponse is the response object when retrieving the helm values for a given app
 *
 * @generated from message porter.v1.AppHelmValuesResponse
 */
export const AppHelmValuesResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AppHelmValuesResponse",
  () => [
    { no: 1, name: "b64_values", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ManualServiceRunRequest is the request object for ManualServiceRun
 *
 * @generated from message porter.v1.ManualServiceRunRequest
 */
export const ManualServiceRunRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ManualServiceRunRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "service_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "command", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 7, name: "image", kind: "message", T: AppImage },
  ],
);

/**
 * CancelJobRunRequest is the request object for CancelJobRun
 *
 * @generated from message porter.v1.CancelJobRunRequest
 */
export const CancelJobRunRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CancelJobRunRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 4, name: "job_run_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * CancelJobRunResponse is the response object for CancelJobRun
 *
 * @generated from message porter.v1.CancelJobRunResponse
 */
export const CancelJobRunResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CancelJobRunResponse",
  [],
);

/**
 * ManualServiceRunResponse is the response object for ManualServiceRun
 *
 * @generated from message porter.v1.ManualServiceRunResponse
 */
export const ManualServiceRunResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ManualServiceRunResponse",
  () => [
    { no: 1, name: "job_run_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "job_run_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * JobRunStatusRequest is the request object for JobRunStatus
 *
 * @generated from message porter.v1.JobRunStatusRequest
 */
export const JobRunStatusRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.JobRunStatusRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 2, name: "job_run_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * JobRunStatusResponse is the response object for JobRunStatus
 *
 * @generated from message porter.v1.JobRunStatusResponse
 */
export const JobRunStatusResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.JobRunStatusResponse",
  () => [
    { no: 1, name: "job_run", kind: "message", T: JobRun },
  ],
);

/**
 * JobRunsRequest is the request object for ListJobRuns
 *
 * @generated from message porter.v1.JobRunsRequest
 */
export const JobRunsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.JobRunsRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "job_service_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
  ],
);

/**
 * JobRunsResponse is the response object for ListJobRuns
 *
 * @generated from message porter.v1.JobRunsResponse
 */
export const JobRunsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.JobRunsResponse",
  () => [
    { no: 1, name: "job_runs", kind: "message", T: JobRun, repeated: true },
  ],
);

/**
 * ImagesRequest is the request object for listing images
 *
 * @generated from message porter.v1.ImagesRequest
 */
export const ImagesRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ImagesRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * ImagesResponse is the response object for listing images
 *
 * @generated from message porter.v1.ImagesResponse
 */
export const ImagesResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ImagesResponse",
  () => [
    { no: 1, name: "images", kind: "message", T: ImageInfo, repeated: true },
  ],
);

/**
 * CreateAppInstanceRequest is the request object for creating an app instance
 *
 * @generated from message porter.v1.CreateAppInstanceRequest
 */
export const CreateAppInstanceRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CreateAppInstanceRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 4, name: "porter_app_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * CreateAppInstanceResponse is the response object for creating an app instance
 *
 * @generated from message porter.v1.CreateAppInstanceResponse
 */
export const CreateAppInstanceResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CreateAppInstanceResponse",
  () => [
    { no: 1, name: "app_instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * DeleteAppInstanceRequest is the request object for deleting an app instance
 *
 * @generated from message porter.v1.DeleteAppInstanceRequest
 */
export const DeleteAppInstanceRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeleteAppInstanceRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
  ],
);

/**
 * DeleteAppInstanceResponse is the response object for deleting an app instance
 *
 * @generated from message porter.v1.DeleteAppInstanceResponse
 */
export const DeleteAppInstanceResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeleteAppInstanceResponse",
  [],
);

/**
 * ListAppInstanceRequest is the request object for listing app instances
 *
 * @generated from message porter.v1.ListAppInstancesRequest
 */
export const ListAppInstancesRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ListAppInstancesRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
  ],
);

/**
 * ListAppInstancesResponse is the response object for listing app instances
 *
 * @generated from message porter.v1.ListAppInstancesResponse
 */
export const ListAppInstancesResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ListAppInstancesResponse",
  () => [
    { no: 1, name: "app_instances", kind: "message", T: AppInstance, repeated: true },
  ],
);

/**
 * TemplateAppManifestsRequest is the request object for retrieving the manifests for a given app definition
 *
 * @generated from message porter.v1.TemplateAppManifestsRequest
 */
export const TemplateAppManifestsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.TemplateAppManifestsRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 4, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * TemplateAppManifestsResponse is the response object for retrieving the manifests for a given app definition
 *
 * @generated from message porter.v1.TemplateAppManifestsResponse
 */
export const TemplateAppManifestsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.TemplateAppManifestsResponse",
  () => [
    { no: 1, name: "base64_manifests", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.AppInstance
 */
export const AppInstance = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AppInstance",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "deployment_target_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "porter_app_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * CreateNotificationRequest is the request object for creating notifications
 *
 * @generated from message porter.v1.CreateNotificationRequest
 */
export const CreateNotificationRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CreateNotificationRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 4, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "service_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "app_revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "porter_agent_event_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "raw_summary", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "raw_detail", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "job_run_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "app_event_type", kind: "enum", T: proto3.getEnumType(AppEventType) },
  ],
);

/**
 * CreateNotificationResponse is the response object for creating notifications
 *
 * @generated from message porter.v1.CreateNotificationResponse
 */
export const CreateNotificationResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CreateNotificationResponse",
  [],
);

/**
 * UpdateServiceDeploymentStatusRequest is the request object for updating the deployment status of a service
 *
 * @generated from message porter.v1.UpdateServiceDeploymentStatusRequest
 */
export const UpdateServiceDeploymentStatusRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateServiceDeploymentStatusRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "deployment_target_identifier", kind: "message", T: DeploymentTargetIdentifier },
    { no: 3, name: "app_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "app_revision_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "service_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(EnumServiceDeploymentStatus) },
  ],
);

/**
 * RecordPrometheusAlertRequest is sent to record an alert sent from prometheus
 *
 * @generated from message porter.v1.RecordPrometheusAlertRequest
 */
export const RecordPrometheusAlertRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.RecordPrometheusAlertRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "alerts", kind: "message", T: Alert, repeated: true },
  ],
);

/**
 * RecordPrometheusAlertResponse is the response to a RecordPrometheusAlert request
 *
 * @generated from message porter.v1.RecordPrometheusAlertResponse
 */
export const RecordPrometheusAlertResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.RecordPrometheusAlertResponse",
  () => [
    { no: 1, name: "error", kind: "message", T: Error },
  ],
);

/**
 * UpdateServiceDeploymentStatusResponse is the response object for updating the deployment status of a service
 *
 * @generated from message porter.v1.UpdateServiceDeploymentStatusResponse
 */
export const UpdateServiceDeploymentStatusResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateServiceDeploymentStatusResponse",
  [],
);

/**
 * AreExternalEnvGroupProvidersEnabledRequest is the request object AreExternalEnvGroupProvidersEnabled
 *
 * @generated from message porter.v1.AreExternalEnvGroupProvidersEnabledRequest
 */
export const AreExternalEnvGroupProvidersEnabledRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AreExternalEnvGroupProvidersEnabledRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * AreExternalEnvGroupProvidersEnabledResponse is the response object for AreExternalEnvGroupProvidersEnabled
 *
 * @generated from message porter.v1.AreExternalEnvGroupProvidersEnabledResponse
 */
export const AreExternalEnvGroupProvidersEnabledResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AreExternalEnvGroupProvidersEnabledResponse",
  () => [
    { no: 1, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "reprovision_required", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "k8s_upgrade_required", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * EnableExternalEnvGroupProvidersRequest is the request object for EnableExternalEnvGroupProviders
 *
 * @generated from message porter.v1.EnableExternalEnvGroupProvidersRequest
 */
export const EnableExternalEnvGroupProvidersRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.EnableExternalEnvGroupProvidersRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * EnableExternalEnvGroupProvidersResponse is the response object for EnableExternalEnvGroupProviders
 *
 * @generated from message porter.v1.EnableExternalEnvGroupProvidersResponse
 */
export const EnableExternalEnvGroupProvidersResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.EnableExternalEnvGroupProvidersResponse",
  [],
);

/**
 * CreateOrUpdateEnvGroupRequest is the request object for CreateOrUpdateEnvGroup
 *
 * @generated from message porter.v1.CreateOrUpdateEnvGroupRequest
 */
export const CreateOrUpdateEnvGroupRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CreateOrUpdateEnvGroupRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "env_group_provider_type", kind: "enum", T: proto3.getEnumType(EnumEnvGroupProviderType) },
    { no: 4, name: "env_group_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "env_group_auth_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "env_vars", kind: "message", T: EnvGroupVariables },
    { no: 7, name: "is_env_override", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "env_variable_deletions", kind: "message", T: EnvVariableDeletions },
    { no: 9, name: "skip_app_auto_deploy", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * CreateOrUpdateEnvGroupResponse is the response object for CreateOrUpdateEnvGroup
 *
 * @generated from message porter.v1.CreateOrUpdateEnvGroupResponse
 */
export const CreateOrUpdateEnvGroupResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CreateOrUpdateEnvGroupResponse",
  [],
);

/**
 * DeleteEnvGroupRequest is the request object for DeleteEnvGroup
 *
 * @generated from message porter.v1.DeleteEnvGroupRequest
 */
export const DeleteEnvGroupRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeleteEnvGroupRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "env_group_provider_type", kind: "enum", T: proto3.getEnumType(EnumEnvGroupProviderType) },
    { no: 4, name: "env_group_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * DeleteEnvGroupResponse is the response object for DeleteEnvGroup
 *
 * @generated from message porter.v1.DeleteEnvGroupResponse
 */
export const DeleteEnvGroupResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeleteEnvGroupResponse",
  [],
);

/**
 * AppsLinkedToEnvGroupRequest is the request object for AppsLinkedToEnvGroup
 *
 * @generated from message porter.v1.AppsLinkedToEnvGroupRequest
 */
export const AppsLinkedToEnvGroupRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AppsLinkedToEnvGroupRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "env_group_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "ignore_preview", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * AppsLinkedToEnvGroupResponse is the response object for AppsLinkedToEnvGroup
 *
 * @generated from message porter.v1.AppsLinkedToEnvGroupResponse
 */
export const AppsLinkedToEnvGroupResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AppsLinkedToEnvGroupResponse",
  () => [
    { no: 1, name: "env_group_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "linked_apps", kind: "message", T: AppInstance, repeated: true },
  ],
);

/**
 * ListEnvGroupsRequest is the request object for ListEnvGroups.
 *
 * @generated from message porter.v1.ListEnvGroupsRequest
 */
export const ListEnvGroupsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ListEnvGroupsRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "include_secrets", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * ListEnvGroupsResponse is the response object for ListEnvGroups
 *
 * @generated from message porter.v1.ListEnvGroupsResponse
 */
export const ListEnvGroupsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ListEnvGroupsResponse",
  () => [
    { no: 1, name: "env_groups", kind: "message", T: EnvGroup, repeated: true },
  ],
);

/**
 * UpdateNotificationConfigRequest is the request object for UpdateNotificationConfig.
 *
 * @generated from message porter.v1.UpdateNotificationConfigRequest
 */
export const UpdateNotificationConfigRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateNotificationConfigRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "notification_config_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "config", kind: "message", T: NotificationConfig },
    { no: 4, name: "slack_integration_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * UpdateNotificationConfigResponse is the response object for UpdateNotificationConfig
 *
 * @generated from message porter.v1.UpdateNotificationConfigResponse
 */
export const UpdateNotificationConfigResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateNotificationConfigResponse",
  () => [
    { no: 1, name: "notification_config_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * NotificationConfigRequest is the request object for NotificationConfig.
 *
 * @generated from message porter.v1.NotificationConfigRequest
 */
export const NotificationConfigRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.NotificationConfigRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "notification_config_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * NotificationConfigResponse is the response object for NotificationConfig
 *
 * @generated from message porter.v1.NotificationConfigResponse
 */
export const NotificationConfigResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.NotificationConfigResponse",
  () => [
    { no: 1, name: "config", kind: "message", T: NotificationConfig },
  ],
);

/**
 * ConnectHostedProjectRequest is the request object for connecting a hosted project to a host cluster
 *
 * @generated from message porter.v1.ConnectHostedProjectRequest
 */
export const ConnectHostedProjectRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ConnectHostedProjectRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * ConnectHostedProjectResponse is the response object for connecting a hosted project to a host cluster
 *
 * @generated from message porter.v1.ConnectHostedProjectResponse
 */
export const ConnectHostedProjectResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ConnectHostedProjectResponse",
  () => [
    { no: 1, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * UpdateDatastoreRequest is the request object for creating or updating a datastore
 *
 * @generated from message porter.v1.UpdateDatastoreRequest
 */
export const UpdateDatastoreRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateDatastoreRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "datastore_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "datastore", kind: "message", T: ManagedDatastore },
  ],
);

/**
 * UpdateDatastoreResponse is the response object for updating a datastore
 *
 * @generated from message porter.v1.UpdateDatastoreResponse
 */
export const UpdateDatastoreResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.UpdateDatastoreResponse",
  [],
);

/**
 * DeleteDatastoreRequest is the request object for deleting a datastore
 *
 * @generated from message porter.v1.DeleteDatastoreRequest
 */
export const DeleteDatastoreRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeleteDatastoreRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "datastore_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * DeleteDatastoreResponse is the response object for deleting a datastore
 *
 * @generated from message porter.v1.DeleteDatastoreResponse
 */
export const DeleteDatastoreResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DeleteDatastoreResponse",
  [],
);

/**
 * CreateDatastoreProxyRequest is the request object for creating a datastore proxy
 *
 * @generated from message porter.v1.CreateDatastoreProxyRequest
 */
export const CreateDatastoreProxyRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CreateDatastoreProxyRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "datastore_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * CreateDatastoreProxyResponse is the response object for creating a datastore proxy
 *
 * @generated from message porter.v1.CreateDatastoreProxyResponse
 */
export const CreateDatastoreProxyResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CreateDatastoreProxyResponse",
  () => [
    { no: 1, name: "pod_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "credential", kind: "message", T: DatastoreCredential },
    { no: 3, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "namespace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * DatastoreCredentialRequest is the request object for getting a set of datastore credentials
 *
 * @generated from message porter.v1.DatastoreCredentialRequest
 */
export const DatastoreCredentialRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DatastoreCredentialRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "datastore_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * DatastoreCredentialResponse is the response object from getting a set of datastore credentials
 *
 * @generated from message porter.v1.DatastoreCredentialResponse
 */
export const DatastoreCredentialResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DatastoreCredentialResponse",
  () => [
    { no: 1, name: "credential", kind: "message", T: DatastoreCredential },
  ],
);

/**
 * PatchCloudContractRequest is the request object for patching a cloud contract by updating a resource
 *
 * @generated from message porter.v1.PatchCloudContractRequest
 */
export const PatchCloudContractRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.PatchCloudContractRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "operation", kind: "enum", T: proto3.getEnumType(EnumPatchCloudContractOperation) },
    { no: 3, name: "resource_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "resource_type", kind: "enum", T: proto3.getEnumType(EnumPatchCloudContractType) },
    { no: 5, name: "datastore", kind: "message", T: ManagedDatastore, oneof: "resource_values" },
  ],
);

/**
 * PatchCloudContractResponse is the response object from patching a cloud contract resource
 *
 * @generated from message porter.v1.PatchCloudContractResponse
 */
export const PatchCloudContractResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.PatchCloudContractResponse",
  () => [
    { no: 1, name: "cloud_contract", kind: "message", T: CloudContract },
  ],
);

/**
 * ReadCloudContractRequest is the request object for fetching a cloud contract
 *
 * @generated from message porter.v1.ReadCloudContractRequest
 */
export const ReadCloudContractRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ReadCloudContractRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * ReadCloudContractResponse is the response object from fetching a cloud contract
 *
 * @generated from message porter.v1.ReadCloudContractResponse
 */
export const ReadCloudContractResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ReadCloudContractResponse",
  () => [
    { no: 1, name: "cloud_contract", kind: "message", T: CloudContract },
  ],
);

/**
 * @generated from message porter.v1.EKSBearerTokenRequest
 * @deprecated
 */
export const EKSBearerTokenRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.EKSBearerTokenRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message porter.v1.EKSBearerTokenResponse
 * @deprecated
 */
export const EKSBearerTokenResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.EKSBearerTokenResponse",
  () => [
    { no: 1, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.CertificateAuthorityDataRequest
 * @deprecated
 */
export const CertificateAuthorityDataRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CertificateAuthorityDataRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message porter.v1.CertificateAuthorityDataResponse
 * @deprecated
 */
export const CertificateAuthorityDataResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.CertificateAuthorityDataResponse",
  () => [
    { no: 1, name: "certificate_authority_data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.AssumeRoleChainTargetsRequest
 * @deprecated
 */
export const AssumeRoleChainTargetsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AssumeRoleChainTargetsRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.AssumeRoleChainTargetsResponse
 * @deprecated
 */
export const AssumeRoleChainTargetsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AssumeRoleChainTargetsResponse",
  () => [
    { no: 1, name: "chain_links", kind: "message", T: AssumeRoleChainLink, repeated: true },
  ],
);

/**
 * @generated from message porter.v1.ECRTokenForRegistryRequest
 * @deprecated
 */
export const ECRTokenForRegistryRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ECRTokenForRegistryRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "region", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "aws_account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.ECRTokenForRegistryResponse
 * @deprecated
 */
export const ECRTokenForRegistryResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ECRTokenForRegistryResponse",
  () => [
    { no: 1, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "expiry", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message porter.v1.AssumeRoleCredentialsRequest
 * @deprecated
 */
export const AssumeRoleCredentialsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AssumeRoleCredentialsRequest",
  () => [
    { no: 1, name: "aws_account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message porter.v1.AssumeRoleCredentialsResponse
 * @deprecated
 */
export const AssumeRoleCredentialsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.AssumeRoleCredentialsResponse",
  () => [
    { no: 1, name: "aws_access_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "aws_secret_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "aws_session_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.DockerConfigFileForRegistryRequest
 * @deprecated
 */
export const DockerConfigFileForRegistryRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DockerConfigFileForRegistryRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "registry_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message porter.v1.DockerConfigFileForRegistryResponse
 * @deprecated
 */
export const DockerConfigFileForRegistryResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DockerConfigFileForRegistryResponse",
  () => [
    { no: 1, name: "docker_config_file", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * ClusterNetworkSettingsRequest is the request object for fetching cloud provider network settings for a cluster
 *
 * @generated from message porter.v1.ClusterNetworkSettingsRequest
 */
export const ClusterNetworkSettingsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ClusterNetworkSettingsRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * ClusterNetworkSettingsResponse is the response object containing cloud provider network settings for a cluster
 *
 * @generated from message porter.v1.ClusterNetworkSettingsResponse
 */
export const ClusterNetworkSettingsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ClusterNetworkSettingsResponse",
  () => [
    { no: 1, name: "region", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "subnet_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "cloud_provider", kind: "enum", T: proto3.getEnumType(EnumCloudProvider) },
    { no: 4, name: "eks_cloud_provider_network", kind: "message", T: AWSVpc, oneof: "cloud_provider_network" },
  ],
);

/**
 * ListDatastoresRequest is the request object for getting a list of datastores for a given project/account
 *
 * @generated from message porter.v1.ListDatastoresRequest
 */
export const ListDatastoresRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ListDatastoresRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cloud_provider", kind: "enum", T: proto3.getEnumType(EnumCloudProvider) },
    { no: 3, name: "cloud_provider_account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "type", kind: "enum", T: proto3.getEnumType(EnumDatastore), opt: true },
    { no: 5, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "include_env_group", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "include_metadata", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * ListDatastoresResponse is the response object containing a list of datastores
 *
 * @generated from message porter.v1.ListDatastoresResponse
 */
export const ListDatastoresResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.ListDatastoresResponse",
  () => [
    { no: 1, name: "datastores", kind: "message", T: Datastore, repeated: true },
  ],
);

/**
 * DatastoreStatusRequest is the request object for fetching the status of a datastore in on a cluster
 *
 * @generated from message porter.v1.DatastoreStatusRequest
 */
export const DatastoreStatusRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DatastoreStatusRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "type", kind: "enum", T: proto3.getEnumType(EnumDatastore) },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * DatastoreStatusResponse is the response object containing the status of the datastore
 *
 * @generated from message porter.v1.DatastoreStatusResponse
 */
export const DatastoreStatusResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DatastoreStatusResponse",
  () => [
    { no: 1, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * deprecated; use ManagedDatastore instead
 *
 * @generated from message porter.v1.Datastore
 * @deprecated
 */
export const Datastore = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.Datastore",
  () => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(EnumDatastore) },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "metadata", kind: "message", T: DatastoreMetadata, repeated: true },
    { no: 4, name: "env", kind: "message", T: EnvGroup },
    { no: 5, name: "connected_cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * DatastoreMetadata represents an object containing metadata for a given datastore
 *
 * @generated from message porter.v1.DatastoreMetadata
 */
export const DatastoreMetadata = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.DatastoreMetadata",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * RegistryStatusRequest is the request object for fetching the status of a docker registry associated to a project
 *
 * @generated from message porter.v1.RegistryStatusRequest
 */
export const RegistryStatusRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.RegistryStatusRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "registry_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * RegistryStatusResponse is the response object containing the status of the docker registry
 *
 * @generated from message porter.v1.RegistryStatusResponse
 */
export const RegistryStatusResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.RegistryStatusResponse",
  () => [
    { no: 1, name: "is_vulnerability_scanning_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * SharedNetworkSettingsRequest is the request object for fetching cloud provider network settings for where a service should be provisioned relative to a cluster
 *
 * @generated from message porter.v1.SharedNetworkSettingsRequest
 */
export const SharedNetworkSettingsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.SharedNetworkSettingsRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "service_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * SharedNetworkSettingsResponse is the response object containing cloud provider network settings for a service provisioned relative to a cluster
 *
 * @generated from message porter.v1.SharedNetworkSettingsResponse
 */
export const SharedNetworkSettingsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.SharedNetworkSettingsResponse",
  () => [
    { no: 1, name: "region", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "cidr_range", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "subnet_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "cloud_provider", kind: "enum", T: proto3.getEnumType(EnumCloudProvider) },
    { no: 5, name: "eks_cloud_provider_network", kind: "message", T: AWSVpc, oneof: "cloud_provider_network" },
  ],
);

/**
 * SystemStatusHistoryRequest is the request object for fetching the system status history in a cluster
 *
 * @generated from message porter.v1.SystemStatusHistoryRequest
 */
export const SystemStatusHistoryRequest = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.SystemStatusHistoryRequest",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "cluster_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "cloud_provider", kind: "enum", T: proto3.getEnumType(EnumCloudProvider) },
  ],
);

/**
 * SystemStatusHistoryResponse is the response object for fetching the system status history in a cluster
 *
 * @generated from message porter.v1.SystemStatusHistoryResponse
 */
export const SystemStatusHistoryResponse = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.SystemStatusHistoryResponse",
  () => [
    { no: 1, name: "cluster_status_history", kind: "message", T: ClusterStatus, repeated: true },
    { no: 2, name: "system_service_status_histories", kind: "message", T: SystemServiceStatusHistory, repeated: true },
  ],
);

