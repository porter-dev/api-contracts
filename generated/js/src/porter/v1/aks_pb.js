// @generated by protoc-gen-es v1.1.0
// @generated from file porter/v1/aks.proto (package porter.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum porter.v1.NodePoolType
 */
export const NodePoolType = proto3.makeEnum(
  "porter.v1.NodePoolType",
  [
    {no: 0, name: "NODE_POOL_TYPE_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "NODE_POOL_TYPE_SYSTEM", localName: "SYSTEM"},
    {no: 2, name: "NODE_POOL_TYPE_MONITORING", localName: "MONITORING"},
    {no: 3, name: "NODE_POOL_TYPE_APPLICATION", localName: "APPLICATION"},
    {no: 4, name: "NODE_POOL_TYPE_CUSTOM", localName: "CUSTOM"},
  ],
);

/**
 * @generated from message porter.v1.AKS
 */
export const AKS = proto3.makeMessageType(
  "porter.v1.AKS",
  () => [
    { no: 1, name: "cluster_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "cluster_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "cidr_range", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "location", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "node_pools", kind: "message", T: AKSNodePool, repeated: true },
  ],
);

/**
 * @generated from message porter.v1.AKSNodePool
 */
export const AKSNodePool = proto3.makeMessageType(
  "porter.v1.AKSNodePool",
  () => [
    { no: 1, name: "instance_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "min_instances", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "max_instances", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "mode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "node_pool_type", kind: "enum", T: proto3.getEnumType(NodePoolType) },
  ],
);

