// @generated by protoc-gen-es v1.6.0
// @generated from file porter/v1/system_service.proto (package porter.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";
import { InvolvedObjectType } from "./prometheus_alerts_pb.js";

/**
 * Status represents the health status of a service
 *
 * @generated from enum porter.v1.Status
 */
export const Status = proto3.makeEnum(
  "porter.v1.Status",
  [
    {no: 0, name: "STATUS_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "STATUS_HEALTHY", localName: "HEALTHY"},
    {no: 2, name: "STATUS_PARTIAL_FAILURE", localName: "PARTIAL_FAILURE"},
    {no: 3, name: "STATUS_FAILURE", localName: "FAILURE"},
  ],
);

/**
 * ClusterHealthType represents types of health history we generate for the cluster
 *
 * @generated from enum porter.v1.ClusterHealthType
 */
export const ClusterHealthType = proto3.makeEnum(
  "porter.v1.ClusterHealthType",
  [
    {no: 0, name: "CLUSTER_HEALTH_TYPE_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "CLUSTER_HEALTH_TYPE_CONNECTED", localName: "CONNECTED"},
    {no: 2, name: "CLUSTER_HEALTH_TYPE_PINGABLE", localName: "PINGABLE"},
    {no: 3, name: "CLUSTER_HEALTH_TYPE_METRICS_HEALTHY", localName: "METRICS_HEALTHY"},
  ],
);

/**
 * SystemService identifies a system service by its name, namespace and the type of k8s object it runs
 *
 * @generated from message porter.v1.SystemService
 */
export const SystemService = proto3.makeMessageType(
  "porter.v1.SystemService",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "namespace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "involved_object_type", kind: "enum", T: proto3.getEnumType(InvolvedObjectType) },
  ],
);

/**
 * HealthStatus is a single status observed over a certain period of time
 *
 * @generated from message porter.v1.HealthStatus
 */
export const HealthStatus = proto3.makeMessageType(
  "porter.v1.HealthStatus",
  () => [
    { no: 1, name: "start_time", kind: "message", T: Timestamp },
    { no: 2, name: "end_time", kind: "message", T: Timestamp, opt: true },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(Status) },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * StatusPercentage is the percentage in a day that a certain status was observed
 *
 * @generated from message porter.v1.StatusPercentage
 */
export const StatusPercentage = proto3.makeMessageType(
  "porter.v1.StatusPercentage",
  () => [
    { no: 1, name: "status", kind: "enum", T: proto3.getEnumType(Status) },
    { no: 2, name: "percentage", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ],
);

/**
 * DailyHealthStatus represents health status over a day
 *
 * @generated from message porter.v1.DailyHealthStatus
 */
export const DailyHealthStatus = proto3.makeMessageType(
  "porter.v1.DailyHealthStatus",
  () => [
    { no: 1, name: "status_percentages", kind: "message", T: StatusPercentage, repeated: true },
    { no: 2, name: "health_statuses", kind: "message", T: HealthStatus, repeated: true },
  ],
);

/**
 * SystemServiceStatusHistory holds the health status history for a particular system service over multiple days
 *
 * @generated from message porter.v1.SystemServiceStatusHistory
 */
export const SystemServiceStatusHistory = proto3.makeMessageType(
  "porter.v1.SystemServiceStatusHistory",
  () => [
    { no: 1, name: "system_service", kind: "message", T: SystemService },
    { no: 2, name: "daily_status_history", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "message", T: DailyHealthStatus} },
  ],
);

/**
 * ClusterStatusHistory holds health status history of a certain type for a cluster
 *
 * @generated from message porter.v1.ClusterStatusHistory
 */
export const ClusterStatusHistory = proto3.makeMessageType(
  "porter.v1.ClusterStatusHistory",
  () => [
    { no: 1, name: "cluster_health_type", kind: "enum", T: proto3.getEnumType(ClusterHealthType) },
    { no: 2, name: "daily_status_history", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "message", T: DailyHealthStatus} },
  ],
);

