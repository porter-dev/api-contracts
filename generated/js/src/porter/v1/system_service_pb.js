// @generated by protoc-gen-es v1.8.0
// @generated from file porter/v1/system_service.proto (package porter.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { InvolvedObjectType } from "./prometheus_alerts_pb.js";

/**
 * ServiceStatus represents the status of a service
 *
 * @generated from enum porter.v1.ServiceStatus
 */
export const ServiceStatus = /*@__PURE__*/ proto3.makeEnum(
  "porter.v1.ServiceStatus",
  [
    {no: 0, name: "SERVICE_STATUS_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "SERVICE_STATUS_HEALTHY", localName: "HEALTHY"},
    {no: 2, name: "SERVICE_STATUS_PARTIAL_FAILURE", localName: "PARTIAL_FAILURE"},
    {no: 3, name: "SERVICE_STATUS_FAILURE", localName: "FAILURE"},
  ],
);

/**
 * SystemService identifies a system service by its name, namespace and the type of k8s object it runs
 *
 * @generated from message porter.v1.SystemService
 */
export const SystemService = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.SystemService",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "namespace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "involved_object_type", kind: "enum", T: proto3.getEnumType(InvolvedObjectType) },
  ],
);

/**
 * SystemServiceStatus is the status for a single system service
 *
 * @generated from message porter.v1.SystemServiceStatus
 */
export const SystemServiceStatus = /*@__PURE__*/ proto3.makeMessageType(
  "porter.v1.SystemServiceStatus",
  () => [
    { no: 1, name: "system_service", kind: "message", T: SystemService },
    { no: 2, name: "service_status", kind: "enum", T: proto3.getEnumType(ServiceStatus) },
  ],
);

