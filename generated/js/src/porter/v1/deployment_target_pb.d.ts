// @generated by protoc-gen-es v1.9.0
// @generated from file porter/v1/deployment_target.proto (package porter.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * DeploymentTargetIdentifier is the object that identifies a deployment target. One of id or name must be provided, with id taking precedence.
 *
 * @generated from message porter.v1.DeploymentTargetIdentifier
 */
export declare class DeploymentTargetIdentifier extends Message<DeploymentTargetIdentifier> {
  /**
   * id is the id of the deployment target
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * name is the name of the deployment target
   *
   * @generated from field: string name = 2;
   */
  name: string;

  constructor(data?: PartialMessage<DeploymentTargetIdentifier>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeploymentTargetIdentifier";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeploymentTargetIdentifier;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeploymentTargetIdentifier;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeploymentTargetIdentifier;

  static equals(a: DeploymentTargetIdentifier | PlainMessage<DeploymentTargetIdentifier> | undefined, b: DeploymentTargetIdentifier | PlainMessage<DeploymentTargetIdentifier> | undefined): boolean;
}

/**
 * @generated from message porter.v1.DeploymentTarget
 */
export declare class DeploymentTarget extends Message<DeploymentTarget> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * name is the vanity name for the deployment target
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * namespace is the namespace that the deployment target points to
   *
   * @generated from field: string namespace = 3;
   */
  namespace: string;

  /**
   * cluster_id is the id of the cluster that the deployment target points to
   *
   * @generated from field: int64 cluster_id = 4;
   */
  clusterId: bigint;

  /**
   * is_preview indicates whether this is a preview deployment target or not
   *
   * @generated from field: bool is_preview = 5;
   */
  isPreview: boolean;

  /**
   * is_default indicates whether this is the default deployment target for the cluster
   *
   * @generated from field: bool is_default = 6;
   */
  isDefault: boolean;

  /**
   * id is the id of the deployment target
   *
   * @generated from field: string id = 7;
   */
  id: string;

  /**
   * metadata is the metadata for the deployment target, if any
   *
   * @generated from field: porter.v1.DeploymentTargetMeta metadata = 8;
   */
  metadata?: DeploymentTargetMeta;

  constructor(data?: PartialMessage<DeploymentTarget>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeploymentTarget";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeploymentTarget;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeploymentTarget;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeploymentTarget;

  static equals(a: DeploymentTarget | PlainMessage<DeploymentTarget> | undefined, b: DeploymentTarget | PlainMessage<DeploymentTarget> | undefined): boolean;
}

/**
 * @generated from message porter.v1.DeploymentTargetMeta
 */
export declare class DeploymentTargetMeta extends Message<DeploymentTargetMeta> {
  /**
   * pull_request is information about the pull request that triggered the deployment, if applicable
   *
   * @generated from field: porter.v1.PullRequest pull_request = 1;
   */
  pullRequest?: PullRequest;

  constructor(data?: PartialMessage<DeploymentTargetMeta>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeploymentTargetMeta";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeploymentTargetMeta;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeploymentTargetMeta;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeploymentTargetMeta;

  static equals(a: DeploymentTargetMeta | PlainMessage<DeploymentTargetMeta> | undefined, b: DeploymentTargetMeta | PlainMessage<DeploymentTargetMeta> | undefined): boolean;
}

/**
 * @generated from message porter.v1.PullRequest
 */
export declare class PullRequest extends Message<PullRequest> {
  /**
   * repository is the repository that the pull request is in
   *
   * @generated from field: string repository = 1;
   */
  repository: string;

  /**
   * number is the number of the pull request
   *
   * @generated from field: int64 number = 2;
   */
  number: bigint;

  /**
   * head_ref is the head ref of the pull request
   *
   * @generated from field: string head_ref = 3;
   */
  headRef: string;

  constructor(data?: PartialMessage<PullRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.PullRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PullRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PullRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PullRequest;

  static equals(a: PullRequest | PlainMessage<PullRequest> | undefined, b: PullRequest | PlainMessage<PullRequest> | undefined): boolean;
}

