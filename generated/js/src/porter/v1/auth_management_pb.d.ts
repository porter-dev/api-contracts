// @generated by protoc-gen-es v1.2.0
// @generated from file porter/v1/auth_management.proto (package porter.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message porter.v1.APITokenRequest
 */
export declare class APITokenRequest extends Message<APITokenRequest> {
  /**
   * project_id is the only project which the requested token will have access to
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  constructor(data?: PartialMessage<APITokenRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.APITokenRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): APITokenRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): APITokenRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): APITokenRequest;

  static equals(a: APITokenRequest | PlainMessage<APITokenRequest> | undefined, b: APITokenRequest | PlainMessage<APITokenRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.APITokenResponse
 */
export declare class APITokenResponse extends Message<APITokenResponse> {
  /**
   * token is a Bearer token which can be used for accessing the Porter API. This will only be able to access the given project from the request.
   *
   * @generated from field: string token = 1;
   */
  token: string;

  constructor(data?: PartialMessage<APITokenResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.APITokenResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): APITokenResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): APITokenResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): APITokenResponse;

  static equals(a: APITokenResponse | PlainMessage<APITokenResponse> | undefined, b: APITokenResponse | PlainMessage<APITokenResponse> | undefined): boolean;
}

