// @generated by protoc-gen-es v1.2.0
// @generated from file porter/v1/eks.proto (package porter.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum porter.v1.NodeGroupType
 */
export declare enum NodeGroupType {
  /**
   * @generated from enum value: NODE_GROUP_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: NODE_GROUP_TYPE_SYSTEM = 1;
   */
  SYSTEM = 1,

  /**
   * @generated from enum value: NODE_GROUP_TYPE_MONITORING = 2;
   */
  MONITORING = 2,

  /**
   * @generated from enum value: NODE_GROUP_TYPE_APPLICATION = 3;
   */
  APPLICATION = 3,

  /**
   * @generated from enum value: NODE_GROUP_TYPE_CUSTOM = 4;
   */
  CUSTOM = 4,
}

/**
 * @generated from message porter.v1.EKS
 */
export declare class EKS extends Message<EKS> {
  /**
   * @generated from field: string cluster_name = 1;
   */
  clusterName: string;

  /**
   * @generated from field: string cluster_version = 2;
   */
  clusterVersion: string;

  /**
   * @generated from field: string cidr_range = 3;
   */
  cidrRange: string;

  /**
   * @generated from field: string region = 4;
   */
  region: string;

  /**
   * @generated from field: repeated porter.v1.EKSNodeGroup node_groups = 5;
   */
  nodeGroups: EKSNodeGroup[];

  constructor(data?: PartialMessage<EKS>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.EKS";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EKS;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EKS;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EKS;

  static equals(a: EKS | PlainMessage<EKS> | undefined, b: EKS | PlainMessage<EKS> | undefined): boolean;
}

/**
 * @generated from message porter.v1.EKSNodeGroup
 */
export declare class EKSNodeGroup extends Message<EKSNodeGroup> {
  /**
   * @generated from field: string instance_type = 1;
   */
  instanceType: string;

  /**
   * @generated from field: uint32 min_instances = 2;
   */
  minInstances: number;

  /**
   * @generated from field: uint32 max_instances = 3;
   */
  maxInstances: number;

  /**
   * @generated from field: porter.v1.NodeGroupType node_group_type = 4;
   */
  nodeGroupType: NodeGroupType;

  /**
   * @generated from field: bool is_stateful = 5;
   */
  isStateful: boolean;

  constructor(data?: PartialMessage<EKSNodeGroup>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.EKSNodeGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EKSNodeGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EKSNodeGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EKSNodeGroup;

  static equals(a: EKSNodeGroup | PlainMessage<EKSNodeGroup> | undefined, b: EKSNodeGroup | PlainMessage<EKSNodeGroup> | undefined): boolean;
}

