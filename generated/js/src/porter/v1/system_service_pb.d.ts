// @generated by protoc-gen-es v1.8.0
// @generated from file porter/v1/system_service.proto (package porter.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { InvolvedObjectType } from "./prometheus_alerts_pb.js";

/**
 * ServiceStatus represents the status of a service
 *
 * @generated from enum porter.v1.ServiceStatus
 */
export declare enum ServiceStatus {
  /**
   * SERVICE_STATUS_UNSPECIFIED is the default value
   *
   * @generated from enum value: SERVICE_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * SERVICE_STATUS_HEALTHY is the value for a fully healthy service
   *
   * @generated from enum value: SERVICE_STATUS_HEALTHY = 1;
   */
  HEALTHY = 1,

  /**
   * SERVICE_STATUS_PARTIAL_FAILURE is the health status for a partially failed service
   *
   * @generated from enum value: SERVICE_STATUS_PARTIAL_FAILURE = 2;
   */
  PARTIAL_FAILURE = 2,

  /**
   * SERVICE_STATUS_FAILURE is the health status for a fully failed service
   *
   * @generated from enum value: SERVICE_STATUS_FAILURE = 3;
   */
  FAILURE = 3,
}

/**
 * SystemService identifies a system service by its name, namespace and the type of k8s object it runs
 *
 * @generated from message porter.v1.SystemService
 */
export declare class SystemService extends Message<SystemService> {
  /**
   * name is the name of the service
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * namespace is the namespace where it is deployed
   *
   * @generated from field: string namespace = 2;
   */
  namespace: string;

  /**
   * involved_object_type is the k8s object type the service runs
   *
   * @generated from field: porter.v1.InvolvedObjectType involved_object_type = 3;
   */
  involvedObjectType: InvolvedObjectType;

  constructor(data?: PartialMessage<SystemService>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.SystemService";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SystemService;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SystemService;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SystemService;

  static equals(a: SystemService | PlainMessage<SystemService> | undefined, b: SystemService | PlainMessage<SystemService> | undefined): boolean;
}

/**
 * SystemServiceStatus is the status for a single system service
 *
 * @generated from message porter.v1.SystemServiceStatus
 */
export declare class SystemServiceStatus extends Message<SystemServiceStatus> {
  /**
   * system_service identifies the service in question
   *
   * @generated from field: porter.v1.SystemService system_service = 1;
   */
  systemService?: SystemService;

  /**
   * service_status gives the status for the system service identified by system_service
   *
   * @generated from field: porter.v1.ServiceStatus service_status = 2;
   */
  serviceStatus: ServiceStatus;

  constructor(data?: PartialMessage<SystemServiceStatus>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.SystemServiceStatus";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SystemServiceStatus;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SystemServiceStatus;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SystemServiceStatus;

  static equals(a: SystemServiceStatus | PlainMessage<SystemServiceStatus> | undefined, b: SystemServiceStatus | PlainMessage<SystemServiceStatus> | undefined): boolean;
}

