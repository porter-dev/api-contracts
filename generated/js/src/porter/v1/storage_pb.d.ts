// @generated by protoc-gen-es v1.10.0
// @generated from file porter/v1/storage.proto (package porter.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { EnumCloudProvider } from "./cluster_pb.js";
import type { ConnectedClusters } from "./datastore_pb.js";

/**
 * @generated from enum porter.v1.EnumStorageKind
 */
export declare enum EnumStorageKind {
  /**
   * @generated from enum value: ENUM_STORAGE_KIND_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ENUM_STORAGE_KIND_SHARED_FILE_SYSTEM = 1;
   */
  SHARED_FILE_SYSTEM = 1,

  /**
   * @generated from enum value: ENUM_STORAGE_KIND_OBJECT_STORAGE = 2;
   */
  OBJECT_STORAGE = 2,
}

/**
 * @generated from enum porter.v1.EnumSharedFileSystemEngine
 */
export declare enum EnumSharedFileSystemEngine {
  /**
   * @generated from enum value: ENUM_SHARED_FILE_SYSTEM_ENGINE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ENUM_SHARED_FILE_SYSTEM_ENGINE_AWS_EFS = 1;
   */
  AWS_EFS = 1,

  /**
   * @generated from enum value: ENUM_SHARED_FILE_SYSTEM_ENGINE_AZURE_FILES = 2;
   */
  AZURE_FILES = 2,

  /**
   * @generated from enum value: ENUM_SHARED_FILE_SYSTEM_ENGINE_GCP_FILESTORE = 3;
   */
  GCP_FILESTORE = 3,
}

/**
 * @generated from enum porter.v1.EnumObjectStorageEngine
 */
export declare enum EnumObjectStorageEngine {
  /**
   * @generated from enum value: ENUM_OBJECT_STORAGE_ENGINE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ENUM_OBJECT_STORAGE_ENGINE_AWS_S3 = 1;
   */
  AWS_S3 = 1,

  /**
   * @generated from enum value: ENUM_OBJECT_STORAGE_ENGINE_AZURE_BLOB_STORAGE = 2;
   */
  AZURE_BLOB_STORAGE = 2,

  /**
   * @generated from enum value: ENUM_OBJECT_STORAGE_ENGINE_GCP_FILESTORE = 3;
   */
  GCP_FILESTORE = 3,
}

/**
 * @generated from message porter.v1.Storage
 */
export declare class Storage extends Message<Storage> {
  /**
   * id represents the id of the storage resource. This is required for update operations, but should be left blank when creating a storage resource
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * cloud_provider represents the provider that the storage resource is provisioned in
   *
   * @generated from field: porter.v1.EnumCloudProvider cloud_provider = 2;
   */
  cloudProvider: EnumCloudProvider;

  /**
   * cloud_provider_credential_identifier is the credential used to provision the storage resource
   *
   * @generated from field: string cloud_provider_credential_identifier = 3;
   */
  cloudProviderCredentialIdentifier: string;

  /**
   * region is the region the storage resource is provisioned in
   *
   * @generated from field: string region = 4;
   */
  region: string;

  /**
   * name is the name of the storage resource
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * kind represents the type of the storage resource
   *
   * @generated from field: porter.v1.EnumStorageKind kind = 6;
   */
  kind: EnumStorageKind;

  /**
   * kind_values are the required values depending on kind
   *
   * @generated from oneof porter.v1.Storage.kind_values
   */
  kindValues: {
    /**
     * @generated from field: porter.v1.SharedFileSystem shared_file_system_kind = 14;
     */
    value: SharedFileSystem;
    case: "sharedFileSystemKind";
  } | {
    /**
     * @generated from field: porter.v1.ObjectStorage object_storage_kind = 15;
     */
    value: ObjectStorage;
    case: "objectStorageKind";
  } | { case: undefined; value?: undefined };

  /**
   * connected_clusters describes the connection of this storage resource to clusters
   *
   * @generated from field: porter.v1.ConnectedClusters connected_clusters = 8;
   */
  connectedClusters?: ConnectedClusters;

  constructor(data?: PartialMessage<Storage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.Storage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Storage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Storage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Storage;

  static equals(a: Storage | PlainMessage<Storage> | undefined, b: Storage | PlainMessage<Storage> | undefined): boolean;
}

/**
 * @generated from message porter.v1.SharedFileSystem
 */
export declare class SharedFileSystem extends Message<SharedFileSystem> {
  /**
   * @generated from field: porter.v1.EnumSharedFileSystemEngine engine = 1;
   */
  engine: EnumSharedFileSystemEngine;

  constructor(data?: PartialMessage<SharedFileSystem>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.SharedFileSystem";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SharedFileSystem;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SharedFileSystem;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SharedFileSystem;

  static equals(a: SharedFileSystem | PlainMessage<SharedFileSystem> | undefined, b: SharedFileSystem | PlainMessage<SharedFileSystem> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ObjectStorage
 */
export declare class ObjectStorage extends Message<ObjectStorage> {
  /**
   * @generated from field: porter.v1.EnumObjectStorageEngine engine = 1;
   */
  engine: EnumObjectStorageEngine;

  constructor(data?: PartialMessage<ObjectStorage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ObjectStorage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObjectStorage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObjectStorage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObjectStorage;

  static equals(a: ObjectStorage | PlainMessage<ObjectStorage> | undefined, b: ObjectStorage | PlainMessage<ObjectStorage> | undefined): boolean;
}

