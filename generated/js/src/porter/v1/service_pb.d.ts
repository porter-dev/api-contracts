// @generated by protoc-gen-es v1.3.0
// @generated from file porter/v1/service.proto (package porter.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum porter.v1.ServiceType
 */
export declare enum ServiceType {
  /**
   * @generated from enum value: SERVICE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SERVICE_TYPE_WEB = 1;
   */
  WEB = 1,

  /**
   * @generated from enum value: SERVICE_TYPE_WORKER = 2;
   */
  WORKER = 2,

  /**
   * @generated from enum value: SERVICE_TYPE_JOB = 3;
   */
  JOB = 3,
}

/**
 * @generated from message porter.v1.Service
 */
export declare class Service extends Message<Service> {
  /**
   * @generated from field: string run = 1;
   */
  run: string;

  /**
   * @generated from oneof porter.v1.Service.config
   */
  config: {
    /**
     * @generated from field: porter.v1.WebServiceConfig web_config = 2;
     */
    value: WebServiceConfig;
    case: "webConfig";
  } | {
    /**
     * @generated from field: porter.v1.WorkerServiceConfig worker_config = 3;
     */
    value: WorkerServiceConfig;
    case: "workerConfig";
  } | {
    /**
     * @generated from field: porter.v1.JobServiceConfig job_config = 4;
     */
    value: JobServiceConfig;
    case: "jobConfig";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: porter.v1.ServiceType type = 5;
   */
  type: ServiceType;

  constructor(data?: PartialMessage<Service>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.Service";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Service;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Service;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Service;

  static equals(a: Service | PlainMessage<Service> | undefined, b: Service | PlainMessage<Service> | undefined): boolean;
}

/**
 * @generated from message porter.v1.WebServiceConfig
 */
export declare class WebServiceConfig extends Message<WebServiceConfig> {
  /**
   * @generated from field: string replica_count = 1;
   */
  replicaCount: string;

  /**
   * @generated from field: porter.v1.Resources resources = 2;
   */
  resources?: Resources;

  constructor(data?: PartialMessage<WebServiceConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.WebServiceConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WebServiceConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WebServiceConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WebServiceConfig;

  static equals(a: WebServiceConfig | PlainMessage<WebServiceConfig> | undefined, b: WebServiceConfig | PlainMessage<WebServiceConfig> | undefined): boolean;
}

/**
 * @generated from message porter.v1.WorkerServiceConfig
 */
export declare class WorkerServiceConfig extends Message<WorkerServiceConfig> {
  /**
   * @generated from field: string replica_count = 1;
   */
  replicaCount: string;

  /**
   * @generated from field: porter.v1.Resources resources = 2;
   */
  resources?: Resources;

  constructor(data?: PartialMessage<WorkerServiceConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.WorkerServiceConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WorkerServiceConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WorkerServiceConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WorkerServiceConfig;

  static equals(a: WorkerServiceConfig | PlainMessage<WorkerServiceConfig> | undefined, b: WorkerServiceConfig | PlainMessage<WorkerServiceConfig> | undefined): boolean;
}

/**
 * @generated from message porter.v1.JobServiceConfig
 */
export declare class JobServiceConfig extends Message<JobServiceConfig> {
  /**
   * @generated from field: porter.v1.Resources resources = 1;
   */
  resources?: Resources;

  constructor(data?: PartialMessage<JobServiceConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.JobServiceConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobServiceConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobServiceConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobServiceConfig;

  static equals(a: JobServiceConfig | PlainMessage<JobServiceConfig> | undefined, b: JobServiceConfig | PlainMessage<JobServiceConfig> | undefined): boolean;
}

/**
 * @generated from message porter.v1.RequestResources
 */
export declare class RequestResources extends Message<RequestResources> {
  /**
   * @generated from field: string cpu = 1;
   */
  cpu: string;

  /**
   * @generated from field: string memory = 2;
   */
  memory: string;

  constructor(data?: PartialMessage<RequestResources>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.RequestResources";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestResources;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestResources;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestResources;

  static equals(a: RequestResources | PlainMessage<RequestResources> | undefined, b: RequestResources | PlainMessage<RequestResources> | undefined): boolean;
}

/**
 * @generated from message porter.v1.Resources
 */
export declare class Resources extends Message<Resources> {
  /**
   * @generated from field: porter.v1.RequestResources requests = 1;
   */
  requests?: RequestResources;

  constructor(data?: PartialMessage<Resources>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.Resources";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resources;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resources;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resources;

  static equals(a: Resources | PlainMessage<Resources> | undefined, b: Resources | PlainMessage<Resources> | undefined): boolean;
}

