// @generated by protoc-gen-es v1.4.0
// @generated from file porter/v1/cluster_control_plane.proto (package porter.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { EnumCloudProvider } from "./cluster_pb.js";
import type { GKEPreflightValues } from "./gke_pb.js";
import type { AWSVpc, EKSPreflightValues } from "./eks_pb.js";
import type { Error } from "./errors_pb.js";
import type { Contract, ContractRevision } from "./contract_pb.js";
import type { Deletions, EnvGroup, EnvGroupVariables, PorterApp } from "./porter_app_pb.js";
import type { AssumeRoleChainLink } from "./aws_assume_role_pb.js";

/**
 * @generated from enum porter.v1.EnumPredeployStatus
 */
export declare enum EnumPredeployStatus {
  /**
   * @generated from enum value: ENUM_PREDEPLOY_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * ENUM_PREDEPLOY_STATUS_IN_PROGRESS signifies the predeploy is still in progress.
   *
   * @generated from enum value: ENUM_PREDEPLOY_STATUS_IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * ENUM_PREDEPLOY_STATUS_FAILED signifies the predeploy job failed.
   *
   * @generated from enum value: ENUM_PREDEPLOY_STATUS_FAILED = 2;
   */
  FAILED = 2,

  /**
   * ENUM_PREDEPLOY_STATUS_SUCCESSFUL signifies the predeploy job was successful.
   *
   * @generated from enum value: ENUM_PREDEPLOY_STATUS_SUCCESSFUL = 3;
   */
  SUCCESSFUL = 3,
}

/**
 * @generated from enum porter.v1.EnumQuotaIncrease
 */
export declare enum EnumQuotaIncrease {
  /**
   * @generated from enum value: ENUM_QUOTA_INCREASE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * ENUM_QUOTA_INCREASE_AWS_VPC signifies the quota increase is for AWS VPC
   *
   * @generated from enum value: ENUM_QUOTA_INCREASE_AWS_VPC = 1;
   */
  AWS_VPC = 1,

  /**
   * ENUM_QUOTA_INCREASE_AWS_VCPU signifies the quota increase is for AWS VCPU
   *
   * @generated from enum value: ENUM_QUOTA_INCREASE_AWS_VCPU = 2;
   */
  AWS_VCPU = 2,

  /**
   * ENUM_QUOTA_INCREASE_AWS_EIP signifies the quota increase is for AWS EIP
   *
   * @generated from enum value: ENUM_QUOTA_INCREASE_AWS_EIP = 3;
   */
  AWS_EIP = 3,

  /**
   * ENUM_QUOTA_INCREASE_AWS_NAT signifies the quota increase is for AWS NAT
   *
   * @generated from enum value: ENUM_QUOTA_INCREASE_AWS_NAT = 4;
   */
  AWS_NAT = 4,

  /**
   * ENUM_QUOTA_INCREASE_GCP signifies the quota increase is for GCP
   *
   * @generated from enum value: ENUM_QUOTA_INCREASE_GCP = 5;
   */
  GCP = 5,

  /**
   * ENUM_QUOTA_INCREASE_AZURE signifies the quota increase is for Azure
   *
   * @generated from enum value: ENUM_QUOTA_INCREASE_AZURE = 6;
   */
  AZURE = 6,
}

/**
 * @generated from enum porter.v1.EnumCLIAction
 */
export declare enum EnumCLIAction {
  /**
   * @generated from enum value: ENUM_CLI_ACTION_UNSPECIFIED = 0;
   */
  ENUM_CLI_ACTION_UNSPECIFIED = 0,

  /**
   * ENUM_CLI_ACTION_NONE signals the CLI to do nothing after applying the PorterApp.
   *
   * @generated from enum value: ENUM_CLI_ACTION_NONE = 1;
   */
  ENUM_CLI_ACTION_NONE = 1,

  /**
   * ENUM_CLI_ACTION_BUILD signals the CLI to build the image and call ApplyPorterApp again after a successful build.
   *
   * @generated from enum value: ENUM_CLI_ACTION_BUILD = 2;
   */
  ENUM_CLI_ACTION_BUILD = 2,

  /**
   * ENUM_CLI_ACTION_TRACK_PREDEPLOY signals the CLI to track the progress of the predeploy job and call ApplyPorterApp again after a successful run.
   *
   * @generated from enum value: ENUM_CLI_ACTION_TRACK_PREDEPLOY = 3;
   */
  ENUM_CLI_ACTION_TRACK_PREDEPLOY = 3,
}

/**
 * @generated from enum porter.v1.EnumRevisionStatus
 */
export declare enum EnumRevisionStatus {
  /**
   * @generated from enum value: ENUM_REVISION_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * ENUM_REVISION_STATUS_PREDEPLOY signifies the predeploy job failed.
   *
   * @generated from enum value: ENUM_REVISION_STATUS_PREDEPLOY_FAILED = 1;
   */
  PREDEPLOY_FAILED = 1,

  /**
   * ENUM_REVISION_STATUS_DEPLOY_FAILED signifies the deploy job failed.
   *
   * @generated from enum value: ENUM_REVISION_STATUS_DEPLOY_FAILED = 2;
   */
  DEPLOY_FAILED = 2,

  /**
   * ENUM_REVISION_STATUS_BUILD_FAILED signifies the build failed.
   *
   * @generated from enum value: ENUM_REVISION_STATUS_BUILD_FAILED = 3;
   */
  BUILD_FAILED = 3,
}

/**
 * @generated from message porter.v1.QuotaIncreaseRequest
 */
export declare class QuotaIncreaseRequest extends Message<QuotaIncreaseRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * cloud_provider the given cloud provider will use to make quota increases
   *
   * @generated from field: porter.v1.EnumCloudProvider cloud_provider = 2;
   */
  cloudProvider: EnumCloudProvider;

  /**
   * cloud_provider_credentials_id [REQUIRED] is the Porter credentials that will be used for provisioning a cluster.
   * These must be stored within Porter, prior to cluster creation. For AWS this refers to the last link in an assume role chain
   *
   * @generated from field: string cloud_provider_credentials_id = 3;
   */
  cloudProviderCredentialsId: string;

  /**
   * quota_increases list of quota increases to be requsted
   *
   * @generated from field: repeated porter.v1.EnumQuotaIncrease quota_increases = 4;
   */
  quotaIncreases: EnumQuotaIncrease[];

  /**
   * @generated from oneof porter.v1.QuotaIncreaseRequest.preflight_values
   */
  preflightValues: {
    /**
     * gke_preflight_values the values that GKE will use to perform quota increases
     *
     * @generated from field: porter.v1.GKEPreflightValues gke_preflight_values = 5;
     */
    value: GKEPreflightValues;
    case: "gkePreflightValues";
  } | {
    /**
     * eks_preflight_values the values that AWS will use to perform quota increases
     *
     * AKS aks_kind = 6;
     *
     * @generated from field: porter.v1.EKSPreflightValues eks_preflight_values = 6;
     */
    value: EKSPreflightValues;
    case: "eksPreflightValues";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<QuotaIncreaseRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.QuotaIncreaseRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotaIncreaseRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotaIncreaseRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotaIncreaseRequest;

  static equals(a: QuotaIncreaseRequest | PlainMessage<QuotaIncreaseRequest> | undefined, b: QuotaIncreaseRequest | PlainMessage<QuotaIncreaseRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.QuotaIncreaseResponse
 */
export declare class QuotaIncreaseResponse extends Message<QuotaIncreaseResponse> {
  /**
   * error if any of quota increases failed
   *
   * @generated from field: porter.v1.Error error = 1;
   */
  error?: Error;

  constructor(data?: PartialMessage<QuotaIncreaseResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.QuotaIncreaseResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotaIncreaseResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotaIncreaseResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotaIncreaseResponse;

  static equals(a: QuotaIncreaseResponse | PlainMessage<QuotaIncreaseResponse> | undefined, b: QuotaIncreaseResponse | PlainMessage<QuotaIncreaseResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.PreflightCheckRequest
 */
export declare class PreflightCheckRequest extends Message<PreflightCheckRequest> {
  /**
   * Deprecated: use contract instead
   *
   * @generated from field: int64 project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: bigint;

  /**
   * cloud_provider [REQUIRED] represents the provider that we will provisioning the cluster in
   * Deprecated: use contract instead
   *
   * @generated from field: porter.v1.EnumCloudProvider cloud_provider = 2 [deprecated = true];
   * @deprecated
   */
  cloudProvider: EnumCloudProvider;

  /**
   * cloud_provider_credentials_id [REQUIRED] is the Porter credentials that will be used for provisioning a cluster.
   * These must be stored within Porter, prior to cluster creation. For AWS this refers to the last link in an assume role chain
   * Deprecated: use contract instead
   *
   * @generated from field: string cloud_provider_credentials_id = 3 [deprecated = true];
   * @deprecated
   */
  cloudProviderCredentialsId: string;

  /**
   * @generated from oneof porter.v1.PreflightCheckRequest.preflight_values
   */
  preflightValues: {
    /**
     * gke_preflight_values the values that GKE will use to perform preflight checks
     * Deprecated: use contract instead
     *
     * @generated from field: porter.v1.GKEPreflightValues gke_preflight_values = 4 [deprecated = true];
     * @deprecated
     */
    value: GKEPreflightValues;
    case: "gkePreflightValues";
  } | {
    /**
     * eks_preflight_values the values that AWS will use to perform preflight checks
     * Deprecated: use contract instead
     *
     * @generated from field: porter.v1.EKSPreflightValues eks_preflight_values = 5 [deprecated = true];
     * @deprecated
     */
    value: EKSPreflightValues;
    case: "eksPreflightValues";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: porter.v1.Contract contract = 6;
   */
  contract?: Contract;

  constructor(data?: PartialMessage<PreflightCheckRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.PreflightCheckRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PreflightCheckRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PreflightCheckRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PreflightCheckRequest;

  static equals(a: PreflightCheckRequest | PlainMessage<PreflightCheckRequest> | undefined, b: PreflightCheckRequest | PlainMessage<PreflightCheckRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.PreflightCheckResponse
 */
export declare class PreflightCheckResponse extends Message<PreflightCheckResponse> {
  /**
   * preflight_checks keys are name of preflight check and error will be if the preflight checks fails, nil if it passes
   *
   * @generated from field: map<string, porter.v1.Error> preflight_checks = 1;
   */
  preflightChecks: { [key: string]: Error };

  constructor(data?: PartialMessage<PreflightCheckResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.PreflightCheckResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PreflightCheckResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PreflightCheckResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PreflightCheckResponse;

  static equals(a: PreflightCheckResponse | PlainMessage<PreflightCheckResponse> | undefined, b: PreflightCheckResponse | PlainMessage<PreflightCheckResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.QuotaPreflightCheckRequest
 * @deprecated
 */
export declare class QuotaPreflightCheckRequest extends Message<QuotaPreflightCheckRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string target_arn = 2;
   */
  targetArn: string;

  /**
   * @generated from field: string external_id = 3;
   */
  externalId: string;

  /**
   * @generated from field: string region = 4;
   */
  region: string;

  constructor(data?: PartialMessage<QuotaPreflightCheckRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.QuotaPreflightCheckRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotaPreflightCheckRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotaPreflightCheckRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotaPreflightCheckRequest;

  static equals(a: QuotaPreflightCheckRequest | PlainMessage<QuotaPreflightCheckRequest> | undefined, b: QuotaPreflightCheckRequest | PlainMessage<QuotaPreflightCheckRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.QuotaPreflightCheckResponse
 * @deprecated
 */
export declare class QuotaPreflightCheckResponse extends Message<QuotaPreflightCheckResponse> {
  constructor(data?: PartialMessage<QuotaPreflightCheckResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.QuotaPreflightCheckResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotaPreflightCheckResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotaPreflightCheckResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotaPreflightCheckResponse;

  static equals(a: QuotaPreflightCheckResponse | PlainMessage<QuotaPreflightCheckResponse> | undefined, b: QuotaPreflightCheckResponse | PlainMessage<QuotaPreflightCheckResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.CreateAssumeRoleChainRequest
 * @deprecated
 */
export declare class CreateAssumeRoleChainRequest extends Message<CreateAssumeRoleChainRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string source_arn = 2;
   */
  sourceArn: string;

  /**
   * @generated from field: string target_access_id = 3;
   */
  targetAccessId: string;

  /**
   * @generated from field: string target_secret_key = 4;
   */
  targetSecretKey: string;

  /**
   * @generated from field: string target_session_token = 5;
   */
  targetSessionToken: string;

  /**
   * @generated from field: string target_arn = 6;
   */
  targetArn: string;

  /**
   * @generated from field: string external_id = 7;
   */
  externalId: string;

  constructor(data?: PartialMessage<CreateAssumeRoleChainRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateAssumeRoleChainRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAssumeRoleChainRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAssumeRoleChainRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAssumeRoleChainRequest;

  static equals(a: CreateAssumeRoleChainRequest | PlainMessage<CreateAssumeRoleChainRequest> | undefined, b: CreateAssumeRoleChainRequest | PlainMessage<CreateAssumeRoleChainRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.CreateAssumeRoleChainResponse
 * @deprecated
 */
export declare class CreateAssumeRoleChainResponse extends Message<CreateAssumeRoleChainResponse> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string target_arn = 2;
   */
  targetArn: string;

  constructor(data?: PartialMessage<CreateAssumeRoleChainResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateAssumeRoleChainResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAssumeRoleChainResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAssumeRoleChainResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAssumeRoleChainResponse;

  static equals(a: CreateAssumeRoleChainResponse | PlainMessage<CreateAssumeRoleChainResponse> | undefined, b: CreateAssumeRoleChainResponse | PlainMessage<CreateAssumeRoleChainResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.SaveAzureCredentialsRequest
 * @deprecated
 */
export declare class SaveAzureCredentialsRequest extends Message<SaveAzureCredentialsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string client_id = 2;
   */
  clientId: string;

  /**
   * @generated from field: string subscription_id = 3;
   */
  subscriptionId: string;

  /**
   * @generated from field: string tenant_id = 4;
   */
  tenantId: string;

  /**
   * @generated from field: bytes service_principal_secret = 5;
   */
  servicePrincipalSecret: Uint8Array;

  constructor(data?: PartialMessage<SaveAzureCredentialsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.SaveAzureCredentialsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SaveAzureCredentialsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SaveAzureCredentialsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SaveAzureCredentialsRequest;

  static equals(a: SaveAzureCredentialsRequest | PlainMessage<SaveAzureCredentialsRequest> | undefined, b: SaveAzureCredentialsRequest | PlainMessage<SaveAzureCredentialsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.SaveAzureCredentialsResponse
 * @deprecated
 */
export declare class SaveAzureCredentialsResponse extends Message<SaveAzureCredentialsResponse> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string credentials_identifier = 2;
   */
  credentialsIdentifier: string;

  constructor(data?: PartialMessage<SaveAzureCredentialsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.SaveAzureCredentialsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SaveAzureCredentialsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SaveAzureCredentialsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SaveAzureCredentialsResponse;

  static equals(a: SaveAzureCredentialsResponse | PlainMessage<SaveAzureCredentialsResponse> | undefined, b: SaveAzureCredentialsResponse | PlainMessage<SaveAzureCredentialsResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.KubeConfigForClusterRequest
 */
export declare class KubeConfigForClusterRequest extends Message<KubeConfigForClusterRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<KubeConfigForClusterRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.KubeConfigForClusterRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KubeConfigForClusterRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KubeConfigForClusterRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KubeConfigForClusterRequest;

  static equals(a: KubeConfigForClusterRequest | PlainMessage<KubeConfigForClusterRequest> | undefined, b: KubeConfigForClusterRequest | PlainMessage<KubeConfigForClusterRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.KubeConfigForClusterResponse
 */
export declare class KubeConfigForClusterResponse extends Message<KubeConfigForClusterResponse> {
  /**
   * @generated from field: string kube_config = 1;
   */
  kubeConfig: string;

  constructor(data?: PartialMessage<KubeConfigForClusterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.KubeConfigForClusterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KubeConfigForClusterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KubeConfigForClusterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KubeConfigForClusterResponse;

  static equals(a: KubeConfigForClusterResponse | PlainMessage<KubeConfigForClusterResponse> | undefined, b: KubeConfigForClusterResponse | PlainMessage<KubeConfigForClusterResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateContractRequest
 */
export declare class UpdateContractRequest extends Message<UpdateContractRequest> {
  /**
   * @generated from field: porter.v1.Contract contract = 1;
   */
  contract?: Contract;

  constructor(data?: PartialMessage<UpdateContractRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateContractRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateContractRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateContractRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateContractRequest;

  static equals(a: UpdateContractRequest | PlainMessage<UpdateContractRequest> | undefined, b: UpdateContractRequest | PlainMessage<UpdateContractRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateContractResponse
 */
export declare class UpdateContractResponse extends Message<UpdateContractResponse> {
  /**
   * @generated from field: porter.v1.ContractRevision contract_revision = 1;
   */
  contractRevision?: ContractRevision;

  constructor(data?: PartialMessage<UpdateContractResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateContractResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateContractResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateContractResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateContractResponse;

  static equals(a: UpdateContractResponse | PlainMessage<UpdateContractResponse> | undefined, b: UpdateContractResponse | PlainMessage<UpdateContractResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ClusterStatusRequest
 */
export declare class ClusterStatusRequest extends Message<ClusterStatusRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<ClusterStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ClusterStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClusterStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClusterStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClusterStatusRequest;

  static equals(a: ClusterStatusRequest | PlainMessage<ClusterStatusRequest> | undefined, b: ClusterStatusRequest | PlainMessage<ClusterStatusRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ClusterStatusResponse
 */
export declare class ClusterStatusResponse extends Message<ClusterStatusResponse> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * @generated from field: string phase = 3;
   */
  phase: string;

  /**
   * @generated from field: bool infrastructure_status = 4;
   */
  infrastructureStatus: boolean;

  /**
   * @generated from field: bool control_plane_status = 5;
   */
  controlPlaneStatus: boolean;

  constructor(data?: PartialMessage<ClusterStatusResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ClusterStatusResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClusterStatusResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClusterStatusResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClusterStatusResponse;

  static equals(a: ClusterStatusResponse | PlainMessage<ClusterStatusResponse> | undefined, b: ClusterStatusResponse | PlainMessage<ClusterStatusResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.DeleteClusterRequest
 */
export declare class DeleteClusterRequest extends Message<DeleteClusterRequest> {
  /**
   * @generated from field: porter.v1.ContractRevision contract_revision = 1;
   */
  contractRevision?: ContractRevision;

  constructor(data?: PartialMessage<DeleteClusterRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteClusterRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteClusterRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteClusterRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteClusterRequest;

  static equals(a: DeleteClusterRequest | PlainMessage<DeleteClusterRequest> | undefined, b: DeleteClusterRequest | PlainMessage<DeleteClusterRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.DeleteClusterResponse
 */
export declare class DeleteClusterResponse extends Message<DeleteClusterResponse> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<DeleteClusterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteClusterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteClusterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteClusterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteClusterResponse;

  static equals(a: DeleteClusterResponse | PlainMessage<DeleteClusterResponse> | undefined, b: DeleteClusterResponse | PlainMessage<DeleteClusterResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ListRepositoriesForRegistryRequest
 */
export declare class ListRepositoriesForRegistryRequest extends Message<ListRepositoriesForRegistryRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string registry_uri = 2;
   */
  registryUri: string;

  constructor(data?: PartialMessage<ListRepositoriesForRegistryRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListRepositoriesForRegistryRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRepositoriesForRegistryRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRepositoriesForRegistryRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRepositoriesForRegistryRequest;

  static equals(a: ListRepositoriesForRegistryRequest | PlainMessage<ListRepositoriesForRegistryRequest> | undefined, b: ListRepositoriesForRegistryRequest | PlainMessage<ListRepositoriesForRegistryRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ListRepositoriesForRegistryResponse
 */
export declare class ListRepositoriesForRegistryResponse extends Message<ListRepositoriesForRegistryResponse> {
  /**
   * @generated from field: repeated porter.v1.Repository repositories = 1;
   */
  repositories: Repository[];

  constructor(data?: PartialMessage<ListRepositoriesForRegistryResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListRepositoriesForRegistryResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRepositoriesForRegistryResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRepositoriesForRegistryResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRepositoriesForRegistryResponse;

  static equals(a: ListRepositoriesForRegistryResponse | PlainMessage<ListRepositoriesForRegistryResponse> | undefined, b: ListRepositoriesForRegistryResponse | PlainMessage<ListRepositoriesForRegistryResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.Repository
 */
export declare class Repository extends Message<Repository> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string uri = 3;
   */
  uri: string;

  constructor(data?: PartialMessage<Repository>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.Repository";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Repository;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Repository;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Repository;

  static equals(a: Repository | PlainMessage<Repository> | undefined, b: Repository | PlainMessage<Repository> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ListImagesForRepositoryRequest
 */
export declare class ListImagesForRepositoryRequest extends Message<ListImagesForRepositoryRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string registry_uri = 2;
   */
  registryUri: string;

  /**
   * @generated from field: string repo_name = 3;
   */
  repoName: string;

  constructor(data?: PartialMessage<ListImagesForRepositoryRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListImagesForRepositoryRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListImagesForRepositoryRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListImagesForRepositoryRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListImagesForRepositoryRequest;

  static equals(a: ListImagesForRepositoryRequest | PlainMessage<ListImagesForRepositoryRequest> | undefined, b: ListImagesForRepositoryRequest | PlainMessage<ListImagesForRepositoryRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ListImagesForRepositoryResponse
 */
export declare class ListImagesForRepositoryResponse extends Message<ListImagesForRepositoryResponse> {
  /**
   * @generated from field: repeated porter.v1.Image images = 1;
   */
  images: Image[];

  constructor(data?: PartialMessage<ListImagesForRepositoryResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListImagesForRepositoryResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListImagesForRepositoryResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListImagesForRepositoryResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListImagesForRepositoryResponse;

  static equals(a: ListImagesForRepositoryResponse | PlainMessage<ListImagesForRepositoryResponse> | undefined, b: ListImagesForRepositoryResponse | PlainMessage<ListImagesForRepositoryResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.Image
 * @deprecated
 */
export declare class Image extends Message<Image> {
  /**
   * @generated from field: string repository_name = 1;
   */
  repositoryName: string;

  /**
   * @generated from field: string tag = 2;
   */
  tag: string;

  /**
   * @generated from field: string digest = 3;
   */
  digest: string;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 4;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Image>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.Image";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Image;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Image;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Image;

  static equals(a: Image | PlainMessage<Image> | undefined, b: Image | PlainMessage<Image> | undefined): boolean;
}

/**
 * ImageInfo describes everything related to a cloud-agnostic Docker image
 *
 * @generated from message porter.v1.ImageInfo
 */
export declare class ImageInfo extends Message<ImageInfo> {
  /**
   * uri the uri of an image. A valid image pull will use this uri suffixed by a tag
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * artifacts refers to the instances of an image in an image repository, each sharing the same uri
   *
   * @generated from field: repeated porter.v1.ImageArtifact artifacts = 2;
   */
  artifacts: ImageArtifact[];

  constructor(data?: PartialMessage<ImageInfo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ImageInfo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImageInfo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImageInfo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImageInfo;

  static equals(a: ImageInfo | PlainMessage<ImageInfo> | undefined, b: ImageInfo | PlainMessage<ImageInfo> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ImageArtifact
 */
export declare class ImageArtifact extends Message<ImageArtifact> {
  /**
   * tag is the tag associated with the artifact
   *
   * @generated from field: string tag = 1;
   */
  tag: string;

  /**
   * updated_at is the time at which the artifact was created or updated
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 2;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<ImageArtifact>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ImageArtifact";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImageArtifact;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImageArtifact;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImageArtifact;

  static equals(a: ImageArtifact | PlainMessage<ImageArtifact> | undefined, b: ImageArtifact | PlainMessage<ImageArtifact> | undefined): boolean;
}

/**
 * @generated from message porter.v1.TokenForRegistryRequest
 */
export declare class TokenForRegistryRequest extends Message<TokenForRegistryRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string registry_uri = 2;
   */
  registryUri: string;

  constructor(data?: PartialMessage<TokenForRegistryRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.TokenForRegistryRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TokenForRegistryRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TokenForRegistryRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TokenForRegistryRequest;

  static equals(a: TokenForRegistryRequest | PlainMessage<TokenForRegistryRequest> | undefined, b: TokenForRegistryRequest | PlainMessage<TokenForRegistryRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.TokenForRegistryResponse
 */
export declare class TokenForRegistryResponse extends Message<TokenForRegistryResponse> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * @generated from field: google.protobuf.Timestamp expiry = 2;
   */
  expiry?: Timestamp;

  constructor(data?: PartialMessage<TokenForRegistryResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.TokenForRegistryResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TokenForRegistryResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TokenForRegistryResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TokenForRegistryResponse;

  static equals(a: TokenForRegistryResponse | PlainMessage<TokenForRegistryResponse> | undefined, b: TokenForRegistryResponse | PlainMessage<TokenForRegistryResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ReadContractRequest
 */
export declare class ReadContractRequest extends Message<ReadContractRequest> {
  /**
   * @generated from field: porter.v1.ContractRevision contract_revision = 1;
   */
  contractRevision?: ContractRevision;

  constructor(data?: PartialMessage<ReadContractRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ReadContractRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadContractRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadContractRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadContractRequest;

  static equals(a: ReadContractRequest | PlainMessage<ReadContractRequest> | undefined, b: ReadContractRequest | PlainMessage<ReadContractRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ReadContractResponse
 */
export declare class ReadContractResponse extends Message<ReadContractResponse> {
  /**
   * @generated from field: string base64_contract = 1;
   */
  base64Contract: string;

  constructor(data?: PartialMessage<ReadContractResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ReadContractResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadContractResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadContractResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadContractResponse;

  static equals(a: ReadContractResponse | PlainMessage<ReadContractResponse> | undefined, b: ReadContractResponse | PlainMessage<ReadContractResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ValidatePorterAppRequest
 */
export declare class ValidatePorterAppRequest extends Message<ValidatePorterAppRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app will be installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 2 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * commit_sha is the current commit sha to be built and applied
   *
   * @generated from field: string commit_sha = 3;
   */
  commitSha: string;

  /**
   * app is the definition of the PorterApp to be applied
   *
   * @generated from field: porter.v1.PorterApp app = 4;
   */
  app?: PorterApp;

  /**
   * deletions is an object containing the names of fields to be deleted from the app
   *
   * @generated from field: porter.v1.Deletions deletions = 5;
   */
  deletions?: Deletions;

  /**
   * app_overrides contains environment specific overrides if they exist, applied depending on the deployment target
   *
   * @generated from field: porter.v1.PorterApp app_overrides = 6;
   */
  appOverrides?: PorterApp;

  /**
   * base_deployment_target_id is used to find a revision of the app in the base deployment target, which hydrates the preview app template
   * deprecated: use the base deployment target directly on the template instead
   *
   * @generated from field: string base_deployment_target_id = 7 [deprecated = true];
   * @deprecated
   */
  baseDeploymentTargetId: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target where the app will be installed
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 8;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<ValidatePorterAppRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ValidatePorterAppRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValidatePorterAppRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValidatePorterAppRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValidatePorterAppRequest;

  static equals(a: ValidatePorterAppRequest | PlainMessage<ValidatePorterAppRequest> | undefined, b: ValidatePorterAppRequest | PlainMessage<ValidatePorterAppRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ValidatePorterAppResponse
 */
export declare class ValidatePorterAppResponse extends Message<ValidatePorterAppResponse> {
  /**
   * @generated from field: porter.v1.PorterApp app = 1;
   */
  app?: PorterApp;

  constructor(data?: PartialMessage<ValidatePorterAppResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ValidatePorterAppResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValidatePorterAppResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValidatePorterAppResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValidatePorterAppResponse;

  static equals(a: ValidatePorterAppResponse | PlainMessage<ValidatePorterAppResponse> | undefined, b: ValidatePorterAppResponse | PlainMessage<ValidatePorterAppResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ApplyPorterAppRequest
 */
export declare class ApplyPorterAppRequest extends Message<ApplyPorterAppRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app will be installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 2 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * app is the definition of the PorterApp to be applied
   *
   * @generated from field: porter.v1.PorterApp app = 3;
   */
  app?: PorterApp;

  /**
   * porter_app_revision_id is the id of the PorterAppRevision to be applied.  This is used by the CLI to provide updates to an existing app revision. If provided, app must be empty.
   *
   * @generated from field: string porter_app_revision_id = 4;
   */
  porterAppRevisionId: string;

  /**
   * force_build is a flag that forces the app to rebuild, regardless of the existing tag. This is used on initial apply by the CLI.
   *
   * @generated from field: bool force_build = 5;
   */
  forceBuild: boolean;

  /**
   * app_env is the current set of environment variables for the upcoming app revision
   *
   * @generated from field: porter.v1.EnvGroupVariables app_env = 6;
   */
  appEnv?: EnvGroupVariables;

  /**
   * is_hard_env_update is a flag that indicates whether the app environment should be fully overwritten, or if the new app env variables should be merged with the existing
   *
   * @generated from field: bool is_hard_env_update = 7;
   */
  isHardEnvUpdate: boolean;

  /**
   * deployment_target_identifier is the object that identifies the deployment target where the app will be installed
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 8;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<ApplyPorterAppRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ApplyPorterAppRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApplyPorterAppRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApplyPorterAppRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApplyPorterAppRequest;

  static equals(a: ApplyPorterAppRequest | PlainMessage<ApplyPorterAppRequest> | undefined, b: ApplyPorterAppRequest | PlainMessage<ApplyPorterAppRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ApplyPorterAppResponse
 */
export declare class ApplyPorterAppResponse extends Message<ApplyPorterAppResponse> {
  /**
   * @generated from field: string porter_app_revision_id = 1;
   */
  porterAppRevisionId: string;

  /**
   * cli_action is the action that the CLI should take after applying the PorterApp (at the time of writing, either build the image or track whether a predeploy job has completed)
   *
   * @generated from field: porter.v1.EnumCLIAction cli_action = 2;
   */
  cliAction: EnumCLIAction;

  constructor(data?: PartialMessage<ApplyPorterAppResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ApplyPorterAppResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApplyPorterAppResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApplyPorterAppResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApplyPorterAppResponse;

  static equals(a: ApplyPorterAppResponse | PlainMessage<ApplyPorterAppResponse> | undefined, b: ApplyPorterAppResponse | PlainMessage<ApplyPorterAppResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateRevisionStatusRequest
 */
export declare class UpdateRevisionStatusRequest extends Message<UpdateRevisionStatusRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_revision_id is the id of the PorterAppRevision
   *
   * @generated from field: string app_revision_id = 2;
   */
  appRevisionId: string;

  /**
   * revision_status is the new status of the revision
   *
   * @generated from field: porter.v1.EnumRevisionStatus revision_status = 3;
   */
  revisionStatus: EnumRevisionStatus;

  constructor(data?: PartialMessage<UpdateRevisionStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateRevisionStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRevisionStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRevisionStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRevisionStatusRequest;

  static equals(a: UpdateRevisionStatusRequest | PlainMessage<UpdateRevisionStatusRequest> | undefined, b: UpdateRevisionStatusRequest | PlainMessage<UpdateRevisionStatusRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateRevisionStatusResponse
 */
export declare class UpdateRevisionStatusResponse extends Message<UpdateRevisionStatusResponse> {
  constructor(data?: PartialMessage<UpdateRevisionStatusResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateRevisionStatusResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRevisionStatusResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRevisionStatusResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRevisionStatusResponse;

  static equals(a: UpdateRevisionStatusResponse | PlainMessage<UpdateRevisionStatusResponse> | undefined, b: UpdateRevisionStatusResponse | PlainMessage<UpdateRevisionStatusResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.RollbackRevisionRequest
 */
export declare class RollbackRevisionRequest extends Message<RollbackRevisionRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_id is the id of the PorterApp to roll back
   *
   * @generated from field: int64 app_id = 2;
   */
  appId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 3 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * app_revision_id is the id of the PorterAppRevision
   *
   * @generated from field: string app_revision_id = 4;
   */
  appRevisionId: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 5;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<RollbackRevisionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.RollbackRevisionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RollbackRevisionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RollbackRevisionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RollbackRevisionRequest;

  static equals(a: RollbackRevisionRequest | PlainMessage<RollbackRevisionRequest> | undefined, b: RollbackRevisionRequest | PlainMessage<RollbackRevisionRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.RollbackRevisionResponse
 */
export declare class RollbackRevisionResponse extends Message<RollbackRevisionResponse> {
  /**
   * target_revision_number is the revision number of the revision that was rolled back to
   *
   * @generated from field: int32 target_revision_number = 1;
   */
  targetRevisionNumber: number;

  /**
   * app_revision_id is the id of the newly created PorterAppRevision
   *
   * @generated from field: string app_revision_id = 2;
   */
  appRevisionId: string;

  constructor(data?: PartialMessage<RollbackRevisionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.RollbackRevisionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RollbackRevisionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RollbackRevisionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RollbackRevisionResponse;

  static equals(a: RollbackRevisionResponse | PlainMessage<RollbackRevisionResponse> | undefined, b: RollbackRevisionResponse | PlainMessage<RollbackRevisionResponse> | undefined): boolean;
}

/**
 * DeletePorterAppRequest is the request object when deleting a porter app from a given project
 *
 * @generated from message porter.v1.DeletePorterAppRequest
 */
export declare class DeletePorterAppRequest extends Message<DeletePorterAppRequest> {
  /**
   * project_id is the id of the project that the PorterApp belongs to
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_name is the name of the porter app to be deleted
   *
   * @generated from field: string app_name = 2;
   */
  appName: string;

  constructor(data?: PartialMessage<DeletePorterAppRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeletePorterAppRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePorterAppRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePorterAppRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePorterAppRequest;

  static equals(a: DeletePorterAppRequest | PlainMessage<DeletePorterAppRequest> | undefined, b: DeletePorterAppRequest | PlainMessage<DeletePorterAppRequest> | undefined): boolean;
}

/**
 * DeletePorterAppResponse is the response object when deleting a porter app from a given project
 *
 * @generated from message porter.v1.DeletePorterAppResponse
 */
export declare class DeletePorterAppResponse extends Message<DeletePorterAppResponse> {
  /**
   * app_id is the id of the PorterApp that was deleted
   *
   * @generated from field: int64 app_id = 1;
   */
  appId: bigint;

  constructor(data?: PartialMessage<DeletePorterAppResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeletePorterAppResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePorterAppResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePorterAppResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePorterAppResponse;

  static equals(a: DeletePorterAppResponse | PlainMessage<DeletePorterAppResponse> | undefined, b: DeletePorterAppResponse | PlainMessage<DeletePorterAppResponse> | undefined): boolean;
}

/**
 * DeleteAppDeploymentRequest is the request object when removing a porter app from a given deployment target
 *
 * @generated from message porter.v1.DeleteAppDeploymentRequest
 */
export declare class DeleteAppDeploymentRequest extends Message<DeleteAppDeploymentRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 2 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * app_name is the name of the porter app to be uninstalled
   *
   * @generated from field: string app_name = 3;
   */
  appName: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 4;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<DeleteAppDeploymentRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteAppDeploymentRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAppDeploymentRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAppDeploymentRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAppDeploymentRequest;

  static equals(a: DeleteAppDeploymentRequest | PlainMessage<DeleteAppDeploymentRequest> | undefined, b: DeleteAppDeploymentRequest | PlainMessage<DeleteAppDeploymentRequest> | undefined): boolean;
}

/**
 * DeleteAppDeploymentResponse is the response object when removing a porter app from a given deployment target
 *
 * @generated from message porter.v1.DeleteAppDeploymentResponse
 */
export declare class DeleteAppDeploymentResponse extends Message<DeleteAppDeploymentResponse> {
  constructor(data?: PartialMessage<DeleteAppDeploymentResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteAppDeploymentResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAppDeploymentResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAppDeploymentResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAppDeploymentResponse;

  static equals(a: DeleteAppDeploymentResponse | PlainMessage<DeleteAppDeploymentResponse> | undefined, b: DeleteAppDeploymentResponse | PlainMessage<DeleteAppDeploymentResponse> | undefined): boolean;
}

/**
 * DeleteDeploymentTargetRequest is the request object when removing a deployment target from a given cluster
 *
 * @generated from message porter.v1.DeleteDeploymentTargetRequest
 */
export declare class DeleteDeploymentTargetRequest extends Message<DeleteDeploymentTargetRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_id is the id of the deployment target to be deleted. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 2 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 3;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<DeleteDeploymentTargetRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteDeploymentTargetRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteDeploymentTargetRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteDeploymentTargetRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteDeploymentTargetRequest;

  static equals(a: DeleteDeploymentTargetRequest | PlainMessage<DeleteDeploymentTargetRequest> | undefined, b: DeleteDeploymentTargetRequest | PlainMessage<DeleteDeploymentTargetRequest> | undefined): boolean;
}

/**
 * DeleteDeploymentTargetResponse is the response object when removing a deployment target from a given cluster
 *
 * @generated from message porter.v1.DeleteDeploymentTargetResponse
 */
export declare class DeleteDeploymentTargetResponse extends Message<DeleteDeploymentTargetResponse> {
  constructor(data?: PartialMessage<DeleteDeploymentTargetResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteDeploymentTargetResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteDeploymentTargetResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteDeploymentTargetResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteDeploymentTargetResponse;

  static equals(a: DeleteDeploymentTargetResponse | PlainMessage<DeleteDeploymentTargetResponse> | undefined, b: DeleteDeploymentTargetResponse | PlainMessage<DeleteDeploymentTargetResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.CurrentAppRevisionRequest
 */
export declare class CurrentAppRevisionRequest extends Message<CurrentAppRevisionRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_id is the id of the PorterApp that is currently installed
   *
   * @generated from field: int64 app_id = 2;
   */
  appId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 3 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 4;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<CurrentAppRevisionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CurrentAppRevisionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CurrentAppRevisionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CurrentAppRevisionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CurrentAppRevisionRequest;

  static equals(a: CurrentAppRevisionRequest | PlainMessage<CurrentAppRevisionRequest> | undefined, b: CurrentAppRevisionRequest | PlainMessage<CurrentAppRevisionRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.AppRevision
 */
export declare class AppRevision extends Message<AppRevision> {
  /**
   * app is the definition of the PorterApp that is currently installed
   *
   * @generated from field: porter.v1.PorterApp app = 1;
   */
  app?: PorterApp;

  /**
   * status is the status of the revision
   *
   * @generated from field: string status = 2;
   */
  status: string;

  /**
   * revision_number is the revision number respective to the application and deployment target
   *
   * @generated from field: uint64 revision_number = 3;
   */
  revisionNumber: bigint;

  /**
   * created_at is the time the revision was created
   *
   * @generated from field: google.protobuf.Timestamp created_at = 4;
   */
  createdAt?: Timestamp;

  /**
   * updated_at is the time the revision was last updated
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 5;
   */
  updatedAt?: Timestamp;

  /**
   * id is the id of the revision
   *
   * @generated from field: string id = 6;
   */
  id: string;

  /**
   * deployment_target_id is the id of the deployment target where the revision occurs
   *
   * @generated from field: string deployment_target_id = 7;
   */
  deploymentTargetId: string;

  constructor(data?: PartialMessage<AppRevision>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppRevision";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppRevision;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppRevision;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppRevision;

  static equals(a: AppRevision | PlainMessage<AppRevision> | undefined, b: AppRevision | PlainMessage<AppRevision> | undefined): boolean;
}

/**
 * AppRevisionMetadata is the metadata for a given app revision. It is a lightweight version of the AppRevision object
 * used to send messages via nats
 *
 * @generated from message porter.v1.AppRevisionMetadata
 */
export declare class AppRevisionMetadata extends Message<AppRevisionMetadata> {
  /**
   * project_id is the id of the project that the revision belongs to
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * id is the id of the revision
   *
   * @generated from field: string id = 2;
   */
  id: string;

  constructor(data?: PartialMessage<AppRevisionMetadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppRevisionMetadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppRevisionMetadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppRevisionMetadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppRevisionMetadata;

  static equals(a: AppRevisionMetadata | PlainMessage<AppRevisionMetadata> | undefined, b: AppRevisionMetadata | PlainMessage<AppRevisionMetadata> | undefined): boolean;
}

/**
 * @generated from message porter.v1.CurrentAppRevisionResponse
 */
export declare class CurrentAppRevisionResponse extends Message<CurrentAppRevisionResponse> {
  /**
   * revision is the currently deployed app revision for a given porter_app and deployment_target
   *
   * @generated from field: porter.v1.AppRevision app_revision = 1;
   */
  appRevision?: AppRevision;

  constructor(data?: PartialMessage<CurrentAppRevisionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CurrentAppRevisionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CurrentAppRevisionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CurrentAppRevisionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CurrentAppRevisionResponse;

  static equals(a: CurrentAppRevisionResponse | PlainMessage<CurrentAppRevisionResponse> | undefined, b: CurrentAppRevisionResponse | PlainMessage<CurrentAppRevisionResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ListAppRevisionsRequest
 */
export declare class ListAppRevisionsRequest extends Message<ListAppRevisionsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_id is the id of the PorterApp that is currently installed
   *
   * @generated from field: int64 app_id = 2;
   */
  appId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 3 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 4;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<ListAppRevisionsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListAppRevisionsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAppRevisionsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAppRevisionsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAppRevisionsRequest;

  static equals(a: ListAppRevisionsRequest | PlainMessage<ListAppRevisionsRequest> | undefined, b: ListAppRevisionsRequest | PlainMessage<ListAppRevisionsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ListAppRevisionsResponse
 */
export declare class ListAppRevisionsResponse extends Message<ListAppRevisionsResponse> {
  /**
   * app_revisions is the list of app revisions for the given app and deployment target
   *
   * @generated from field: repeated porter.v1.AppRevision app_revisions = 1;
   */
  appRevisions: AppRevision[];

  constructor(data?: PartialMessage<ListAppRevisionsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListAppRevisionsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAppRevisionsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAppRevisionsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAppRevisionsResponse;

  static equals(a: ListAppRevisionsResponse | PlainMessage<ListAppRevisionsResponse> | undefined, b: ListAppRevisionsResponse | PlainMessage<ListAppRevisionsResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.LatestAppRevisionsRequest
 */
export declare class LatestAppRevisionsRequest extends Message<LatestAppRevisionsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_identifier is the object that identifies the deployment target to retrieve revisions from
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 2;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  /**
   * deployment_target_id is the id of the deployment target to retrieve revisions from. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 3 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  constructor(data?: PartialMessage<LatestAppRevisionsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.LatestAppRevisionsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LatestAppRevisionsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LatestAppRevisionsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LatestAppRevisionsRequest;

  static equals(a: LatestAppRevisionsRequest | PlainMessage<LatestAppRevisionsRequest> | undefined, b: LatestAppRevisionsRequest | PlainMessage<LatestAppRevisionsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.LatestAppRevisionsResponse
 */
export declare class LatestAppRevisionsResponse extends Message<LatestAppRevisionsResponse> {
  /**
   * app_revisions is the list of app revisions for the given deployment target
   *
   * @generated from field: repeated porter.v1.AppRevision app_revisions = 1;
   */
  appRevisions: AppRevision[];

  constructor(data?: PartialMessage<LatestAppRevisionsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.LatestAppRevisionsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LatestAppRevisionsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LatestAppRevisionsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LatestAppRevisionsResponse;

  static equals(a: LatestAppRevisionsResponse | PlainMessage<LatestAppRevisionsResponse> | undefined, b: LatestAppRevisionsResponse | PlainMessage<LatestAppRevisionsResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.GetAppRevisionRequest
 */
export declare class GetAppRevisionRequest extends Message<GetAppRevisionRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_revision_id is the id of the PorterAppRevision to return
   *
   * @generated from field: string app_revision_id = 2;
   */
  appRevisionId: string;

  constructor(data?: PartialMessage<GetAppRevisionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.GetAppRevisionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAppRevisionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAppRevisionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAppRevisionRequest;

  static equals(a: GetAppRevisionRequest | PlainMessage<GetAppRevisionRequest> | undefined, b: GetAppRevisionRequest | PlainMessage<GetAppRevisionRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.GetAppRevisionResponse
 */
export declare class GetAppRevisionResponse extends Message<GetAppRevisionResponse> {
  /**
   * app_revision is the PorterAppRevision that was requested
   *
   * @generated from field: porter.v1.AppRevision app_revision = 1;
   */
  appRevision?: AppRevision;

  constructor(data?: PartialMessage<GetAppRevisionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.GetAppRevisionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAppRevisionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAppRevisionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAppRevisionResponse;

  static equals(a: GetAppRevisionResponse | PlainMessage<GetAppRevisionResponse> | undefined, b: GetAppRevisionResponse | PlainMessage<GetAppRevisionResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.PredeployStatusRequest
 */
export declare class PredeployStatusRequest extends Message<PredeployStatusRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_revision_id is the revision id of the PorterApp which should have its predeploy status checked
   *
   * @generated from field: string app_revision_id = 2;
   */
  appRevisionId: string;

  constructor(data?: PartialMessage<PredeployStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.PredeployStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PredeployStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PredeployStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PredeployStatusRequest;

  static equals(a: PredeployStatusRequest | PlainMessage<PredeployStatusRequest> | undefined, b: PredeployStatusRequest | PlainMessage<PredeployStatusRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.PredeployStatusResponse
 */
export declare class PredeployStatusResponse extends Message<PredeployStatusResponse> {
  /**
   * predeploy_status is the status of the predeploy job
   *
   * @generated from field: porter.v1.EnumPredeployStatus predeploy_status = 1;
   */
  predeployStatus: EnumPredeployStatus;

  constructor(data?: PartialMessage<PredeployStatusResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.PredeployStatusResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PredeployStatusResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PredeployStatusResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PredeployStatusResponse;

  static equals(a: PredeployStatusResponse | PlainMessage<PredeployStatusResponse> | undefined, b: PredeployStatusResponse | PlainMessage<PredeployStatusResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.DeploymentTargetDetailsRequest
 */
export declare class DeploymentTargetDetailsRequest extends Message<DeploymentTargetDetailsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string deployment_target_id = 2;
   */
  deploymentTargetId: string;

  constructor(data?: PartialMessage<DeploymentTargetDetailsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeploymentTargetDetailsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeploymentTargetDetailsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeploymentTargetDetailsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeploymentTargetDetailsRequest;

  static equals(a: DeploymentTargetDetailsRequest | PlainMessage<DeploymentTargetDetailsRequest> | undefined, b: DeploymentTargetDetailsRequest | PlainMessage<DeploymentTargetDetailsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.DeploymentTargetDetailsResponse
 */
export declare class DeploymentTargetDetailsResponse extends Message<DeploymentTargetDetailsResponse> {
  /**
   * namespace is the namespace that the deployment target points to
   *
   * @generated from field: string namespace = 1;
   */
  namespace: string;

  /**
   * cluster_id is the id of the cluster that the deployment target points to
   *
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * is_preview indicates whether this is a preview deployment target or not
   *
   * @generated from field: bool is_preview = 3;
   */
  isPreview: boolean;

  /**
   * deployment_target_name is the name of the deployment target
   *
   * @generated from field: string deployment_target_name = 4;
   */
  deploymentTargetName: string;

  constructor(data?: PartialMessage<DeploymentTargetDetailsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeploymentTargetDetailsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeploymentTargetDetailsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeploymentTargetDetailsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeploymentTargetDetailsResponse;

  static equals(a: DeploymentTargetDetailsResponse | PlainMessage<DeploymentTargetDetailsResponse> | undefined, b: DeploymentTargetDetailsResponse | PlainMessage<DeploymentTargetDetailsResponse> | undefined): boolean;
}

/**
 * CreateDeploymentTargetRequest is the request object for CreateDeploymentTarget
 *
 * @generated from message porter.v1.CreateDeploymentTargetRequest
 */
export declare class CreateDeploymentTargetRequest extends Message<CreateDeploymentTargetRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * name is the name of the deployment target
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * namespace is the namespace that the deployment target points to
   *
   * @generated from field: string namespace = 3;
   */
  namespace: string;

  /**
   * cluster_id is the id of the cluster that the deployment target points to
   *
   * @generated from field: int64 cluster_id = 4;
   */
  clusterId: bigint;

  /**
   * is_preview indicates whether this is a preview deployment target or not
   *
   * @generated from field: bool is_preview = 5;
   */
  isPreview: boolean;

  constructor(data?: PartialMessage<CreateDeploymentTargetRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateDeploymentTargetRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDeploymentTargetRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDeploymentTargetRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDeploymentTargetRequest;

  static equals(a: CreateDeploymentTargetRequest | PlainMessage<CreateDeploymentTargetRequest> | undefined, b: CreateDeploymentTargetRequest | PlainMessage<CreateDeploymentTargetRequest> | undefined): boolean;
}

/**
 * CreateDeploymentTargetResponse is the response object for CreateDeploymentTarget
 *
 * @generated from message porter.v1.CreateDeploymentTargetResponse
 */
export declare class CreateDeploymentTargetResponse extends Message<CreateDeploymentTargetResponse> {
  /**
   * @generated from field: string deployment_target_id = 1;
   */
  deploymentTargetId: string;

  constructor(data?: PartialMessage<CreateDeploymentTargetResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateDeploymentTargetResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDeploymentTargetResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDeploymentTargetResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDeploymentTargetResponse;

  static equals(a: CreateDeploymentTargetResponse | PlainMessage<CreateDeploymentTargetResponse> | undefined, b: CreateDeploymentTargetResponse | PlainMessage<CreateDeploymentTargetResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.SeedAppRevisionsRequest
 */
export declare class SeedAppRevisionsRequest extends Message<SeedAppRevisionsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * @generated from field: string release_name = 3;
   */
  releaseName: string;

  /**
   * source_namespace is the namespace where the app to be migrated is currently installed
   *
   * @generated from field: string source_namespace = 4;
   */
  sourceNamespace: string;

  /**
   * target_namespace is the namespace where the app will be installed. This will determine where the env groups are seeded.
   *
   * @generated from field: string target_namespace = 5;
   */
  targetNamespace: string;

  constructor(data?: PartialMessage<SeedAppRevisionsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.SeedAppRevisionsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SeedAppRevisionsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SeedAppRevisionsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SeedAppRevisionsRequest;

  static equals(a: SeedAppRevisionsRequest | PlainMessage<SeedAppRevisionsRequest> | undefined, b: SeedAppRevisionsRequest | PlainMessage<SeedAppRevisionsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.SeedAppRevisionsResponse
 */
export declare class SeedAppRevisionsResponse extends Message<SeedAppRevisionsResponse> {
  constructor(data?: PartialMessage<SeedAppRevisionsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.SeedAppRevisionsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SeedAppRevisionsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SeedAppRevisionsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SeedAppRevisionsResponse;

  static equals(a: SeedAppRevisionsResponse | PlainMessage<SeedAppRevisionsResponse> | undefined, b: SeedAppRevisionsResponse | PlainMessage<SeedAppRevisionsResponse> | undefined): boolean;
}

/**
 * EnvGroupVariablesRequest is the request object when retrieving the variables for a given EnvGroup
 *
 * @generated from message porter.v1.EnvGroupVariablesRequest
 */
export declare class EnvGroupVariablesRequest extends Message<EnvGroupVariablesRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_id is the id of the deployment target for the env group. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 2 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * @generated from field: porter.v1.EnvGroup env_group = 3;
   */
  envGroup?: EnvGroup;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the env group
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 4;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<EnvGroupVariablesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.EnvGroupVariablesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnvGroupVariablesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnvGroupVariablesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnvGroupVariablesRequest;

  static equals(a: EnvGroupVariablesRequest | PlainMessage<EnvGroupVariablesRequest> | undefined, b: EnvGroupVariablesRequest | PlainMessage<EnvGroupVariablesRequest> | undefined): boolean;
}

/**
 * DeploymentTargetIdentifier is the object that identifies a deployment target. One of deployment_target_id or deployment_target_name must be provided, with deployment_target_id taking precedence.
 *
 * @generated from message porter.v1.DeploymentTargetIdentifier
 */
export declare class DeploymentTargetIdentifier extends Message<DeploymentTargetIdentifier> {
  /**
   * deployment_target_id is the id of the deployment target
   *
   * @generated from field: string deployment_target_id = 1;
   */
  deploymentTargetId: string;

  /**
   * deployment_target_name is the name of the deployment target
   *
   * @generated from field: string deployment_target_name = 2;
   */
  deploymentTargetName: string;

  constructor(data?: PartialMessage<DeploymentTargetIdentifier>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeploymentTargetIdentifier";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeploymentTargetIdentifier;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeploymentTargetIdentifier;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeploymentTargetIdentifier;

  static equals(a: DeploymentTargetIdentifier | PlainMessage<DeploymentTargetIdentifier> | undefined, b: DeploymentTargetIdentifier | PlainMessage<DeploymentTargetIdentifier> | undefined): boolean;
}

/**
 * EnvGroupVariablesResponse is the response object when retrieving the variables for a given EnvGroup
 *
 * @generated from message porter.v1.EnvGroupVariablesResponse
 */
export declare class EnvGroupVariablesResponse extends Message<EnvGroupVariablesResponse> {
  /**
   * @generated from field: porter.v1.EnvGroupVariables env_group_variables = 1;
   */
  envGroupVariables?: EnvGroupVariables;

  constructor(data?: PartialMessage<EnvGroupVariablesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.EnvGroupVariablesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnvGroupVariablesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnvGroupVariablesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnvGroupVariablesResponse;

  static equals(a: EnvGroupVariablesResponse | PlainMessage<EnvGroupVariablesResponse> | undefined, b: EnvGroupVariablesResponse | PlainMessage<EnvGroupVariablesResponse> | undefined): boolean;
}

/**
 * LatestEnvGroupWithVariablesRequest is the request object when retrieving the latest EnvGroup and its variables for a given deployment target
 *
 * @generated from message porter.v1.LatestEnvGroupWithVariablesRequest
 */
export declare class LatestEnvGroupWithVariablesRequest extends Message<LatestEnvGroupWithVariablesRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 2 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * @generated from field: string env_group_name = 3;
   */
  envGroupName: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the env group
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 4;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<LatestEnvGroupWithVariablesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.LatestEnvGroupWithVariablesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LatestEnvGroupWithVariablesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LatestEnvGroupWithVariablesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LatestEnvGroupWithVariablesRequest;

  static equals(a: LatestEnvGroupWithVariablesRequest | PlainMessage<LatestEnvGroupWithVariablesRequest> | undefined, b: LatestEnvGroupWithVariablesRequest | PlainMessage<LatestEnvGroupWithVariablesRequest> | undefined): boolean;
}

/**
 * LatestEnvGroupWithVariablesResponse is the response object when retrieving the latest EnvGroup and its variables for a given deployment target
 *
 * @generated from message porter.v1.LatestEnvGroupWithVariablesResponse
 */
export declare class LatestEnvGroupWithVariablesResponse extends Message<LatestEnvGroupWithVariablesResponse> {
  /**
   * @generated from field: porter.v1.EnvGroup env_group = 1;
   */
  envGroup?: EnvGroup;

  /**
   * @generated from field: porter.v1.EnvGroupVariables env_group_variables = 2;
   */
  envGroupVariables?: EnvGroupVariables;

  constructor(data?: PartialMessage<LatestEnvGroupWithVariablesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.LatestEnvGroupWithVariablesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LatestEnvGroupWithVariablesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LatestEnvGroupWithVariablesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LatestEnvGroupWithVariablesResponse;

  static equals(a: LatestEnvGroupWithVariablesResponse | PlainMessage<LatestEnvGroupWithVariablesResponse> | undefined, b: LatestEnvGroupWithVariablesResponse | PlainMessage<LatestEnvGroupWithVariablesResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateAppImageRequest
 */
export declare class UpdateAppImageRequest extends Message<UpdateAppImageRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string app_name = 2;
   */
  appName: string;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 3 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * @generated from field: string repository_url = 4;
   */
  repositoryUrl: string;

  /**
   * @generated from field: string tag = 5;
   */
  tag: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 6;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<UpdateAppImageRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateAppImageRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppImageRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppImageRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppImageRequest;

  static equals(a: UpdateAppImageRequest | PlainMessage<UpdateAppImageRequest> | undefined, b: UpdateAppImageRequest | PlainMessage<UpdateAppImageRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateAppImageResponse
 */
export declare class UpdateAppImageResponse extends Message<UpdateAppImageResponse> {
  /**
   * @generated from field: string repository_url = 1;
   */
  repositoryUrl: string;

  /**
   * @generated from field: string tag = 2;
   */
  tag: string;

  constructor(data?: PartialMessage<UpdateAppImageResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateAppImageResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppImageResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppImageResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppImageResponse;

  static equals(a: UpdateAppImageResponse | PlainMessage<UpdateAppImageResponse> | undefined, b: UpdateAppImageResponse | PlainMessage<UpdateAppImageResponse> | undefined): boolean;
}

/**
 * UpdateAppsLinkedToEnvGroupRequest is the request object for UpdateAppsLinkedToEnvGroup
 *
 * @generated from message porter.v1.UpdateAppsLinkedToEnvGroupRequest
 */
export declare class UpdateAppsLinkedToEnvGroupRequest extends Message<UpdateAppsLinkedToEnvGroupRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * @generated from field: string env_group_name = 3;
   */
  envGroupName: string;

  constructor(data?: PartialMessage<UpdateAppsLinkedToEnvGroupRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateAppsLinkedToEnvGroupRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppsLinkedToEnvGroupRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppsLinkedToEnvGroupRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppsLinkedToEnvGroupRequest;

  static equals(a: UpdateAppsLinkedToEnvGroupRequest | PlainMessage<UpdateAppsLinkedToEnvGroupRequest> | undefined, b: UpdateAppsLinkedToEnvGroupRequest | PlainMessage<UpdateAppsLinkedToEnvGroupRequest> | undefined): boolean;
}

/**
 * UpdateAppsLinkedToEnvGroupResponse is the response object for UpdateAppsLinkedToEnvGroup
 *
 * @generated from message porter.v1.UpdateAppsLinkedToEnvGroupResponse
 */
export declare class UpdateAppsLinkedToEnvGroupResponse extends Message<UpdateAppsLinkedToEnvGroupResponse> {
  constructor(data?: PartialMessage<UpdateAppsLinkedToEnvGroupResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateAppsLinkedToEnvGroupResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppsLinkedToEnvGroupResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppsLinkedToEnvGroupResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppsLinkedToEnvGroupResponse;

  static equals(a: UpdateAppsLinkedToEnvGroupResponse | PlainMessage<UpdateAppsLinkedToEnvGroupResponse> | undefined, b: UpdateAppsLinkedToEnvGroupResponse | PlainMessage<UpdateAppsLinkedToEnvGroupResponse> | undefined): boolean;
}

/**
 * AppHelmValuesRequest is the request object when retrieving the helm values for a given app
 *
 * @generated from message porter.v1.AppHelmValuesRequest
 */
export declare class AppHelmValuesRequest extends Message<AppHelmValuesRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 app_id = 2;
   */
  appId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 3 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * with_defaults indicates whether to merge the default Helm values with the explicitly provided values
   *
   * @generated from field: bool with_defaults = 4;
   */
  withDefaults: boolean;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 5;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<AppHelmValuesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppHelmValuesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppHelmValuesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppHelmValuesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppHelmValuesRequest;

  static equals(a: AppHelmValuesRequest | PlainMessage<AppHelmValuesRequest> | undefined, b: AppHelmValuesRequest | PlainMessage<AppHelmValuesRequest> | undefined): boolean;
}

/**
 * AppHelmValuesResponse is the response object when retrieving the helm values for a given app
 *
 * @generated from message porter.v1.AppHelmValuesResponse
 */
export declare class AppHelmValuesResponse extends Message<AppHelmValuesResponse> {
  /**
   * values is base64-encoded, stringified json of the latest helm values for the app
   *
   * @generated from field: string b64_values = 1;
   */
  b64Values: string;

  constructor(data?: PartialMessage<AppHelmValuesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppHelmValuesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppHelmValuesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppHelmValuesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppHelmValuesResponse;

  static equals(a: AppHelmValuesResponse | PlainMessage<AppHelmValuesResponse> | undefined, b: AppHelmValuesResponse | PlainMessage<AppHelmValuesResponse> | undefined): boolean;
}

/**
 * ManualServiceRunRequest is the request object for ManualServiceRun
 *
 * @generated from message porter.v1.ManualServiceRunRequest
 */
export declare class ManualServiceRunRequest extends Message<ManualServiceRunRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string app_name = 2;
   */
  appName: string;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 3 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * @generated from field: string service_name = 4;
   */
  serviceName: string;

  /**
   * Command is the command to run on the service.  If not specified, the run command for the service will be used, as defined in the latest app revision.
   *
   * @generated from field: optional string command = 5;
   */
  command?: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 6;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<ManualServiceRunRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ManualServiceRunRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManualServiceRunRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManualServiceRunRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManualServiceRunRequest;

  static equals(a: ManualServiceRunRequest | PlainMessage<ManualServiceRunRequest> | undefined, b: ManualServiceRunRequest | PlainMessage<ManualServiceRunRequest> | undefined): boolean;
}

/**
 * ManualServiceRunResponse is the response object for ManualServiceRun
 *
 * @generated from message porter.v1.ManualServiceRunResponse
 */
export declare class ManualServiceRunResponse extends Message<ManualServiceRunResponse> {
  constructor(data?: PartialMessage<ManualServiceRunResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ManualServiceRunResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManualServiceRunResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManualServiceRunResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManualServiceRunResponse;

  static equals(a: ManualServiceRunResponse | PlainMessage<ManualServiceRunResponse> | undefined, b: ManualServiceRunResponse | PlainMessage<ManualServiceRunResponse> | undefined): boolean;
}

/**
 * ImagesRequest is the request object for listing images
 *
 * @generated from message porter.v1.ImagesRequest
 */
export declare class ImagesRequest extends Message<ImagesRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  constructor(data?: PartialMessage<ImagesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ImagesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImagesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImagesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImagesRequest;

  static equals(a: ImagesRequest | PlainMessage<ImagesRequest> | undefined, b: ImagesRequest | PlainMessage<ImagesRequest> | undefined): boolean;
}

/**
 * ImagesResponse is the response object for listing images
 *
 * @generated from message porter.v1.ImagesResponse
 */
export declare class ImagesResponse extends Message<ImagesResponse> {
  /**
   * @generated from field: repeated porter.v1.ImageInfo images = 1;
   */
  images: ImageInfo[];

  constructor(data?: PartialMessage<ImagesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ImagesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImagesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImagesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImagesResponse;

  static equals(a: ImagesResponse | PlainMessage<ImagesResponse> | undefined, b: ImagesResponse | PlainMessage<ImagesResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.EKSBearerTokenRequest
 * @deprecated
 */
export declare class EKSBearerTokenRequest extends Message<EKSBearerTokenRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<EKSBearerTokenRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.EKSBearerTokenRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EKSBearerTokenRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EKSBearerTokenRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EKSBearerTokenRequest;

  static equals(a: EKSBearerTokenRequest | PlainMessage<EKSBearerTokenRequest> | undefined, b: EKSBearerTokenRequest | PlainMessage<EKSBearerTokenRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.EKSBearerTokenResponse
 * @deprecated
 */
export declare class EKSBearerTokenResponse extends Message<EKSBearerTokenResponse> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  constructor(data?: PartialMessage<EKSBearerTokenResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.EKSBearerTokenResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EKSBearerTokenResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EKSBearerTokenResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EKSBearerTokenResponse;

  static equals(a: EKSBearerTokenResponse | PlainMessage<EKSBearerTokenResponse> | undefined, b: EKSBearerTokenResponse | PlainMessage<EKSBearerTokenResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.CertificateAuthorityDataRequest
 * @deprecated
 */
export declare class CertificateAuthorityDataRequest extends Message<CertificateAuthorityDataRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<CertificateAuthorityDataRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CertificateAuthorityDataRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CertificateAuthorityDataRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CertificateAuthorityDataRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CertificateAuthorityDataRequest;

  static equals(a: CertificateAuthorityDataRequest | PlainMessage<CertificateAuthorityDataRequest> | undefined, b: CertificateAuthorityDataRequest | PlainMessage<CertificateAuthorityDataRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.CertificateAuthorityDataResponse
 * @deprecated
 */
export declare class CertificateAuthorityDataResponse extends Message<CertificateAuthorityDataResponse> {
  /**
   * @generated from field: string certificate_authority_data = 1;
   */
  certificateAuthorityData: string;

  constructor(data?: PartialMessage<CertificateAuthorityDataResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CertificateAuthorityDataResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CertificateAuthorityDataResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CertificateAuthorityDataResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CertificateAuthorityDataResponse;

  static equals(a: CertificateAuthorityDataResponse | PlainMessage<CertificateAuthorityDataResponse> | undefined, b: CertificateAuthorityDataResponse | PlainMessage<CertificateAuthorityDataResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.AssumeRoleChainTargetsRequest
 * @deprecated
 */
export declare class AssumeRoleChainTargetsRequest extends Message<AssumeRoleChainTargetsRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  constructor(data?: PartialMessage<AssumeRoleChainTargetsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AssumeRoleChainTargetsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssumeRoleChainTargetsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssumeRoleChainTargetsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssumeRoleChainTargetsRequest;

  static equals(a: AssumeRoleChainTargetsRequest | PlainMessage<AssumeRoleChainTargetsRequest> | undefined, b: AssumeRoleChainTargetsRequest | PlainMessage<AssumeRoleChainTargetsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.AssumeRoleChainTargetsResponse
 * @deprecated
 */
export declare class AssumeRoleChainTargetsResponse extends Message<AssumeRoleChainTargetsResponse> {
  /**
   * @generated from field: repeated porter.v1.AssumeRoleChainLink chain_links = 1;
   */
  chainLinks: AssumeRoleChainLink[];

  constructor(data?: PartialMessage<AssumeRoleChainTargetsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AssumeRoleChainTargetsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssumeRoleChainTargetsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssumeRoleChainTargetsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssumeRoleChainTargetsResponse;

  static equals(a: AssumeRoleChainTargetsResponse | PlainMessage<AssumeRoleChainTargetsResponse> | undefined, b: AssumeRoleChainTargetsResponse | PlainMessage<AssumeRoleChainTargetsResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ECRTokenForRegistryRequest
 * @deprecated
 */
export declare class ECRTokenForRegistryRequest extends Message<ECRTokenForRegistryRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string region = 2;
   */
  region: string;

  /**
   * @generated from field: string aws_account_id = 3;
   */
  awsAccountId: string;

  constructor(data?: PartialMessage<ECRTokenForRegistryRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ECRTokenForRegistryRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ECRTokenForRegistryRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ECRTokenForRegistryRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ECRTokenForRegistryRequest;

  static equals(a: ECRTokenForRegistryRequest | PlainMessage<ECRTokenForRegistryRequest> | undefined, b: ECRTokenForRegistryRequest | PlainMessage<ECRTokenForRegistryRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ECRTokenForRegistryResponse
 * @deprecated
 */
export declare class ECRTokenForRegistryResponse extends Message<ECRTokenForRegistryResponse> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * @generated from field: google.protobuf.Timestamp expiry = 2;
   */
  expiry?: Timestamp;

  constructor(data?: PartialMessage<ECRTokenForRegistryResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ECRTokenForRegistryResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ECRTokenForRegistryResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ECRTokenForRegistryResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ECRTokenForRegistryResponse;

  static equals(a: ECRTokenForRegistryResponse | PlainMessage<ECRTokenForRegistryResponse> | undefined, b: ECRTokenForRegistryResponse | PlainMessage<ECRTokenForRegistryResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.AssumeRoleCredentialsRequest
 * @deprecated
 */
export declare class AssumeRoleCredentialsRequest extends Message<AssumeRoleCredentialsRequest> {
  /**
   * @generated from field: string aws_account_id = 1;
   */
  awsAccountId: string;

  /**
   * @generated from field: int64 project_id = 2;
   */
  projectId: bigint;

  constructor(data?: PartialMessage<AssumeRoleCredentialsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AssumeRoleCredentialsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssumeRoleCredentialsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssumeRoleCredentialsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssumeRoleCredentialsRequest;

  static equals(a: AssumeRoleCredentialsRequest | PlainMessage<AssumeRoleCredentialsRequest> | undefined, b: AssumeRoleCredentialsRequest | PlainMessage<AssumeRoleCredentialsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.AssumeRoleCredentialsResponse
 * @deprecated
 */
export declare class AssumeRoleCredentialsResponse extends Message<AssumeRoleCredentialsResponse> {
  /**
   * @generated from field: string aws_access_id = 1;
   */
  awsAccessId: string;

  /**
   * @generated from field: string aws_secret_key = 2;
   */
  awsSecretKey: string;

  /**
   * @generated from field: string aws_session_token = 3;
   */
  awsSessionToken: string;

  constructor(data?: PartialMessage<AssumeRoleCredentialsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AssumeRoleCredentialsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssumeRoleCredentialsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssumeRoleCredentialsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssumeRoleCredentialsResponse;

  static equals(a: AssumeRoleCredentialsResponse | PlainMessage<AssumeRoleCredentialsResponse> | undefined, b: AssumeRoleCredentialsResponse | PlainMessage<AssumeRoleCredentialsResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.DockerConfigFileForRegistryRequest
 * @deprecated
 */
export declare class DockerConfigFileForRegistryRequest extends Message<DockerConfigFileForRegistryRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string registry_uri = 2;
   */
  registryUri: string;

  constructor(data?: PartialMessage<DockerConfigFileForRegistryRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DockerConfigFileForRegistryRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DockerConfigFileForRegistryRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DockerConfigFileForRegistryRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DockerConfigFileForRegistryRequest;

  static equals(a: DockerConfigFileForRegistryRequest | PlainMessage<DockerConfigFileForRegistryRequest> | undefined, b: DockerConfigFileForRegistryRequest | PlainMessage<DockerConfigFileForRegistryRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.DockerConfigFileForRegistryResponse
 * @deprecated
 */
export declare class DockerConfigFileForRegistryResponse extends Message<DockerConfigFileForRegistryResponse> {
  /**
   * @generated from field: bytes docker_config_file = 1;
   */
  dockerConfigFile: Uint8Array;

  constructor(data?: PartialMessage<DockerConfigFileForRegistryResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DockerConfigFileForRegistryResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DockerConfigFileForRegistryResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DockerConfigFileForRegistryResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DockerConfigFileForRegistryResponse;

  static equals(a: DockerConfigFileForRegistryResponse | PlainMessage<DockerConfigFileForRegistryResponse> | undefined, b: DockerConfigFileForRegistryResponse | PlainMessage<DockerConfigFileForRegistryResponse> | undefined): boolean;
}

/**
 * ClusterNetworkSettingsRequest is the request object for fetching cloud provider network settings for a cluster
 *
 * @generated from message porter.v1.ClusterNetworkSettingsRequest
 */
export declare class ClusterNetworkSettingsRequest extends Message<ClusterNetworkSettingsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<ClusterNetworkSettingsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ClusterNetworkSettingsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClusterNetworkSettingsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClusterNetworkSettingsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClusterNetworkSettingsRequest;

  static equals(a: ClusterNetworkSettingsRequest | PlainMessage<ClusterNetworkSettingsRequest> | undefined, b: ClusterNetworkSettingsRequest | PlainMessage<ClusterNetworkSettingsRequest> | undefined): boolean;
}

/**
 * ClusterNetworkSettingsResponse is the response object containing cloud provider network settings for a cluster
 *
 * @generated from message porter.v1.ClusterNetworkSettingsResponse
 */
export declare class ClusterNetworkSettingsResponse extends Message<ClusterNetworkSettingsResponse> {
  /**
   * region is the cloud provider region in which the cluster is located
   *
   * @generated from field: string region = 1;
   */
  region: string;

  /**
   * subnet_ids contains a string list of cloud provider subnets associated with the cluster
   *
   * @generated from field: repeated string subnet_ids = 2;
   */
  subnetIds: string[];

  /**
   * cloud_provider the given cloud provider for the cluster being queried
   *
   * @generated from field: porter.v1.EnumCloudProvider cloud_provider = 3;
   */
  cloudProvider: EnumCloudProvider;

  /**
   * cloud_provider_network contains the relevant cluster network config for the cloud provider on which the cluster exists
   *
   * @generated from oneof porter.v1.ClusterNetworkSettingsResponse.cloud_provider_network
   */
  cloudProviderNetwork: {
    /**
     * eks_cloud_provider_network is the aws vpc for the cluster
     *
     * @generated from field: porter.v1.AWSVpc eks_cloud_provider_network = 4;
     */
    value: AWSVpc;
    case: "eksCloudProviderNetwork";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<ClusterNetworkSettingsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ClusterNetworkSettingsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClusterNetworkSettingsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClusterNetworkSettingsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClusterNetworkSettingsResponse;

  static equals(a: ClusterNetworkSettingsResponse | PlainMessage<ClusterNetworkSettingsResponse> | undefined, b: ClusterNetworkSettingsResponse | PlainMessage<ClusterNetworkSettingsResponse> | undefined): boolean;
}

