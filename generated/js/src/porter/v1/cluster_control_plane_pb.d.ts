// @generated by protoc-gen-es v1.4.2
// @generated from file porter/v1/cluster_control_plane.proto (package porter.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { EnumCloudProvider } from "./cluster_pb.js";
import type { GKEPreflightValues } from "./gke_pb.js";
import type { AWSVpc, EKSPreflightValues } from "./eks_pb.js";
import type { Error } from "./errors_pb.js";
import type { Contract, ContractRevision } from "./contract_pb.js";
import type { ContractComplianceCheckGroup, EnumComplianceProfile, EnumComplianceVendor, VendorComplianceCheck } from "./compliance_pb.js";
import type { AppImage, Build, Deletions, DeploymentTarget, DeploymentTargetIdentifier, EnumAppRevisionStatus, EnvGroup, EnvGroupVariables, PorterApp } from "./porter_app_pb.js";
import type { Addon } from "./addons_pb.js";
import type { EnumEnvGroupProviderType } from "./env_group_pb.js";
import type { NotificationConfig } from "./notification_pb.js";
import type { DatastoreCredential } from "./datastore_pb.js";
import type { AssumeRoleChainLink } from "./aws_assume_role_pb.js";

/**
 * EnumUpdateTrigger describes the action that triggered a porter app revision update
 *
 * @generated from enum porter.v1.EnumUpdateTrigger
 */
export declare enum EnumUpdateTrigger {
  /**
   * @generated from enum value: ENUM_UPDATE_TRIGGER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * ENUM_UPDATE_TRIGGER_ROLLBACK signifies the update was triggered by a rollback
   *
   * @generated from enum value: ENUM_UPDATE_TRIGGER_ROLLBACK = 1;
   */
  ROLLBACK = 1,
}

/**
 * @generated from enum porter.v1.EnumPredeployStatus
 */
export declare enum EnumPredeployStatus {
  /**
   * @generated from enum value: ENUM_PREDEPLOY_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * ENUM_PREDEPLOY_STATUS_IN_PROGRESS signifies the predeploy is still in progress.
   *
   * @generated from enum value: ENUM_PREDEPLOY_STATUS_IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * ENUM_PREDEPLOY_STATUS_FAILED signifies the predeploy job failed.
   *
   * @generated from enum value: ENUM_PREDEPLOY_STATUS_FAILED = 2;
   */
  FAILED = 2,

  /**
   * ENUM_PREDEPLOY_STATUS_SUCCESSFUL signifies the predeploy job was successful.
   *
   * @generated from enum value: ENUM_PREDEPLOY_STATUS_SUCCESSFUL = 3;
   */
  SUCCESSFUL = 3,
}

/**
 * @generated from enum porter.v1.EnumQuotaIncrease
 */
export declare enum EnumQuotaIncrease {
  /**
   * @generated from enum value: ENUM_QUOTA_INCREASE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * ENUM_QUOTA_INCREASE_AWS_VPC signifies the quota increase is for AWS VPC
   *
   * @generated from enum value: ENUM_QUOTA_INCREASE_AWS_VPC = 1;
   */
  AWS_VPC = 1,

  /**
   * ENUM_QUOTA_INCREASE_AWS_VCPU signifies the quota increase is for AWS VCPU
   *
   * @generated from enum value: ENUM_QUOTA_INCREASE_AWS_VCPU = 2;
   */
  AWS_VCPU = 2,

  /**
   * ENUM_QUOTA_INCREASE_AWS_EIP signifies the quota increase is for AWS EIP
   *
   * @generated from enum value: ENUM_QUOTA_INCREASE_AWS_EIP = 3;
   */
  AWS_EIP = 3,

  /**
   * ENUM_QUOTA_INCREASE_AWS_NAT signifies the quota increase is for AWS NAT
   *
   * @generated from enum value: ENUM_QUOTA_INCREASE_AWS_NAT = 4;
   */
  AWS_NAT = 4,

  /**
   * ENUM_QUOTA_INCREASE_GCP signifies the quota increase is for GCP
   *
   * @generated from enum value: ENUM_QUOTA_INCREASE_GCP = 5;
   */
  GCP = 5,

  /**
   * ENUM_QUOTA_INCREASE_AZURE signifies the quota increase is for Azure
   *
   * @generated from enum value: ENUM_QUOTA_INCREASE_AZURE = 6;
   */
  AZURE = 6,
}

/**
 * @generated from enum porter.v1.EnumCLIAction
 */
export declare enum EnumCLIAction {
  /**
   * @generated from enum value: ENUM_CLI_ACTION_UNSPECIFIED = 0;
   */
  ENUM_CLI_ACTION_UNSPECIFIED = 0,

  /**
   * ENUM_CLI_ACTION_NONE signals the CLI to do nothing after applying the PorterApp.
   *
   * @generated from enum value: ENUM_CLI_ACTION_NONE = 1;
   */
  ENUM_CLI_ACTION_NONE = 1,

  /**
   * ENUM_CLI_ACTION_BUILD signals the CLI to build the image and call ApplyPorterApp again after a successful build.
   *
   * @generated from enum value: ENUM_CLI_ACTION_BUILD = 2;
   */
  ENUM_CLI_ACTION_BUILD = 2,

  /**
   * ENUM_CLI_ACTION_TRACK_PREDEPLOY signals the CLI to track the progress of the predeploy job and call ApplyPorterApp again after a successful run.
   *
   * @generated from enum value: ENUM_CLI_ACTION_TRACK_PREDEPLOY = 3;
   */
  ENUM_CLI_ACTION_TRACK_PREDEPLOY = 3,
}

/**
 * @generated from enum porter.v1.EnumRevisionStatus
 */
export declare enum EnumRevisionStatus {
  /**
   * @generated from enum value: ENUM_REVISION_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * ENUM_REVISION_STATUS_PREDEPLOY signifies the predeploy job failed.
   *
   * @generated from enum value: ENUM_REVISION_STATUS_PREDEPLOY_FAILED = 1;
   */
  PREDEPLOY_FAILED = 1,

  /**
   * ENUM_REVISION_STATUS_DEPLOY_FAILED signifies the deploy job failed.
   *
   * @generated from enum value: ENUM_REVISION_STATUS_DEPLOY_FAILED = 2;
   */
  DEPLOY_FAILED = 2,

  /**
   * ENUM_REVISION_STATUS_BUILD_FAILED signifies the build failed.
   *
   * @generated from enum value: ENUM_REVISION_STATUS_BUILD_FAILED = 3;
   */
  BUILD_FAILED = 3,

  /**
   * ENUM_REVISION_STATUS_BUILD_SUCCESSFUL signifies the build was successful.
   *
   * @generated from enum value: ENUM_REVISION_STATUS_BUILD_SUCCESSFUL = 4;
   */
  BUILD_SUCCESSFUL = 4,
}

/**
 * @generated from enum porter.v1.EnumServiceDeploymentStatus
 */
export declare enum EnumServiceDeploymentStatus {
  /**
   * @generated from enum value: ENUM_SERVICE_DEPLOYMENT_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ENUM_SERVICE_DEPLOYMENT_STATUS_PROGRESSING = 1;
   */
  PROGRESSING = 1,

  /**
   * @generated from enum value: ENUM_SERVICE_DEPLOYMENT_STATUS_SUCCESS = 2;
   */
  SUCCESS = 2,

  /**
   * @generated from enum value: ENUM_SERVICE_DEPLOYMENT_STATUS_FAILED = 3;
   */
  FAILED = 3,
}

/**
 * EnumDatastore represents the datastore type
 *
 * @generated from enum porter.v1.EnumDatastore
 */
export declare enum EnumDatastore {
  /**
   * ENUM_DATASTORE_UNSPECIFIED is an enum representing an unknown datastore
   * and is used as a sentinel value when interacting with datastore types
   *
   * @generated from enum value: ENUM_DATASTORE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * ENUM_DATASTORE_RDS_POSTGRESQL is an enum representing an rds postgresql instance
   *
   * @generated from enum value: ENUM_DATASTORE_RDS_POSTGRESQL = 1;
   */
  RDS_POSTGRESQL = 1,

  /**
   * ENUM_DATASTORE_RDS_AURORA_POSTGRESQL is an enum representing an rds postgresql aurora cluster
   *
   * @generated from enum value: ENUM_DATASTORE_RDS_AURORA_POSTGRESQL = 2;
   */
  RDS_AURORA_POSTGRESQL = 2,

  /**
   * ENUM_DATASTORE_ELASTICACHE_REDIS is an enum representing an elasticache redis replication group
   *
   * @generated from enum value: ENUM_DATASTORE_ELASTICACHE_REDIS = 3;
   */
  ELASTICACHE_REDIS = 3,

  /**
   * ENUM_DATASTORE_ELASTICACHE_MEMCACHED is an enum representing an elasticache memcached replication group
   *
   * @generated from enum value: ENUM_DATASTORE_ELASTICACHE_MEMCACHED = 4;
   */
  ELASTICACHE_MEMCACHED = 4,

  /**
   * ENUM_DATASTORE_RDS_MYSQL is an enum representing an rds mysql instance
   *
   * @generated from enum value: ENUM_DATASTORE_RDS_MYSQL = 5;
   */
  RDS_MYSQL = 5,
}

/**
 * @generated from message porter.v1.QuotaIncreaseRequest
 */
export declare class QuotaIncreaseRequest extends Message<QuotaIncreaseRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * cloud_provider the given cloud provider will use to make quota increases
   *
   * @generated from field: porter.v1.EnumCloudProvider cloud_provider = 2;
   */
  cloudProvider: EnumCloudProvider;

  /**
   * cloud_provider_credentials_id [REQUIRED] is the Porter credentials that will be used for provisioning a cluster.
   * These must be stored within Porter, prior to cluster creation. For AWS this refers to the last link in an assume role chain
   *
   * @generated from field: string cloud_provider_credentials_id = 3;
   */
  cloudProviderCredentialsId: string;

  /**
   * quota_increases list of quota increases to be requsted
   *
   * @generated from field: repeated porter.v1.EnumQuotaIncrease quota_increases = 4;
   */
  quotaIncreases: EnumQuotaIncrease[];

  /**
   * @generated from oneof porter.v1.QuotaIncreaseRequest.preflight_values
   */
  preflightValues: {
    /**
     * gke_preflight_values the values that GKE will use to perform quota increases
     *
     * @generated from field: porter.v1.GKEPreflightValues gke_preflight_values = 5;
     */
    value: GKEPreflightValues;
    case: "gkePreflightValues";
  } | {
    /**
     * eks_preflight_values the values that AWS will use to perform quota increases
     *
     * AKS aks_kind = 6;
     *
     * @generated from field: porter.v1.EKSPreflightValues eks_preflight_values = 6;
     */
    value: EKSPreflightValues;
    case: "eksPreflightValues";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<QuotaIncreaseRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.QuotaIncreaseRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotaIncreaseRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotaIncreaseRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotaIncreaseRequest;

  static equals(a: QuotaIncreaseRequest | PlainMessage<QuotaIncreaseRequest> | undefined, b: QuotaIncreaseRequest | PlainMessage<QuotaIncreaseRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.QuotaIncreaseResponse
 */
export declare class QuotaIncreaseResponse extends Message<QuotaIncreaseResponse> {
  /**
   * error if any of quota increases failed
   *
   * @generated from field: porter.v1.Error error = 1;
   */
  error?: Error;

  constructor(data?: PartialMessage<QuotaIncreaseResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.QuotaIncreaseResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotaIncreaseResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotaIncreaseResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotaIncreaseResponse;

  static equals(a: QuotaIncreaseResponse | PlainMessage<QuotaIncreaseResponse> | undefined, b: QuotaIncreaseResponse | PlainMessage<QuotaIncreaseResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.PreflightCheckRequest
 */
export declare class PreflightCheckRequest extends Message<PreflightCheckRequest> {
  /**
   * Deprecated: use contract instead
   *
   * @generated from field: int64 project_id = 1 [deprecated = true];
   * @deprecated
   */
  projectId: bigint;

  /**
   * cloud_provider [REQUIRED] represents the provider that we will provisioning the cluster in
   * Deprecated: use contract instead
   *
   * @generated from field: porter.v1.EnumCloudProvider cloud_provider = 2 [deprecated = true];
   * @deprecated
   */
  cloudProvider: EnumCloudProvider;

  /**
   * cloud_provider_credentials_id [REQUIRED] is the Porter credentials that will be used for provisioning a cluster.
   * These must be stored within Porter, prior to cluster creation. For AWS this refers to the last link in an assume role chain
   * Deprecated: use contract instead
   *
   * @generated from field: string cloud_provider_credentials_id = 3 [deprecated = true];
   * @deprecated
   */
  cloudProviderCredentialsId: string;

  /**
   * @generated from oneof porter.v1.PreflightCheckRequest.preflight_values
   */
  preflightValues: {
    /**
     * gke_preflight_values the values that GKE will use to perform preflight checks
     * Deprecated: use contract instead
     *
     * @generated from field: porter.v1.GKEPreflightValues gke_preflight_values = 4 [deprecated = true];
     * @deprecated
     */
    value: GKEPreflightValues;
    case: "gkePreflightValues";
  } | {
    /**
     * eks_preflight_values the values that AWS will use to perform preflight checks
     * Deprecated: use contract instead
     *
     * @generated from field: porter.v1.EKSPreflightValues eks_preflight_values = 5 [deprecated = true];
     * @deprecated
     */
    value: EKSPreflightValues;
    case: "eksPreflightValues";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: porter.v1.Contract contract = 6;
   */
  contract?: Contract;

  constructor(data?: PartialMessage<PreflightCheckRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.PreflightCheckRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PreflightCheckRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PreflightCheckRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PreflightCheckRequest;

  static equals(a: PreflightCheckRequest | PlainMessage<PreflightCheckRequest> | undefined, b: PreflightCheckRequest | PlainMessage<PreflightCheckRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.PreflightCheckResponse
 */
export declare class PreflightCheckResponse extends Message<PreflightCheckResponse> {
  /**
   * preflight_checks keys are name of preflight check and error will be if the preflight checks fails, nil if it passes
   *
   * @generated from field: map<string, porter.v1.Error> preflight_checks = 1;
   */
  preflightChecks: { [key: string]: Error };

  constructor(data?: PartialMessage<PreflightCheckResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.PreflightCheckResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PreflightCheckResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PreflightCheckResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PreflightCheckResponse;

  static equals(a: PreflightCheckResponse | PlainMessage<PreflightCheckResponse> | undefined, b: PreflightCheckResponse | PlainMessage<PreflightCheckResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.QuotaPreflightCheckRequest
 * @deprecated
 */
export declare class QuotaPreflightCheckRequest extends Message<QuotaPreflightCheckRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string target_arn = 2;
   */
  targetArn: string;

  /**
   * @generated from field: string external_id = 3;
   */
  externalId: string;

  /**
   * @generated from field: string region = 4;
   */
  region: string;

  constructor(data?: PartialMessage<QuotaPreflightCheckRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.QuotaPreflightCheckRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotaPreflightCheckRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotaPreflightCheckRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotaPreflightCheckRequest;

  static equals(a: QuotaPreflightCheckRequest | PlainMessage<QuotaPreflightCheckRequest> | undefined, b: QuotaPreflightCheckRequest | PlainMessage<QuotaPreflightCheckRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.QuotaPreflightCheckResponse
 * @deprecated
 */
export declare class QuotaPreflightCheckResponse extends Message<QuotaPreflightCheckResponse> {
  constructor(data?: PartialMessage<QuotaPreflightCheckResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.QuotaPreflightCheckResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotaPreflightCheckResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotaPreflightCheckResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotaPreflightCheckResponse;

  static equals(a: QuotaPreflightCheckResponse | PlainMessage<QuotaPreflightCheckResponse> | undefined, b: QuotaPreflightCheckResponse | PlainMessage<QuotaPreflightCheckResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.CreateAssumeRoleChainRequest
 * @deprecated
 */
export declare class CreateAssumeRoleChainRequest extends Message<CreateAssumeRoleChainRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string source_arn = 2;
   */
  sourceArn: string;

  /**
   * @generated from field: string target_access_id = 3;
   */
  targetAccessId: string;

  /**
   * @generated from field: string target_secret_key = 4;
   */
  targetSecretKey: string;

  /**
   * @generated from field: string target_session_token = 5;
   */
  targetSessionToken: string;

  /**
   * @generated from field: string target_arn = 6;
   */
  targetArn: string;

  /**
   * @generated from field: string external_id = 7;
   */
  externalId: string;

  constructor(data?: PartialMessage<CreateAssumeRoleChainRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateAssumeRoleChainRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAssumeRoleChainRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAssumeRoleChainRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAssumeRoleChainRequest;

  static equals(a: CreateAssumeRoleChainRequest | PlainMessage<CreateAssumeRoleChainRequest> | undefined, b: CreateAssumeRoleChainRequest | PlainMessage<CreateAssumeRoleChainRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.CreateAssumeRoleChainResponse
 * @deprecated
 */
export declare class CreateAssumeRoleChainResponse extends Message<CreateAssumeRoleChainResponse> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string target_arn = 2;
   */
  targetArn: string;

  constructor(data?: PartialMessage<CreateAssumeRoleChainResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateAssumeRoleChainResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAssumeRoleChainResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAssumeRoleChainResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAssumeRoleChainResponse;

  static equals(a: CreateAssumeRoleChainResponse | PlainMessage<CreateAssumeRoleChainResponse> | undefined, b: CreateAssumeRoleChainResponse | PlainMessage<CreateAssumeRoleChainResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.SaveAzureCredentialsRequest
 * @deprecated
 */
export declare class SaveAzureCredentialsRequest extends Message<SaveAzureCredentialsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string client_id = 2;
   */
  clientId: string;

  /**
   * @generated from field: string subscription_id = 3;
   */
  subscriptionId: string;

  /**
   * @generated from field: string tenant_id = 4;
   */
  tenantId: string;

  /**
   * @generated from field: bytes service_principal_secret = 5;
   */
  servicePrincipalSecret: Uint8Array;

  constructor(data?: PartialMessage<SaveAzureCredentialsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.SaveAzureCredentialsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SaveAzureCredentialsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SaveAzureCredentialsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SaveAzureCredentialsRequest;

  static equals(a: SaveAzureCredentialsRequest | PlainMessage<SaveAzureCredentialsRequest> | undefined, b: SaveAzureCredentialsRequest | PlainMessage<SaveAzureCredentialsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.SaveAzureCredentialsResponse
 * @deprecated
 */
export declare class SaveAzureCredentialsResponse extends Message<SaveAzureCredentialsResponse> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string credentials_identifier = 2;
   */
  credentialsIdentifier: string;

  constructor(data?: PartialMessage<SaveAzureCredentialsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.SaveAzureCredentialsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SaveAzureCredentialsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SaveAzureCredentialsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SaveAzureCredentialsResponse;

  static equals(a: SaveAzureCredentialsResponse | PlainMessage<SaveAzureCredentialsResponse> | undefined, b: SaveAzureCredentialsResponse | PlainMessage<SaveAzureCredentialsResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.KubeConfigForClusterRequest
 */
export declare class KubeConfigForClusterRequest extends Message<KubeConfigForClusterRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<KubeConfigForClusterRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.KubeConfigForClusterRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KubeConfigForClusterRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KubeConfigForClusterRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KubeConfigForClusterRequest;

  static equals(a: KubeConfigForClusterRequest | PlainMessage<KubeConfigForClusterRequest> | undefined, b: KubeConfigForClusterRequest | PlainMessage<KubeConfigForClusterRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.KubeConfigForClusterResponse
 */
export declare class KubeConfigForClusterResponse extends Message<KubeConfigForClusterResponse> {
  /**
   * @generated from field: string kube_config = 1;
   */
  kubeConfig: string;

  constructor(data?: PartialMessage<KubeConfigForClusterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.KubeConfigForClusterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KubeConfigForClusterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KubeConfigForClusterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KubeConfigForClusterResponse;

  static equals(a: KubeConfigForClusterResponse | PlainMessage<KubeConfigForClusterResponse> | undefined, b: KubeConfigForClusterResponse | PlainMessage<KubeConfigForClusterResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateContractRequest
 */
export declare class UpdateContractRequest extends Message<UpdateContractRequest> {
  /**
   * @generated from field: porter.v1.Contract contract = 1;
   */
  contract?: Contract;

  constructor(data?: PartialMessage<UpdateContractRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateContractRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateContractRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateContractRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateContractRequest;

  static equals(a: UpdateContractRequest | PlainMessage<UpdateContractRequest> | undefined, b: UpdateContractRequest | PlainMessage<UpdateContractRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateContractResponse
 */
export declare class UpdateContractResponse extends Message<UpdateContractResponse> {
  /**
   * @generated from field: porter.v1.ContractRevision contract_revision = 1;
   */
  contractRevision?: ContractRevision;

  constructor(data?: PartialMessage<UpdateContractResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateContractResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateContractResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateContractResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateContractResponse;

  static equals(a: UpdateContractResponse | PlainMessage<UpdateContractResponse> | undefined, b: UpdateContractResponse | PlainMessage<UpdateContractResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ClusterStatusRequest
 */
export declare class ClusterStatusRequest extends Message<ClusterStatusRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<ClusterStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ClusterStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClusterStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClusterStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClusterStatusRequest;

  static equals(a: ClusterStatusRequest | PlainMessage<ClusterStatusRequest> | undefined, b: ClusterStatusRequest | PlainMessage<ClusterStatusRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ClusterStatusResponse
 */
export declare class ClusterStatusResponse extends Message<ClusterStatusResponse> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * @generated from field: string phase = 3;
   */
  phase: string;

  /**
   * @generated from field: bool infrastructure_status = 4;
   */
  infrastructureStatus: boolean;

  /**
   * @generated from field: bool control_plane_status = 5;
   */
  controlPlaneStatus: boolean;

  constructor(data?: PartialMessage<ClusterStatusResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ClusterStatusResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClusterStatusResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClusterStatusResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClusterStatusResponse;

  static equals(a: ClusterStatusResponse | PlainMessage<ClusterStatusResponse> | undefined, b: ClusterStatusResponse | PlainMessage<ClusterStatusResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.DeleteClusterRequest
 */
export declare class DeleteClusterRequest extends Message<DeleteClusterRequest> {
  /**
   * @generated from field: porter.v1.ContractRevision contract_revision = 1;
   */
  contractRevision?: ContractRevision;

  constructor(data?: PartialMessage<DeleteClusterRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteClusterRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteClusterRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteClusterRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteClusterRequest;

  static equals(a: DeleteClusterRequest | PlainMessage<DeleteClusterRequest> | undefined, b: DeleteClusterRequest | PlainMessage<DeleteClusterRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.DeleteClusterResponse
 */
export declare class DeleteClusterResponse extends Message<DeleteClusterResponse> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<DeleteClusterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteClusterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteClusterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteClusterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteClusterResponse;

  static equals(a: DeleteClusterResponse | PlainMessage<DeleteClusterResponse> | undefined, b: DeleteClusterResponse | PlainMessage<DeleteClusterResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ListRepositoriesForRegistryRequest
 */
export declare class ListRepositoriesForRegistryRequest extends Message<ListRepositoriesForRegistryRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string registry_uri = 2;
   */
  registryUri: string;

  constructor(data?: PartialMessage<ListRepositoriesForRegistryRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListRepositoriesForRegistryRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRepositoriesForRegistryRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRepositoriesForRegistryRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRepositoriesForRegistryRequest;

  static equals(a: ListRepositoriesForRegistryRequest | PlainMessage<ListRepositoriesForRegistryRequest> | undefined, b: ListRepositoriesForRegistryRequest | PlainMessage<ListRepositoriesForRegistryRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ListRepositoriesForRegistryResponse
 */
export declare class ListRepositoriesForRegistryResponse extends Message<ListRepositoriesForRegistryResponse> {
  /**
   * @generated from field: repeated porter.v1.Repository repositories = 1;
   */
  repositories: Repository[];

  constructor(data?: PartialMessage<ListRepositoriesForRegistryResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListRepositoriesForRegistryResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRepositoriesForRegistryResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRepositoriesForRegistryResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRepositoriesForRegistryResponse;

  static equals(a: ListRepositoriesForRegistryResponse | PlainMessage<ListRepositoriesForRegistryResponse> | undefined, b: ListRepositoriesForRegistryResponse | PlainMessage<ListRepositoriesForRegistryResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.Repository
 */
export declare class Repository extends Message<Repository> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string uri = 3;
   */
  uri: string;

  constructor(data?: PartialMessage<Repository>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.Repository";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Repository;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Repository;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Repository;

  static equals(a: Repository | PlainMessage<Repository> | undefined, b: Repository | PlainMessage<Repository> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ListImagesForRepositoryRequest
 */
export declare class ListImagesForRepositoryRequest extends Message<ListImagesForRepositoryRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string registry_uri = 2;
   */
  registryUri: string;

  /**
   * @generated from field: string repo_name = 3;
   */
  repoName: string;

  constructor(data?: PartialMessage<ListImagesForRepositoryRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListImagesForRepositoryRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListImagesForRepositoryRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListImagesForRepositoryRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListImagesForRepositoryRequest;

  static equals(a: ListImagesForRepositoryRequest | PlainMessage<ListImagesForRepositoryRequest> | undefined, b: ListImagesForRepositoryRequest | PlainMessage<ListImagesForRepositoryRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ListImagesForRepositoryResponse
 */
export declare class ListImagesForRepositoryResponse extends Message<ListImagesForRepositoryResponse> {
  /**
   * @generated from field: repeated porter.v1.Image images = 1;
   */
  images: Image[];

  constructor(data?: PartialMessage<ListImagesForRepositoryResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListImagesForRepositoryResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListImagesForRepositoryResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListImagesForRepositoryResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListImagesForRepositoryResponse;

  static equals(a: ListImagesForRepositoryResponse | PlainMessage<ListImagesForRepositoryResponse> | undefined, b: ListImagesForRepositoryResponse | PlainMessage<ListImagesForRepositoryResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.Image
 * @deprecated
 */
export declare class Image extends Message<Image> {
  /**
   * @generated from field: string repository_name = 1;
   */
  repositoryName: string;

  /**
   * @generated from field: string tag = 2;
   */
  tag: string;

  /**
   * @generated from field: string digest = 3;
   */
  digest: string;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 4;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Image>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.Image";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Image;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Image;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Image;

  static equals(a: Image | PlainMessage<Image> | undefined, b: Image | PlainMessage<Image> | undefined): boolean;
}

/**
 * ImageInfo describes everything related to a cloud-agnostic Docker image
 *
 * @generated from message porter.v1.ImageInfo
 */
export declare class ImageInfo extends Message<ImageInfo> {
  /**
   * uri the uri of an image. A valid image pull will use this uri suffixed by a tag
   *
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * artifacts refers to the instances of an image in an image repository, each sharing the same uri
   *
   * @generated from field: repeated porter.v1.ImageArtifact artifacts = 2;
   */
  artifacts: ImageArtifact[];

  constructor(data?: PartialMessage<ImageInfo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ImageInfo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImageInfo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImageInfo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImageInfo;

  static equals(a: ImageInfo | PlainMessage<ImageInfo> | undefined, b: ImageInfo | PlainMessage<ImageInfo> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ImageArtifact
 */
export declare class ImageArtifact extends Message<ImageArtifact> {
  /**
   * tag is the tag associated with the artifact
   *
   * @generated from field: string tag = 1;
   */
  tag: string;

  /**
   * updated_at is the time at which the artifact was created or updated
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 2;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<ImageArtifact>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ImageArtifact";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImageArtifact;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImageArtifact;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImageArtifact;

  static equals(a: ImageArtifact | PlainMessage<ImageArtifact> | undefined, b: ImageArtifact | PlainMessage<ImageArtifact> | undefined): boolean;
}

/**
 * @generated from message porter.v1.TokenForRegistryRequest
 */
export declare class TokenForRegistryRequest extends Message<TokenForRegistryRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string registry_uri = 2;
   */
  registryUri: string;

  constructor(data?: PartialMessage<TokenForRegistryRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.TokenForRegistryRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TokenForRegistryRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TokenForRegistryRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TokenForRegistryRequest;

  static equals(a: TokenForRegistryRequest | PlainMessage<TokenForRegistryRequest> | undefined, b: TokenForRegistryRequest | PlainMessage<TokenForRegistryRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.TokenForRegistryResponse
 */
export declare class TokenForRegistryResponse extends Message<TokenForRegistryResponse> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * @generated from field: google.protobuf.Timestamp expiry = 2;
   */
  expiry?: Timestamp;

  constructor(data?: PartialMessage<TokenForRegistryResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.TokenForRegistryResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TokenForRegistryResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TokenForRegistryResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TokenForRegistryResponse;

  static equals(a: TokenForRegistryResponse | PlainMessage<TokenForRegistryResponse> | undefined, b: TokenForRegistryResponse | PlainMessage<TokenForRegistryResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ReadContractRequest
 */
export declare class ReadContractRequest extends Message<ReadContractRequest> {
  /**
   * @generated from field: porter.v1.ContractRevision contract_revision = 1;
   */
  contractRevision?: ContractRevision;

  constructor(data?: PartialMessage<ReadContractRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ReadContractRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadContractRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadContractRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadContractRequest;

  static equals(a: ReadContractRequest | PlainMessage<ReadContractRequest> | undefined, b: ReadContractRequest | PlainMessage<ReadContractRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ReadContractResponse
 */
export declare class ReadContractResponse extends Message<ReadContractResponse> {
  /**
   * @generated from field: string base64_contract = 1;
   */
  base64Contract: string;

  constructor(data?: PartialMessage<ReadContractResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ReadContractResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadContractResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadContractResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadContractResponse;

  static equals(a: ReadContractResponse | PlainMessage<ReadContractResponse> | undefined, b: ReadContractResponse | PlainMessage<ReadContractResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ContractComplianceChecksRequest
 */
export declare class ContractComplianceChecksRequest extends Message<ContractComplianceChecksRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * vendor is the name of the vendor to run compliance checks for. Optional, if not provider no vendor checks will be run
   *
   * @generated from field: porter.v1.EnumComplianceVendor vendor = 3;
   */
  vendor: EnumComplianceVendor;

  /**
   * profile is the name of the profile to run compliance checks for
   *
   * @generated from field: porter.v1.EnumComplianceProfile profile = 4;
   */
  profile: EnumComplianceProfile;

  constructor(data?: PartialMessage<ContractComplianceChecksRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ContractComplianceChecksRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContractComplianceChecksRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContractComplianceChecksRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContractComplianceChecksRequest;

  static equals(a: ContractComplianceChecksRequest | PlainMessage<ContractComplianceChecksRequest> | undefined, b: ContractComplianceChecksRequest | PlainMessage<ContractComplianceChecksRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ContractComplianceChecksResponse
 */
export declare class ContractComplianceChecksResponse extends Message<ContractComplianceChecksResponse> {
  /**
   * check_groups are the list of porter internal check groups that have been run against the contract
   *
   * @generated from field: repeated porter.v1.ContractComplianceCheckGroup check_groups = 1;
   */
  checkGroups: ContractComplianceCheckGroup[];

  /**
   * vendor_check are the results of any vendor specific checks, derived based on the status of the internal checks
   *
   * @generated from field: repeated porter.v1.VendorComplianceCheck vendor_checks = 2;
   */
  vendorChecks: VendorComplianceCheck[];

  constructor(data?: PartialMessage<ContractComplianceChecksResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ContractComplianceChecksResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContractComplianceChecksResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContractComplianceChecksResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContractComplianceChecksResponse;

  static equals(a: ContractComplianceChecksResponse | PlainMessage<ContractComplianceChecksResponse> | undefined, b: ContractComplianceChecksResponse | PlainMessage<ContractComplianceChecksResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ValidatePorterAppRequest
 */
export declare class ValidatePorterAppRequest extends Message<ValidatePorterAppRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app will be installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 2 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * commit_sha is the current commit sha to be built and applied
   *
   * @generated from field: string commit_sha = 3;
   */
  commitSha: string;

  /**
   * app is the definition of the PorterApp to be applied
   *
   * @generated from field: porter.v1.PorterApp app = 4;
   */
  app?: PorterApp;

  /**
   * deletions is an object containing the names of fields to be deleted from the app
   *
   * @generated from field: porter.v1.Deletions deletions = 5;
   */
  deletions?: Deletions;

  /**
   * app_overrides contains environment specific overrides if they exist, applied depending on the deployment target
   *
   * @generated from field: porter.v1.PorterApp app_overrides = 6;
   */
  appOverrides?: PorterApp;

  /**
   * base_deployment_target_id is used to find a revision of the app in the base deployment target, which hydrates the preview app template
   * deprecated: use the base deployment target directly on the template instead
   *
   * @generated from field: string base_deployment_target_id = 7 [deprecated = true];
   * @deprecated
   */
  baseDeploymentTargetId: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target where the app will be installed
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 8;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<ValidatePorterAppRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ValidatePorterAppRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValidatePorterAppRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValidatePorterAppRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValidatePorterAppRequest;

  static equals(a: ValidatePorterAppRequest | PlainMessage<ValidatePorterAppRequest> | undefined, b: ValidatePorterAppRequest | PlainMessage<ValidatePorterAppRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ValidatePorterAppResponse
 */
export declare class ValidatePorterAppResponse extends Message<ValidatePorterAppResponse> {
  /**
   * @generated from field: porter.v1.PorterApp app = 1;
   */
  app?: PorterApp;

  constructor(data?: PartialMessage<ValidatePorterAppResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ValidatePorterAppResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValidatePorterAppResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValidatePorterAppResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValidatePorterAppResponse;

  static equals(a: ValidatePorterAppResponse | PlainMessage<ValidatePorterAppResponse> | undefined, b: ValidatePorterAppResponse | PlainMessage<ValidatePorterAppResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ApplyPorterAppRequest
 */
export declare class ApplyPorterAppRequest extends Message<ApplyPorterAppRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app will be installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 2 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * app is the definition of the PorterApp to be applied
   *
   * @generated from field: porter.v1.PorterApp app = 3;
   */
  app?: PorterApp;

  /**
   * porter_app_revision_id is the id of the PorterAppRevision to be applied.  This is used by the CLI to provide updates to an existing app revision. If provided, app must be empty.
   *
   * @generated from field: string porter_app_revision_id = 4;
   */
  porterAppRevisionId: string;

  /**
   * force_build is a flag that forces the app to rebuild, regardless of the existing tag. This is used on initial apply by the CLI.
   *
   * @generated from field: bool force_build = 5;
   */
  forceBuild: boolean;

  /**
   * app_env is the current set of environment variables for the upcoming app revision
   *
   * @generated from field: porter.v1.EnvGroupVariables app_env = 6;
   */
  appEnv?: EnvGroupVariables;

  /**
   * is_hard_env_update is a flag that indicates whether the app environment should be fully overwritten, or if the new app env variables should be merged with the existing
   *
   * @generated from field: bool is_hard_env_update = 7;
   */
  isHardEnvUpdate: boolean;

  /**
   * deployment_target_identifier is the object that identifies the deployment target where the app will be installed
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 8;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<ApplyPorterAppRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ApplyPorterAppRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApplyPorterAppRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApplyPorterAppRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApplyPorterAppRequest;

  static equals(a: ApplyPorterAppRequest | PlainMessage<ApplyPorterAppRequest> | undefined, b: ApplyPorterAppRequest | PlainMessage<ApplyPorterAppRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ApplyPorterAppResponse
 */
export declare class ApplyPorterAppResponse extends Message<ApplyPorterAppResponse> {
  /**
   * @generated from field: string porter_app_revision_id = 1;
   */
  porterAppRevisionId: string;

  /**
   * cli_action is the action that the CLI should take after applying the PorterApp (at the time of writing, either build the image or track whether a predeploy job has completed)
   *
   * @generated from field: porter.v1.EnumCLIAction cli_action = 2;
   */
  cliAction: EnumCLIAction;

  constructor(data?: PartialMessage<ApplyPorterAppResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ApplyPorterAppResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApplyPorterAppResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApplyPorterAppResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApplyPorterAppResponse;

  static equals(a: ApplyPorterAppResponse | PlainMessage<ApplyPorterAppResponse> | undefined, b: ApplyPorterAppResponse | PlainMessage<ApplyPorterAppResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateAppRequest
 */
export declare class UpdateAppRequest extends Message<UpdateAppRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 2;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  /**
   * app is the (potentially partial) definition of the PorterApp to be applied
   *
   * @generated from field: porter.v1.PorterApp app = 3;
   */
  app?: PorterApp;

  /**
   * app_revision_id is the id of the PorterAppRevision to be applied.  This is used by the CLI to provide updates to an existing app revision. If provided, app must be empty.
   *
   * @generated from field: string app_revision_id = 4;
   */
  appRevisionId: string;

  /**
   * app_env is the current set of environment variables for the upcoming app revision
   *
   * @generated from field: porter.v1.EnvGroupVariables app_env = 5;
   */
  appEnv?: EnvGroupVariables;

  /**
   * deletions is an object containing the names of fields to be deleted from the app
   *
   * @generated from field: porter.v1.Deletions deletions = 6;
   */
  deletions?: Deletions;

  /**
   * app_overrides contains environment specific overrides if they exist, applied depending on the deployment target
   *
   * @generated from field: porter.v1.PorterApp app_overrides = 7;
   */
  appOverrides?: PorterApp;

  /**
   * is_env_override is a flag that indicates whether the app environment should be fully overwritten, or if the new app env variables should be merged with the existing
   *
   * @generated from field: bool is_env_override = 8;
   */
  isEnvOverride: boolean;

  /**
   * is_predeploy_eligible is a flag that indicates whether the revision is ready for predeploy to run, usually after a successful build
   *
   * @generated from field: bool is_predeploy_eligible = 9;
   */
  isPredeployEligible: boolean;

  /**
   * commit_sha is the current commit sha to be built and applied. If provided, it is assumed that the app source has changed
   *
   * @generated from field: string commit_sha = 10;
   */
  commitSha: string;

  /**
   * addons is a list of addons which should be deployed alongside the app
   *
   * @generated from field: repeated porter.v1.Addon addons = 11;
   */
  addons: Addon[];

  /**
   * addon_overrides contains environment specific overrides for addons if they exist, applied depending on the deployment target
   * if any addons are provided, these will be the only addons deployed alongside the app and the others will be ignored
   *
   * @generated from field: repeated porter.v1.Addon addon_overrides = 12;
   */
  addonOverrides: Addon[];

  /**
   * exact is a flag that indicates whether the app should be updated to the exact state provided, or if it should be merged with the existing state
   *
   * @generated from field: bool exact = 13;
   */
  exact: boolean;

  /**
   * b64_description is a base64-encoded user-generated description of the update
   *
   * @generated from field: string b64_description = 14;
   */
  b64Description: string;

  constructor(data?: PartialMessage<UpdateAppRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateAppRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppRequest;

  static equals(a: UpdateAppRequest | PlainMessage<UpdateAppRequest> | undefined, b: UpdateAppRequest | PlainMessage<UpdateAppRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateAppResponse
 */
export declare class UpdateAppResponse extends Message<UpdateAppResponse> {
  /**
   * app_revision_id is the id of the PorterAppRevision that was updated
   *
   * @generated from field: string app_revision_id = 1;
   */
  appRevisionId: string;

  /**
   * cli_action is the action that the CLI should take after applying the PorterApp (at the time of writing, either build the image or track whether a predeploy job has completed)
   *
   * @generated from field: porter.v1.EnumCLIAction cli_action = 2;
   */
  cliAction: EnumCLIAction;

  constructor(data?: PartialMessage<UpdateAppResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateAppResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppResponse;

  static equals(a: UpdateAppResponse | PlainMessage<UpdateAppResponse> | undefined, b: UpdateAppResponse | PlainMessage<UpdateAppResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateRevisionStatusRequest
 */
export declare class UpdateRevisionStatusRequest extends Message<UpdateRevisionStatusRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_revision_id is the id of the PorterAppRevision
   *
   * @generated from field: string app_revision_id = 2;
   */
  appRevisionId: string;

  /**
   * revision_status is the new status of the revision
   *
   * @generated from field: porter.v1.EnumRevisionStatus revision_status = 3;
   */
  revisionStatus: EnumRevisionStatus;

  constructor(data?: PartialMessage<UpdateRevisionStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateRevisionStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRevisionStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRevisionStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRevisionStatusRequest;

  static equals(a: UpdateRevisionStatusRequest | PlainMessage<UpdateRevisionStatusRequest> | undefined, b: UpdateRevisionStatusRequest | PlainMessage<UpdateRevisionStatusRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateRevisionStatusResponse
 */
export declare class UpdateRevisionStatusResponse extends Message<UpdateRevisionStatusResponse> {
  constructor(data?: PartialMessage<UpdateRevisionStatusResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateRevisionStatusResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRevisionStatusResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRevisionStatusResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRevisionStatusResponse;

  static equals(a: UpdateRevisionStatusResponse | PlainMessage<UpdateRevisionStatusResponse> | undefined, b: UpdateRevisionStatusResponse | PlainMessage<UpdateRevisionStatusResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.RollbackRevisionRequest
 */
export declare class RollbackRevisionRequest extends Message<RollbackRevisionRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_id is the id of the PorterApp to roll back
   *
   * @generated from field: int64 app_id = 2;
   */
  appId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 3 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * app_revision_id is the id of the PorterAppRevision
   *
   * @generated from field: string app_revision_id = 4;
   */
  appRevisionId: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 5;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<RollbackRevisionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.RollbackRevisionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RollbackRevisionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RollbackRevisionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RollbackRevisionRequest;

  static equals(a: RollbackRevisionRequest | PlainMessage<RollbackRevisionRequest> | undefined, b: RollbackRevisionRequest | PlainMessage<RollbackRevisionRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.RollbackRevisionResponse
 */
export declare class RollbackRevisionResponse extends Message<RollbackRevisionResponse> {
  /**
   * target_revision_number is the revision number of the revision that was rolled back to
   *
   * @generated from field: int32 target_revision_number = 1;
   */
  targetRevisionNumber: number;

  /**
   * app_revision_id is the id of the newly created PorterAppRevision
   *
   * @generated from field: string app_revision_id = 2;
   */
  appRevisionId: string;

  constructor(data?: PartialMessage<RollbackRevisionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.RollbackRevisionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RollbackRevisionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RollbackRevisionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RollbackRevisionResponse;

  static equals(a: RollbackRevisionResponse | PlainMessage<RollbackRevisionResponse> | undefined, b: RollbackRevisionResponse | PlainMessage<RollbackRevisionResponse> | undefined): boolean;
}

/**
 * DeletePorterAppRequest is the request object when deleting a porter app from a given project
 *
 * @generated from message porter.v1.DeletePorterAppRequest
 */
export declare class DeletePorterAppRequest extends Message<DeletePorterAppRequest> {
  /**
   * project_id is the id of the project that the PorterApp belongs to
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_name is the name of the porter app to be deleted
   *
   * @generated from field: string app_name = 2;
   */
  appName: string;

  constructor(data?: PartialMessage<DeletePorterAppRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeletePorterAppRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePorterAppRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePorterAppRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePorterAppRequest;

  static equals(a: DeletePorterAppRequest | PlainMessage<DeletePorterAppRequest> | undefined, b: DeletePorterAppRequest | PlainMessage<DeletePorterAppRequest> | undefined): boolean;
}

/**
 * DeletePorterAppResponse is the response object when deleting a porter app from a given project
 *
 * @generated from message porter.v1.DeletePorterAppResponse
 */
export declare class DeletePorterAppResponse extends Message<DeletePorterAppResponse> {
  /**
   * app_id is the id of the PorterApp that was deleted
   *
   * @generated from field: int64 app_id = 1;
   */
  appId: bigint;

  constructor(data?: PartialMessage<DeletePorterAppResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeletePorterAppResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePorterAppResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePorterAppResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePorterAppResponse;

  static equals(a: DeletePorterAppResponse | PlainMessage<DeletePorterAppResponse> | undefined, b: DeletePorterAppResponse | PlainMessage<DeletePorterAppResponse> | undefined): boolean;
}

/**
 * DeleteAppDeploymentRequest is the request object when removing a porter app from a given deployment target
 *
 * @generated from message porter.v1.DeleteAppDeploymentRequest
 */
export declare class DeleteAppDeploymentRequest extends Message<DeleteAppDeploymentRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 2 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * app_name is the name of the porter app to be uninstalled
   *
   * @generated from field: string app_name = 3;
   */
  appName: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 4;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<DeleteAppDeploymentRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteAppDeploymentRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAppDeploymentRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAppDeploymentRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAppDeploymentRequest;

  static equals(a: DeleteAppDeploymentRequest | PlainMessage<DeleteAppDeploymentRequest> | undefined, b: DeleteAppDeploymentRequest | PlainMessage<DeleteAppDeploymentRequest> | undefined): boolean;
}

/**
 * DeleteAppDeploymentResponse is the response object when removing a porter app from a given deployment target
 *
 * @generated from message porter.v1.DeleteAppDeploymentResponse
 */
export declare class DeleteAppDeploymentResponse extends Message<DeleteAppDeploymentResponse> {
  constructor(data?: PartialMessage<DeleteAppDeploymentResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteAppDeploymentResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAppDeploymentResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAppDeploymentResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAppDeploymentResponse;

  static equals(a: DeleteAppDeploymentResponse | PlainMessage<DeleteAppDeploymentResponse> | undefined, b: DeleteAppDeploymentResponse | PlainMessage<DeleteAppDeploymentResponse> | undefined): boolean;
}

/**
 * DeleteDeploymentTargetRequest is the request object when removing a deployment target from a given cluster
 *
 * @generated from message porter.v1.DeleteDeploymentTargetRequest
 */
export declare class DeleteDeploymentTargetRequest extends Message<DeleteDeploymentTargetRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_id is the id of the deployment target to be deleted. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 2 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 3;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<DeleteDeploymentTargetRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteDeploymentTargetRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteDeploymentTargetRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteDeploymentTargetRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteDeploymentTargetRequest;

  static equals(a: DeleteDeploymentTargetRequest | PlainMessage<DeleteDeploymentTargetRequest> | undefined, b: DeleteDeploymentTargetRequest | PlainMessage<DeleteDeploymentTargetRequest> | undefined): boolean;
}

/**
 * DeleteDeploymentTargetResponse is the response object when removing a deployment target from a given cluster
 *
 * @generated from message porter.v1.DeleteDeploymentTargetResponse
 */
export declare class DeleteDeploymentTargetResponse extends Message<DeleteDeploymentTargetResponse> {
  constructor(data?: PartialMessage<DeleteDeploymentTargetResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteDeploymentTargetResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteDeploymentTargetResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteDeploymentTargetResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteDeploymentTargetResponse;

  static equals(a: DeleteDeploymentTargetResponse | PlainMessage<DeleteDeploymentTargetResponse> | undefined, b: DeleteDeploymentTargetResponse | PlainMessage<DeleteDeploymentTargetResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.CurrentAppRevisionRequest
 */
export declare class CurrentAppRevisionRequest extends Message<CurrentAppRevisionRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_id is the id of the PorterApp that is currently installed
   *
   * @generated from field: int64 app_id = 2;
   */
  appId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 3 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 4;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<CurrentAppRevisionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CurrentAppRevisionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CurrentAppRevisionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CurrentAppRevisionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CurrentAppRevisionRequest;

  static equals(a: CurrentAppRevisionRequest | PlainMessage<CurrentAppRevisionRequest> | undefined, b: CurrentAppRevisionRequest | PlainMessage<CurrentAppRevisionRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.AppRevision
 */
export declare class AppRevision extends Message<AppRevision> {
  /**
   * app is the definition of the PorterApp that is currently installed
   *
   * @generated from field: porter.v1.PorterApp app = 1;
   */
  app?: PorterApp;

  /**
   * status is the status of the revision
   *
   * @generated from field: string status = 2;
   */
  status: string;

  /**
   * revision_number is the revision number respective to the application and deployment target
   *
   * @generated from field: uint64 revision_number = 3;
   */
  revisionNumber: bigint;

  /**
   * created_at is the time the revision was created
   *
   * @generated from field: google.protobuf.Timestamp created_at = 4;
   */
  createdAt?: Timestamp;

  /**
   * updated_at is the time the revision was last updated
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 5;
   */
  updatedAt?: Timestamp;

  /**
   * id is the id of the revision
   *
   * @generated from field: string id = 6;
   */
  id: string;

  /**
   * deployment_target_id is the id of the deployment target where the revision occurs
   *
   * @generated from field: string deployment_target_id = 7;
   */
  deploymentTargetId: string;

  /**
   * app_instance_id is the id of the app instance
   *
   * @generated from field: string app_instance_id = 8;
   */
  appInstanceId: string;

  /**
   * app_instance_name is the name of the app instance
   *
   * @generated from field: string app_instance_name = 9;
   */
  appInstanceName: string;

  /**
   * porter_app_id is the id of the porter app
   *
   * @generated from field: int64 porter_app_id = 10;
   */
  porterAppId: bigint;

  /**
   * b64_description is a base64-encoded user-generated description of the revision
   *
   * @generated from field: string b64_description = 11;
   */
  b64Description: string;

  constructor(data?: PartialMessage<AppRevision>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppRevision";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppRevision;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppRevision;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppRevision;

  static equals(a: AppRevision | PlainMessage<AppRevision> | undefined, b: AppRevision | PlainMessage<AppRevision> | undefined): boolean;
}

/**
 * AppRevisionStatusRequest is used to query the status of an app revision
 *
 * @generated from message porter.v1.AppRevisionStatusRequest
 */
export declare class AppRevisionStatusRequest extends Message<AppRevisionStatusRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_revision_id is the id of the revision to query
   *
   * @generated from field: string app_revision_id = 2;
   */
  appRevisionId: string;

  constructor(data?: PartialMessage<AppRevisionStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppRevisionStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppRevisionStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppRevisionStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppRevisionStatusRequest;

  static equals(a: AppRevisionStatusRequest | PlainMessage<AppRevisionStatusRequest> | undefined, b: AppRevisionStatusRequest | PlainMessage<AppRevisionStatusRequest> | undefined): boolean;
}

/**
 * AppRevisionStatusResponse is the response object from querying the status of an app revision
 *
 * @generated from message porter.v1.AppRevisionStatusResponse
 */
export declare class AppRevisionStatusResponse extends Message<AppRevisionStatusResponse> {
  /**
   * predeploy_started indicates whether the predeploy has started
   *
   * @generated from field: bool predeploy_started = 1;
   */
  predeployStarted: boolean;

  /**
   * predeploy_successful indicates whether the predeploy was successful
   *
   * @generated from field: bool predeploy_successful = 2;
   */
  predeploySuccessful: boolean;

  /**
   * predeploy_failed indicates whether the predeploy failed
   *
   * @generated from field: bool predeploy_failed = 3;
   */
  predeployFailed: boolean;

  /**
   * install_started indicates whether the install has started
   *
   * @generated from field: bool install_started = 4;
   */
  installStarted: boolean;

  /**
   * install_successful indicates whether the revision install has completed successfully
   *
   * @generated from field: bool install_successful = 5;
   */
  installSuccessful: boolean;

  /**
   * install_failed indicates whether the revision install has failed
   *
   * @generated from field: bool install_failed = 6;
   */
  installFailed: boolean;

  /**
   * deployment_started indicates whether the deployment has started
   *
   * @generated from field: bool deployment_started = 7;
   */
  deploymentStarted: boolean;

  /**
   * deployment_successful indicates whether the revision deployment has completed successfully
   *
   * @generated from field: bool deployment_successful = 8;
   */
  deploymentSuccessful: boolean;

  /**
   * deployment_failed indicates whether the revision deployment has failed
   *
   * @generated from field: bool deployment_failed = 9;
   */
  deploymentFailed: boolean;

  /**
   * is_in_terminal_status indicates whether the revision is in a terminal status (its status will not change)
   *
   * @generated from field: bool is_in_terminal_status = 10;
   */
  isInTerminalStatus: boolean;

  /**
   * status is the current status of the revision
   *
   * @generated from field: porter.v1.EnumAppRevisionStatus status = 11;
   */
  status: EnumAppRevisionStatus;

  constructor(data?: PartialMessage<AppRevisionStatusResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppRevisionStatusResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppRevisionStatusResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppRevisionStatusResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppRevisionStatusResponse;

  static equals(a: AppRevisionStatusResponse | PlainMessage<AppRevisionStatusResponse> | undefined, b: AppRevisionStatusResponse | PlainMessage<AppRevisionStatusResponse> | undefined): boolean;
}

/**
 * UpdateRevisionPayload is used to send messages via nats to update a revision
 *
 * @generated from message porter.v1.UpdateRevisionPayload
 */
export declare class UpdateRevisionPayload extends Message<UpdateRevisionPayload> {
  /**
   * project_id is the id of the project that the revision belongs to
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * revision_id is the id of the revision
   *
   * @generated from field: string revision_id = 2;
   */
  revisionId: string;

  /**
   * commit_sha is the commit_sha of a new build
   *
   * @generated from field: string commit_sha = 3;
   */
  commitSha: string;

  /**
   * image is the image information for a new image
   *
   * @generated from field: porter.v1.AppImage image = 4;
   */
  image?: AppImage;

  /**
   * triggered_by specifies what triggered the update
   *
   * @generated from field: porter.v1.EnumUpdateTrigger triggered_by = 5;
   */
  triggeredBy: EnumUpdateTrigger;

  constructor(data?: PartialMessage<UpdateRevisionPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateRevisionPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRevisionPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRevisionPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRevisionPayload;

  static equals(a: UpdateRevisionPayload | PlainMessage<UpdateRevisionPayload> | undefined, b: UpdateRevisionPayload | PlainMessage<UpdateRevisionPayload> | undefined): boolean;
}

/**
 * UpdateAddonPayload is used to send messages via nats to update an addon
 *
 * @generated from message porter.v1.UpdateAddonPayload
 */
export declare class UpdateAddonPayload extends Message<UpdateAddonPayload> {
  /**
   * project_id is the id of the project that the revision belongs to
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * commit_sha is the commit containing the latest values for the addon in the config repo
   *
   * @generated from field: string commit_sha = 2;
   */
  commitSha: string;

  constructor(data?: PartialMessage<UpdateAddonPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateAddonPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAddonPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAddonPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAddonPayload;

  static equals(a: UpdateAddonPayload | PlainMessage<UpdateAddonPayload> | undefined, b: UpdateAddonPayload | PlainMessage<UpdateAddonPayload> | undefined): boolean;
}

/**
 * @generated from message porter.v1.RequireAppPayload
 */
export declare class RequireAppPayload extends Message<RequireAppPayload> {
  /**
   * project_id is the id of the project the app belongs to
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_name is the name of the app
   *
   * @generated from field: string app_name = 2;
   */
  appName: string;

  /**
   * app_revision_id is the id of the app revision specifying this requirement, applied to the deployment target where the requirement is expected
   *
   * @generated from field: string app_revision_id = 3;
   */
  appRevisionId: string;

  /**
   * source_deployment_target is the object that identifies the deployment target where the app definition is coming from
   * if not provided, this will be the default target for the same cluster as the target where the requirement is expected
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier source_deployment_target = 4;
   */
  sourceDeploymentTarget?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<RequireAppPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.RequireAppPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequireAppPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequireAppPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequireAppPayload;

  static equals(a: RequireAppPayload | PlainMessage<RequireAppPayload> | undefined, b: RequireAppPayload | PlainMessage<RequireAppPayload> | undefined): boolean;
}

/**
 * @generated from message porter.v1.CurrentAppRevisionResponse
 */
export declare class CurrentAppRevisionResponse extends Message<CurrentAppRevisionResponse> {
  /**
   * revision is the currently deployed app revision for a given porter_app and deployment_target
   *
   * @generated from field: porter.v1.AppRevision app_revision = 1;
   */
  appRevision?: AppRevision;

  constructor(data?: PartialMessage<CurrentAppRevisionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CurrentAppRevisionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CurrentAppRevisionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CurrentAppRevisionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CurrentAppRevisionResponse;

  static equals(a: CurrentAppRevisionResponse | PlainMessage<CurrentAppRevisionResponse> | undefined, b: CurrentAppRevisionResponse | PlainMessage<CurrentAppRevisionResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ListAppRevisionsRequest
 */
export declare class ListAppRevisionsRequest extends Message<ListAppRevisionsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_id is the id of the PorterApp that is currently installed
   *
   * @generated from field: int64 app_id = 2;
   */
  appId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 3 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 4;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<ListAppRevisionsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListAppRevisionsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAppRevisionsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAppRevisionsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAppRevisionsRequest;

  static equals(a: ListAppRevisionsRequest | PlainMessage<ListAppRevisionsRequest> | undefined, b: ListAppRevisionsRequest | PlainMessage<ListAppRevisionsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ListAppRevisionsResponse
 */
export declare class ListAppRevisionsResponse extends Message<ListAppRevisionsResponse> {
  /**
   * app_revisions is the list of app revisions for the given app and deployment target
   *
   * @generated from field: repeated porter.v1.AppRevision app_revisions = 1;
   */
  appRevisions: AppRevision[];

  constructor(data?: PartialMessage<ListAppRevisionsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListAppRevisionsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAppRevisionsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAppRevisionsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAppRevisionsResponse;

  static equals(a: ListAppRevisionsResponse | PlainMessage<ListAppRevisionsResponse> | undefined, b: ListAppRevisionsResponse | PlainMessage<ListAppRevisionsResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.LatestAppRevisionsRequest
 */
export declare class LatestAppRevisionsRequest extends Message<LatestAppRevisionsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_identifier is the object that identifies the deployment target. Optional.
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 2;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  /**
   * deployment_target_id is the id of the deployment target to retrieve revisions from. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 3 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * cluster_id is the id of the cluster to retrieve revisions from. Optional.
   *
   * @generated from field: int64 cluster_id = 4;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<LatestAppRevisionsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.LatestAppRevisionsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LatestAppRevisionsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LatestAppRevisionsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LatestAppRevisionsRequest;

  static equals(a: LatestAppRevisionsRequest | PlainMessage<LatestAppRevisionsRequest> | undefined, b: LatestAppRevisionsRequest | PlainMessage<LatestAppRevisionsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.LatestAppRevisionsResponse
 */
export declare class LatestAppRevisionsResponse extends Message<LatestAppRevisionsResponse> {
  /**
   * app_revisions is the list of app revisions for the given deployment target
   *
   * @generated from field: repeated porter.v1.AppRevision app_revisions = 1;
   */
  appRevisions: AppRevision[];

  constructor(data?: PartialMessage<LatestAppRevisionsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.LatestAppRevisionsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LatestAppRevisionsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LatestAppRevisionsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LatestAppRevisionsResponse;

  static equals(a: LatestAppRevisionsResponse | PlainMessage<LatestAppRevisionsResponse> | undefined, b: LatestAppRevisionsResponse | PlainMessage<LatestAppRevisionsResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.GetAppRevisionRequest
 */
export declare class GetAppRevisionRequest extends Message<GetAppRevisionRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_revision_id is the id of the PorterAppRevision to return
   *
   * @generated from field: string app_revision_id = 2;
   */
  appRevisionId: string;

  constructor(data?: PartialMessage<GetAppRevisionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.GetAppRevisionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAppRevisionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAppRevisionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAppRevisionRequest;

  static equals(a: GetAppRevisionRequest | PlainMessage<GetAppRevisionRequest> | undefined, b: GetAppRevisionRequest | PlainMessage<GetAppRevisionRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.GetAppRevisionResponse
 */
export declare class GetAppRevisionResponse extends Message<GetAppRevisionResponse> {
  /**
   * app_revision is the PorterAppRevision that was requested
   *
   * @generated from field: porter.v1.AppRevision app_revision = 1;
   */
  appRevision?: AppRevision;

  constructor(data?: PartialMessage<GetAppRevisionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.GetAppRevisionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAppRevisionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAppRevisionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAppRevisionResponse;

  static equals(a: GetAppRevisionResponse | PlainMessage<GetAppRevisionResponse> | undefined, b: GetAppRevisionResponse | PlainMessage<GetAppRevisionResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.AppTemplateRequest
 */
export declare class AppTemplateRequest extends Message<AppTemplateRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_id is the id of the PorterApp to return the template for
   *
   * @generated from field: int64 app_id = 2;
   */
  appId: bigint;

  constructor(data?: PartialMessage<AppTemplateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppTemplateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppTemplateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppTemplateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppTemplateRequest;

  static equals(a: AppTemplateRequest | PlainMessage<AppTemplateRequest> | undefined, b: AppTemplateRequest | PlainMessage<AppTemplateRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.AppTemplateResponse
 */
export declare class AppTemplateResponse extends Message<AppTemplateResponse> {
  /**
   * app_template is the PorterApp template hydrated with the latest revision of the base app
   *
   * @generated from field: porter.v1.PorterApp app_template = 1;
   */
  appTemplate?: PorterApp;

  /**
   * app_env is the current set of environment variables that will be used alongside the app template
   *
   * @generated from field: porter.v1.EnvGroupVariables app_env = 2;
   */
  appEnv?: EnvGroupVariables;

  /**
   * addon_templates is the list of addons to be included alongside the app template
   *
   * @generated from field: repeated porter.v1.AddonWithEnvVars addon_templates = 3;
   */
  addonTemplates: AddonWithEnvVars[];

  constructor(data?: PartialMessage<AppTemplateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppTemplateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppTemplateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppTemplateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppTemplateResponse;

  static equals(a: AppTemplateResponse | PlainMessage<AppTemplateResponse> | undefined, b: AppTemplateResponse | PlainMessage<AppTemplateResponse> | undefined): boolean;
}

/**
 * AddonTemplatesPayload is an object containg a list of addons to be included alongside an app template
 * these addons will be applied or updated whenever an app is deployed to a new preview deployment target
 *
 * @generated from message porter.v1.AddonTemplatesPayload
 */
export declare class AddonTemplatesPayload extends Message<AddonTemplatesPayload> {
  /**
   * addon_templates is the list of addons to be included in the template
   *
   * @generated from field: repeated porter.v1.Addon addon_templates = 1;
   */
  addonTemplates: Addon[];

  constructor(data?: PartialMessage<AddonTemplatesPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AddonTemplatesPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddonTemplatesPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddonTemplatesPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddonTemplatesPayload;

  static equals(a: AddonTemplatesPayload | PlainMessage<AddonTemplatesPayload> | undefined, b: AddonTemplatesPayload | PlainMessage<AddonTemplatesPayload> | undefined): boolean;
}

/**
 * @generated from message porter.v1.AddonWithEnvVars
 */
export declare class AddonWithEnvVars extends Message<AddonWithEnvVars> {
  /**
   * addon is the addon to be included in the template
   *
   * @generated from field: porter.v1.Addon addon = 1;
   */
  addon?: Addon;

  /**
   * env_vars is the set of environment variables to create the addon with
   *
   * @generated from field: porter.v1.EnvGroupVariables env_vars = 2;
   */
  envVars?: EnvGroupVariables;

  constructor(data?: PartialMessage<AddonWithEnvVars>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AddonWithEnvVars";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddonWithEnvVars;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddonWithEnvVars;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddonWithEnvVars;

  static equals(a: AddonWithEnvVars | PlainMessage<AddonWithEnvVars> | undefined, b: AddonWithEnvVars | PlainMessage<AddonWithEnvVars> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateAppTemplateRequest
 */
export declare class UpdateAppTemplateRequest extends Message<UpdateAppTemplateRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_name is the name of the PorterApp to update the template for
   *
   * @generated from field: string app_name = 2;
   */
  appName: string;

  /**
   * app_template is the PorterApp template to be updated
   *
   * @generated from field: porter.v1.PorterApp app_template = 3;
   */
  appTemplate?: PorterApp;

  /**
   * app_env is the current set of environment variables that will be used alongside the app template
   *
   * @generated from field: porter.v1.EnvGroupVariables app_env = 4;
   */
  appEnv?: EnvGroupVariables;

  /**
   * addon_templates is the collection of addons to be included alongside the template when applied in a new preview deployment target
   *
   * @generated from field: repeated porter.v1.AddonWithEnvVars addon_templates = 5;
   */
  addonTemplates: AddonWithEnvVars[];

  /**
   * base_deployment_target_id is the id of the deployment target that the template is based on
   * the template will be hydrated with the latest version of the app in the base when applied to a new preview deployment target
   *
   * @generated from field: string base_deployment_target_id = 6;
   */
  baseDeploymentTargetId: string;

  constructor(data?: PartialMessage<UpdateAppTemplateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateAppTemplateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppTemplateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppTemplateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppTemplateRequest;

  static equals(a: UpdateAppTemplateRequest | PlainMessage<UpdateAppTemplateRequest> | undefined, b: UpdateAppTemplateRequest | PlainMessage<UpdateAppTemplateRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateAppTemplateResponse
 */
export declare class UpdateAppTemplateResponse extends Message<UpdateAppTemplateResponse> {
  constructor(data?: PartialMessage<UpdateAppTemplateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateAppTemplateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppTemplateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppTemplateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppTemplateResponse;

  static equals(a: UpdateAppTemplateResponse | PlainMessage<UpdateAppTemplateResponse> | undefined, b: UpdateAppTemplateResponse | PlainMessage<UpdateAppTemplateResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.LatestAddonsRequest
 */
export declare class LatestAddonsRequest extends Message<LatestAddonsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_identifier is the object that identifies the deployment target. Optional.
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 2;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  /**
   * cluster_id is the id of the cluster to retrieve addons from. Optional.
   *
   * @generated from field: int64 cluster_id = 4;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<LatestAddonsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.LatestAddonsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LatestAddonsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LatestAddonsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LatestAddonsRequest;

  static equals(a: LatestAddonsRequest | PlainMessage<LatestAddonsRequest> | undefined, b: LatestAddonsRequest | PlainMessage<LatestAddonsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.LatestAddonsResponse
 */
export declare class LatestAddonsResponse extends Message<LatestAddonsResponse> {
  /**
   * addons is the list of addons for the given deployment target
   *
   * @generated from field: repeated porter.v1.Addon addons = 1;
   */
  addons: Addon[];

  constructor(data?: PartialMessage<LatestAddonsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.LatestAddonsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LatestAddonsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LatestAddonsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LatestAddonsResponse;

  static equals(a: LatestAddonsResponse | PlainMessage<LatestAddonsResponse> | undefined, b: LatestAddonsResponse | PlainMessage<LatestAddonsResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.PredeployStatusRequest
 */
export declare class PredeployStatusRequest extends Message<PredeployStatusRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * app_revision_id is the revision id of the PorterApp which should have its predeploy status checked
   *
   * @generated from field: string app_revision_id = 2;
   */
  appRevisionId: string;

  constructor(data?: PartialMessage<PredeployStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.PredeployStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PredeployStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PredeployStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PredeployStatusRequest;

  static equals(a: PredeployStatusRequest | PlainMessage<PredeployStatusRequest> | undefined, b: PredeployStatusRequest | PlainMessage<PredeployStatusRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.PredeployStatusResponse
 */
export declare class PredeployStatusResponse extends Message<PredeployStatusResponse> {
  /**
   * predeploy_status is the status of the predeploy job
   *
   * @generated from field: porter.v1.EnumPredeployStatus predeploy_status = 1;
   */
  predeployStatus: EnumPredeployStatus;

  constructor(data?: PartialMessage<PredeployStatusResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.PredeployStatusResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PredeployStatusResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PredeployStatusResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PredeployStatusResponse;

  static equals(a: PredeployStatusResponse | PlainMessage<PredeployStatusResponse> | undefined, b: PredeployStatusResponse | PlainMessage<PredeployStatusResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.DeploymentTargetDetailsRequest
 */
export declare class DeploymentTargetDetailsRequest extends Message<DeploymentTargetDetailsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_id is the id of the deployment target. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 2 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 3;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<DeploymentTargetDetailsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeploymentTargetDetailsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeploymentTargetDetailsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeploymentTargetDetailsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeploymentTargetDetailsRequest;

  static equals(a: DeploymentTargetDetailsRequest | PlainMessage<DeploymentTargetDetailsRequest> | undefined, b: DeploymentTargetDetailsRequest | PlainMessage<DeploymentTargetDetailsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.DeploymentTargetDetailsResponse
 */
export declare class DeploymentTargetDetailsResponse extends Message<DeploymentTargetDetailsResponse> {
  /**
   * namespace is the namespace that the deployment target points to
   *
   * @generated from field: string namespace = 1 [deprecated = true];
   * @deprecated
   */
  namespace: string;

  /**
   * cluster_id is the id of the cluster that the deployment target points to
   *
   * @generated from field: int64 cluster_id = 2 [deprecated = true];
   * @deprecated
   */
  clusterId: bigint;

  /**
   * is_preview indicates whether this is a preview deployment target or not
   *
   * @generated from field: bool is_preview = 3 [deprecated = true];
   * @deprecated
   */
  isPreview: boolean;

  /**
   * deployment_target_name is the name of the deployment target
   *
   * @generated from field: string deployment_target_name = 4 [deprecated = true];
   * @deprecated
   */
  deploymentTargetName: string;

  /**
   * deployment_target is the requested deployment target
   *
   * @generated from field: porter.v1.DeploymentTarget deployment_target = 5;
   */
  deploymentTarget?: DeploymentTarget;

  constructor(data?: PartialMessage<DeploymentTargetDetailsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeploymentTargetDetailsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeploymentTargetDetailsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeploymentTargetDetailsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeploymentTargetDetailsResponse;

  static equals(a: DeploymentTargetDetailsResponse | PlainMessage<DeploymentTargetDetailsResponse> | undefined, b: DeploymentTargetDetailsResponse | PlainMessage<DeploymentTargetDetailsResponse> | undefined): boolean;
}

/**
 * CreateDeploymentTargetRequest is the request object for CreateDeploymentTarget
 *
 * @generated from message porter.v1.CreateDeploymentTargetRequest
 */
export declare class CreateDeploymentTargetRequest extends Message<CreateDeploymentTargetRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * name is the name of the deployment target
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * namespace is the namespace that the deployment target points to
   *
   * @generated from field: string namespace = 3;
   */
  namespace: string;

  /**
   * cluster_id is the id of the cluster that the deployment target points to
   *
   * @generated from field: int64 cluster_id = 4;
   */
  clusterId: bigint;

  /**
   * is_preview indicates whether this is a preview deployment target or not
   *
   * @generated from field: bool is_preview = 5;
   */
  isPreview: boolean;

  constructor(data?: PartialMessage<CreateDeploymentTargetRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateDeploymentTargetRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDeploymentTargetRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDeploymentTargetRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDeploymentTargetRequest;

  static equals(a: CreateDeploymentTargetRequest | PlainMessage<CreateDeploymentTargetRequest> | undefined, b: CreateDeploymentTargetRequest | PlainMessage<CreateDeploymentTargetRequest> | undefined): boolean;
}

/**
 * CreateDeploymentTargetResponse is the response object for CreateDeploymentTarget
 *
 * @generated from message porter.v1.CreateDeploymentTargetResponse
 */
export declare class CreateDeploymentTargetResponse extends Message<CreateDeploymentTargetResponse> {
  /**
   * @generated from field: string deployment_target_id = 1;
   */
  deploymentTargetId: string;

  constructor(data?: PartialMessage<CreateDeploymentTargetResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateDeploymentTargetResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDeploymentTargetResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDeploymentTargetResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDeploymentTargetResponse;

  static equals(a: CreateDeploymentTargetResponse | PlainMessage<CreateDeploymentTargetResponse> | undefined, b: CreateDeploymentTargetResponse | PlainMessage<CreateDeploymentTargetResponse> | undefined): boolean;
}

/**
 * DeploymentTargetsRequest is the request object for DeploymentTargets
 *
 * @generated from message porter.v1.DeploymentTargetsRequest
 */
export declare class DeploymentTargetsRequest extends Message<DeploymentTargetsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * cluster_id is the id of the cluster to find deployment targets for
   *
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<DeploymentTargetsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeploymentTargetsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeploymentTargetsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeploymentTargetsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeploymentTargetsRequest;

  static equals(a: DeploymentTargetsRequest | PlainMessage<DeploymentTargetsRequest> | undefined, b: DeploymentTargetsRequest | PlainMessage<DeploymentTargetsRequest> | undefined): boolean;
}

/**
 * DeploymentTargetsResponse is the response object for DeploymentTargets
 *
 * @generated from message porter.v1.DeploymentTargetsResponse
 */
export declare class DeploymentTargetsResponse extends Message<DeploymentTargetsResponse> {
  /**
   * @generated from field: repeated porter.v1.DeploymentTarget deployment_targets = 1;
   */
  deploymentTargets: DeploymentTarget[];

  constructor(data?: PartialMessage<DeploymentTargetsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeploymentTargetsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeploymentTargetsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeploymentTargetsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeploymentTargetsResponse;

  static equals(a: DeploymentTargetsResponse | PlainMessage<DeploymentTargetsResponse> | undefined, b: DeploymentTargetsResponse | PlainMessage<DeploymentTargetsResponse> | undefined): boolean;
}

/**
 * DefaultDeploymentTargetRequest is the request object for DefaultDeploymentTarget
 *
 * @generated from message porter.v1.DefaultDeploymentTargetRequest
 */
export declare class DefaultDeploymentTargetRequest extends Message<DefaultDeploymentTargetRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * cluster_id is the id of cluster to find the default deployment target for
   * each cluster has only one default deployment target
   *
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<DefaultDeploymentTargetRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DefaultDeploymentTargetRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DefaultDeploymentTargetRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DefaultDeploymentTargetRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DefaultDeploymentTargetRequest;

  static equals(a: DefaultDeploymentTargetRequest | PlainMessage<DefaultDeploymentTargetRequest> | undefined, b: DefaultDeploymentTargetRequest | PlainMessage<DefaultDeploymentTargetRequest> | undefined): boolean;
}

/**
 * DefaultDeploymentTargetResponse is the response object for DefaultDeploymentTarget
 *
 * @generated from message porter.v1.DefaultDeploymentTargetResponse
 */
export declare class DefaultDeploymentTargetResponse extends Message<DefaultDeploymentTargetResponse> {
  /**
   * deployment_target is the default deployment target for the given cluster
   *
   * @generated from field: porter.v1.DeploymentTarget deployment_target = 1;
   */
  deploymentTarget?: DeploymentTarget;

  constructor(data?: PartialMessage<DefaultDeploymentTargetResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DefaultDeploymentTargetResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DefaultDeploymentTargetResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DefaultDeploymentTargetResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DefaultDeploymentTargetResponse;

  static equals(a: DefaultDeploymentTargetResponse | PlainMessage<DefaultDeploymentTargetResponse> | undefined, b: DefaultDeploymentTargetResponse | PlainMessage<DefaultDeploymentTargetResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.SeedAppRevisionsRequest
 */
export declare class SeedAppRevisionsRequest extends Message<SeedAppRevisionsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * @generated from field: string release_name = 3;
   */
  releaseName: string;

  /**
   * source_namespace is the namespace where the app to be migrated is currently installed
   *
   * @generated from field: string source_namespace = 4;
   */
  sourceNamespace: string;

  /**
   * target_namespace is the namespace where the app will be installed. This will determine where the env groups are seeded.
   *
   * @generated from field: string target_namespace = 5;
   */
  targetNamespace: string;

  /**
   * use_health_helm_values is a flag that indicates whether to add the health helm values to the helm overrides for the app instead of the simplified interface from the app contract
   *
   * @generated from field: bool use_health_helm_values = 6;
   */
  useHealthHelmValues: boolean;

  /**
   * target_project_id is the id of the project where the app will be installed
   *
   * @generated from field: int64 target_project_id = 7;
   */
  targetProjectId: bigint;

  /**
   * target_cluster_id is the id of the cluster where the app will be installed
   *
   * @generated from field: int64 target_cluster_id = 8;
   */
  targetClusterId: bigint;

  /**
   * number_of_revisions is the number of revisions to seed
   *
   * @generated from field: int64 number_of_revisions = 9;
   */
  numberOfRevisions: bigint;

  /**
   * reset_count specifies whether to seed the revisions as revision 0 (if true) or to seed them as the helm revision number (if false)
   *
   * @generated from field: bool reset_count = 10;
   */
  resetCount: boolean;

  constructor(data?: PartialMessage<SeedAppRevisionsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.SeedAppRevisionsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SeedAppRevisionsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SeedAppRevisionsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SeedAppRevisionsRequest;

  static equals(a: SeedAppRevisionsRequest | PlainMessage<SeedAppRevisionsRequest> | undefined, b: SeedAppRevisionsRequest | PlainMessage<SeedAppRevisionsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.SeedAppRevisionsResponse
 */
export declare class SeedAppRevisionsResponse extends Message<SeedAppRevisionsResponse> {
  /**
   * latest_revision_diff is the diff of between the latest helm revision of the app and the latest app revision that was seeded
   *
   * @generated from field: string latest_revision_diff = 1;
   */
  latestRevisionDiff: string;

  constructor(data?: PartialMessage<SeedAppRevisionsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.SeedAppRevisionsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SeedAppRevisionsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SeedAppRevisionsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SeedAppRevisionsResponse;

  static equals(a: SeedAppRevisionsResponse | PlainMessage<SeedAppRevisionsResponse> | undefined, b: SeedAppRevisionsResponse | PlainMessage<SeedAppRevisionsResponse> | undefined): boolean;
}

/**
 * EnvGroupVariablesRequest is the request object when retrieving the variables for a given EnvGroup
 *
 * @generated from message porter.v1.EnvGroupVariablesRequest
 */
export declare class EnvGroupVariablesRequest extends Message<EnvGroupVariablesRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_id is the id of the deployment target for the env group. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 2 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * @generated from field: porter.v1.EnvGroup env_group = 3;
   */
  envGroup?: EnvGroup;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the env group
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 4;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<EnvGroupVariablesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.EnvGroupVariablesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnvGroupVariablesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnvGroupVariablesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnvGroupVariablesRequest;

  static equals(a: EnvGroupVariablesRequest | PlainMessage<EnvGroupVariablesRequest> | undefined, b: EnvGroupVariablesRequest | PlainMessage<EnvGroupVariablesRequest> | undefined): boolean;
}

/**
 * EnvGroupVariablesResponse is the response object when retrieving the variables for a given EnvGroup
 *
 * @generated from message porter.v1.EnvGroupVariablesResponse
 */
export declare class EnvGroupVariablesResponse extends Message<EnvGroupVariablesResponse> {
  /**
   * @generated from field: porter.v1.EnvGroupVariables env_group_variables = 1;
   */
  envGroupVariables?: EnvGroupVariables;

  constructor(data?: PartialMessage<EnvGroupVariablesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.EnvGroupVariablesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnvGroupVariablesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnvGroupVariablesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnvGroupVariablesResponse;

  static equals(a: EnvGroupVariablesResponse | PlainMessage<EnvGroupVariablesResponse> | undefined, b: EnvGroupVariablesResponse | PlainMessage<EnvGroupVariablesResponse> | undefined): boolean;
}

/**
 * LatestEnvGroupWithVariablesRequest is the request object when retrieving the latest EnvGroup and its variables for a given deployment target
 *
 * @generated from message porter.v1.LatestEnvGroupWithVariablesRequest
 */
export declare class LatestEnvGroupWithVariablesRequest extends Message<LatestEnvGroupWithVariablesRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 2 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * @generated from field: string env_group_name = 3;
   */
  envGroupName: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the env group
   * deprecated: use cluster_id instead
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 4 [deprecated = true];
   * @deprecated
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  /**
   * cluster_id is the id of the cluster containing the env group is the porter-env-group ns
   *
   * @generated from field: int64 cluster_id = 5;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<LatestEnvGroupWithVariablesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.LatestEnvGroupWithVariablesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LatestEnvGroupWithVariablesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LatestEnvGroupWithVariablesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LatestEnvGroupWithVariablesRequest;

  static equals(a: LatestEnvGroupWithVariablesRequest | PlainMessage<LatestEnvGroupWithVariablesRequest> | undefined, b: LatestEnvGroupWithVariablesRequest | PlainMessage<LatestEnvGroupWithVariablesRequest> | undefined): boolean;
}

/**
 * LatestEnvGroupWithVariablesResponse is the response object when retrieving the latest EnvGroup and its variables for a given deployment target
 * Note: Secrets returned in this response will not be obfuscated in any way
 *
 * @generated from message porter.v1.LatestEnvGroupWithVariablesResponse
 */
export declare class LatestEnvGroupWithVariablesResponse extends Message<LatestEnvGroupWithVariablesResponse> {
  /**
   * @generated from field: porter.v1.EnvGroup env_group = 1;
   */
  envGroup?: EnvGroup;

  /**
   * @generated from field: porter.v1.EnvGroupVariables env_group_variables = 2;
   */
  envGroupVariables?: EnvGroupVariables;

  constructor(data?: PartialMessage<LatestEnvGroupWithVariablesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.LatestEnvGroupWithVariablesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LatestEnvGroupWithVariablesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LatestEnvGroupWithVariablesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LatestEnvGroupWithVariablesResponse;

  static equals(a: LatestEnvGroupWithVariablesResponse | PlainMessage<LatestEnvGroupWithVariablesResponse> | undefined, b: LatestEnvGroupWithVariablesResponse | PlainMessage<LatestEnvGroupWithVariablesResponse> | undefined): boolean;
}

/**
 * AppEnvVariablesRequest is the request object for retrieving all of the latest env variables attached to an app
 *
 * @generated from message porter.v1.AppEnvVariablesRequest
 */
export declare class AppEnvVariablesRequest extends Message<AppEnvVariablesRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * cluster_id is the id of the cluster where the app is installed, presumably in the default deployment target. Ignored if deployment_target_identifier is provided.
   *
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 3;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  /**
   * app_name is the name of the app to retrieve the env variables for
   *
   * @generated from field: string app_name = 4;
   */
  appName: string;

  constructor(data?: PartialMessage<AppEnvVariablesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppEnvVariablesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppEnvVariablesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppEnvVariablesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppEnvVariablesRequest;

  static equals(a: AppEnvVariablesRequest | PlainMessage<AppEnvVariablesRequest> | undefined, b: AppEnvVariablesRequest | PlainMessage<AppEnvVariablesRequest> | undefined): boolean;
}

/**
 * AppEnvVariablesResponse is the response object for retrieving all of the latest env variables attached to an app
 * Note: Secrets returned in this response will not be obfuscated in any way
 *
 * @generated from message porter.v1.AppEnvVariablesResponse
 */
export declare class AppEnvVariablesResponse extends Message<AppEnvVariablesResponse> {
  /**
   * @generated from field: porter.v1.EnvGroupVariables env_variables = 1;
   */
  envVariables?: EnvGroupVariables;

  constructor(data?: PartialMessage<AppEnvVariablesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppEnvVariablesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppEnvVariablesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppEnvVariablesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppEnvVariablesResponse;

  static equals(a: AppEnvVariablesResponse | PlainMessage<AppEnvVariablesResponse> | undefined, b: AppEnvVariablesResponse | PlainMessage<AppEnvVariablesResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateAppImageRequest
 */
export declare class UpdateAppImageRequest extends Message<UpdateAppImageRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string app_name = 2;
   */
  appName: string;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 3 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * @generated from field: string repository_url = 4;
   */
  repositoryUrl: string;

  /**
   * @generated from field: string tag = 5;
   */
  tag: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 6;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  /**
   * b64_description is a base64-encoded user-generated description of the update
   *
   * @generated from field: string b64_description = 7;
   */
  b64Description: string;

  constructor(data?: PartialMessage<UpdateAppImageRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateAppImageRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppImageRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppImageRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppImageRequest;

  static equals(a: UpdateAppImageRequest | PlainMessage<UpdateAppImageRequest> | undefined, b: UpdateAppImageRequest | PlainMessage<UpdateAppImageRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateAppImageResponse
 */
export declare class UpdateAppImageResponse extends Message<UpdateAppImageResponse> {
  /**
   * @generated from field: string repository_url = 1;
   */
  repositoryUrl: string;

  /**
   * @generated from field: string tag = 2;
   */
  tag: string;

  /**
   * @generated from field: string revision_id = 3;
   */
  revisionId: string;

  constructor(data?: PartialMessage<UpdateAppImageResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateAppImageResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppImageResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppImageResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppImageResponse;

  static equals(a: UpdateAppImageResponse | PlainMessage<UpdateAppImageResponse> | undefined, b: UpdateAppImageResponse | PlainMessage<UpdateAppImageResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateAppBuildSettingsRequest
 */
export declare class UpdateAppBuildSettingsRequest extends Message<UpdateAppBuildSettingsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string app_name = 2;
   */
  appName: string;

  /**
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 3;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  /**
   * @generated from field: porter.v1.Build build = 4;
   */
  build?: Build;

  constructor(data?: PartialMessage<UpdateAppBuildSettingsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateAppBuildSettingsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppBuildSettingsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppBuildSettingsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppBuildSettingsRequest;

  static equals(a: UpdateAppBuildSettingsRequest | PlainMessage<UpdateAppBuildSettingsRequest> | undefined, b: UpdateAppBuildSettingsRequest | PlainMessage<UpdateAppBuildSettingsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.UpdateAppBuildSettingsResponse
 */
export declare class UpdateAppBuildSettingsResponse extends Message<UpdateAppBuildSettingsResponse> {
  /**
   * @generated from field: string revision_id = 1;
   */
  revisionId: string;

  constructor(data?: PartialMessage<UpdateAppBuildSettingsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateAppBuildSettingsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppBuildSettingsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppBuildSettingsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppBuildSettingsResponse;

  static equals(a: UpdateAppBuildSettingsResponse | PlainMessage<UpdateAppBuildSettingsResponse> | undefined, b: UpdateAppBuildSettingsResponse | PlainMessage<UpdateAppBuildSettingsResponse> | undefined): boolean;
}

/**
 * UpdateAppsLinkedToEnvGroupRequest is the request object for UpdateAppsLinkedToEnvGroup
 *
 * @generated from message porter.v1.UpdateAppsLinkedToEnvGroupRequest
 */
export declare class UpdateAppsLinkedToEnvGroupRequest extends Message<UpdateAppsLinkedToEnvGroupRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * @generated from field: string env_group_name = 3;
   */
  envGroupName: string;

  constructor(data?: PartialMessage<UpdateAppsLinkedToEnvGroupRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateAppsLinkedToEnvGroupRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppsLinkedToEnvGroupRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppsLinkedToEnvGroupRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppsLinkedToEnvGroupRequest;

  static equals(a: UpdateAppsLinkedToEnvGroupRequest | PlainMessage<UpdateAppsLinkedToEnvGroupRequest> | undefined, b: UpdateAppsLinkedToEnvGroupRequest | PlainMessage<UpdateAppsLinkedToEnvGroupRequest> | undefined): boolean;
}

/**
 * UpdateAppsLinkedToEnvGroupResponse is the response object for UpdateAppsLinkedToEnvGroup
 *
 * @generated from message porter.v1.UpdateAppsLinkedToEnvGroupResponse
 */
export declare class UpdateAppsLinkedToEnvGroupResponse extends Message<UpdateAppsLinkedToEnvGroupResponse> {
  constructor(data?: PartialMessage<UpdateAppsLinkedToEnvGroupResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateAppsLinkedToEnvGroupResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAppsLinkedToEnvGroupResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAppsLinkedToEnvGroupResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAppsLinkedToEnvGroupResponse;

  static equals(a: UpdateAppsLinkedToEnvGroupResponse | PlainMessage<UpdateAppsLinkedToEnvGroupResponse> | undefined, b: UpdateAppsLinkedToEnvGroupResponse | PlainMessage<UpdateAppsLinkedToEnvGroupResponse> | undefined): boolean;
}

/**
 * AppHelmValuesRequest is the request object when retrieving the helm values for a given app
 *
 * @generated from message porter.v1.AppHelmValuesRequest
 */
export declare class AppHelmValuesRequest extends Message<AppHelmValuesRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 app_id = 2;
   */
  appId: bigint;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 3 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * with_defaults indicates whether to merge the default Helm values with the explicitly provided values
   *
   * @generated from field: bool with_defaults = 4;
   */
  withDefaults: boolean;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 5;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<AppHelmValuesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppHelmValuesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppHelmValuesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppHelmValuesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppHelmValuesRequest;

  static equals(a: AppHelmValuesRequest | PlainMessage<AppHelmValuesRequest> | undefined, b: AppHelmValuesRequest | PlainMessage<AppHelmValuesRequest> | undefined): boolean;
}

/**
 * AppHelmValuesResponse is the response object when retrieving the helm values for a given app
 *
 * @generated from message porter.v1.AppHelmValuesResponse
 */
export declare class AppHelmValuesResponse extends Message<AppHelmValuesResponse> {
  /**
   * values is base64-encoded, stringified json of the latest helm values for the app
   *
   * @generated from field: string b64_values = 1;
   */
  b64Values: string;

  constructor(data?: PartialMessage<AppHelmValuesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppHelmValuesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppHelmValuesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppHelmValuesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppHelmValuesResponse;

  static equals(a: AppHelmValuesResponse | PlainMessage<AppHelmValuesResponse> | undefined, b: AppHelmValuesResponse | PlainMessage<AppHelmValuesResponse> | undefined): boolean;
}

/**
 * ManualServiceRunRequest is the request object for ManualServiceRun
 *
 * @generated from message porter.v1.ManualServiceRunRequest
 */
export declare class ManualServiceRunRequest extends Message<ManualServiceRunRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string app_name = 2;
   */
  appName: string;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed. Deprecated: use deployment_target_identifier.
   *
   * @generated from field: string deployment_target_id = 3 [deprecated = true];
   * @deprecated
   */
  deploymentTargetId: string;

  /**
   * @generated from field: string service_name = 4;
   */
  serviceName: string;

  /**
   * Command is the command to run on the service.  If not specified, the run command for the service will be used, as defined in the latest app revision.
   *
   * @generated from field: optional string command = 5;
   */
  command?: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 6;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  /**
   * image is the image information to use for the run. If not specified, the image details for the latest app revision will be used.
   *
   * @generated from field: porter.v1.AppImage image = 7;
   */
  image?: AppImage;

  constructor(data?: PartialMessage<ManualServiceRunRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ManualServiceRunRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManualServiceRunRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManualServiceRunRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManualServiceRunRequest;

  static equals(a: ManualServiceRunRequest | PlainMessage<ManualServiceRunRequest> | undefined, b: ManualServiceRunRequest | PlainMessage<ManualServiceRunRequest> | undefined): boolean;
}

/**
 * ManualServiceRunResponse is the response object for ManualServiceRun
 *
 * @generated from message porter.v1.ManualServiceRunResponse
 */
export declare class ManualServiceRunResponse extends Message<ManualServiceRunResponse> {
  /**
   * job_run_id is the id of the job run that was created, if any
   *
   * @generated from field: string job_run_id = 1;
   */
  jobRunId: string;

  constructor(data?: PartialMessage<ManualServiceRunResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ManualServiceRunResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManualServiceRunResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManualServiceRunResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManualServiceRunResponse;

  static equals(a: ManualServiceRunResponse | PlainMessage<ManualServiceRunResponse> | undefined, b: ManualServiceRunResponse | PlainMessage<ManualServiceRunResponse> | undefined): boolean;
}

/**
 * ImagesRequest is the request object for listing images
 *
 * @generated from message porter.v1.ImagesRequest
 */
export declare class ImagesRequest extends Message<ImagesRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  constructor(data?: PartialMessage<ImagesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ImagesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImagesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImagesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImagesRequest;

  static equals(a: ImagesRequest | PlainMessage<ImagesRequest> | undefined, b: ImagesRequest | PlainMessage<ImagesRequest> | undefined): boolean;
}

/**
 * ImagesResponse is the response object for listing images
 *
 * @generated from message porter.v1.ImagesResponse
 */
export declare class ImagesResponse extends Message<ImagesResponse> {
  /**
   * @generated from field: repeated porter.v1.ImageInfo images = 1;
   */
  images: ImageInfo[];

  constructor(data?: PartialMessage<ImagesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ImagesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImagesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImagesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImagesResponse;

  static equals(a: ImagesResponse | PlainMessage<ImagesResponse> | undefined, b: ImagesResponse | PlainMessage<ImagesResponse> | undefined): boolean;
}

/**
 * CreateAppInstanceRequest is the request object for creating an app instance
 *
 * @generated from message porter.v1.CreateAppInstanceRequest
 */
export declare class CreateAppInstanceRequest extends Message<CreateAppInstanceRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string app_name = 2;
   */
  appName: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target where the app is installed.
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 3;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  /**
   * @generated from field: int64 porter_app_id = 4;
   */
  porterAppId: bigint;

  constructor(data?: PartialMessage<CreateAppInstanceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateAppInstanceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAppInstanceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAppInstanceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAppInstanceRequest;

  static equals(a: CreateAppInstanceRequest | PlainMessage<CreateAppInstanceRequest> | undefined, b: CreateAppInstanceRequest | PlainMessage<CreateAppInstanceRequest> | undefined): boolean;
}

/**
 * CreateAppInstanceResponse is the response object for creating an app instance
 *
 * @generated from message porter.v1.CreateAppInstanceResponse
 */
export declare class CreateAppInstanceResponse extends Message<CreateAppInstanceResponse> {
  /**
   * @generated from field: string app_instance_id = 1;
   */
  appInstanceId: string;

  constructor(data?: PartialMessage<CreateAppInstanceResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateAppInstanceResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAppInstanceResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAppInstanceResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAppInstanceResponse;

  static equals(a: CreateAppInstanceResponse | PlainMessage<CreateAppInstanceResponse> | undefined, b: CreateAppInstanceResponse | PlainMessage<CreateAppInstanceResponse> | undefined): boolean;
}

/**
 * DeleteAppInstanceRequest is the request object for deleting an app instance
 *
 * @generated from message porter.v1.DeleteAppInstanceRequest
 */
export declare class DeleteAppInstanceRequest extends Message<DeleteAppInstanceRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string app_name = 2;
   */
  appName: string;

  /**
   * deployment_target_identifier is the object that identifies the deployment target where the app is installed.
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 3;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<DeleteAppInstanceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteAppInstanceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAppInstanceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAppInstanceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAppInstanceRequest;

  static equals(a: DeleteAppInstanceRequest | PlainMessage<DeleteAppInstanceRequest> | undefined, b: DeleteAppInstanceRequest | PlainMessage<DeleteAppInstanceRequest> | undefined): boolean;
}

/**
 * DeleteAppInstanceResponse is the response object for deleting an app instance
 *
 * @generated from message porter.v1.DeleteAppInstanceResponse
 */
export declare class DeleteAppInstanceResponse extends Message<DeleteAppInstanceResponse> {
  constructor(data?: PartialMessage<DeleteAppInstanceResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteAppInstanceResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAppInstanceResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAppInstanceResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAppInstanceResponse;

  static equals(a: DeleteAppInstanceResponse | PlainMessage<DeleteAppInstanceResponse> | undefined, b: DeleteAppInstanceResponse | PlainMessage<DeleteAppInstanceResponse> | undefined): boolean;
}

/**
 * ListAppInstanceRequest is the request object for listing app instances
 *
 * @generated from message porter.v1.ListAppInstancesRequest
 */
export declare class ListAppInstancesRequest extends Message<ListAppInstancesRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_identifier is the object that identifies the deployment target where the app is installed. It is optional.
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 2;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  constructor(data?: PartialMessage<ListAppInstancesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListAppInstancesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAppInstancesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAppInstancesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAppInstancesRequest;

  static equals(a: ListAppInstancesRequest | PlainMessage<ListAppInstancesRequest> | undefined, b: ListAppInstancesRequest | PlainMessage<ListAppInstancesRequest> | undefined): boolean;
}

/**
 * ListAppInstancesResponse is the response object for listing app instances
 *
 * @generated from message porter.v1.ListAppInstancesResponse
 */
export declare class ListAppInstancesResponse extends Message<ListAppInstancesResponse> {
  /**
   * @generated from field: repeated porter.v1.AppInstance app_instances = 1;
   */
  appInstances: AppInstance[];

  constructor(data?: PartialMessage<ListAppInstancesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListAppInstancesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAppInstancesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAppInstancesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAppInstancesResponse;

  static equals(a: ListAppInstancesResponse | PlainMessage<ListAppInstancesResponse> | undefined, b: ListAppInstancesResponse | PlainMessage<ListAppInstancesResponse> | undefined): boolean;
}

/**
 * TemplateAppManifestsRequest is the request object for retrieving the manifests for a given app definition
 *
 * @generated from message porter.v1.TemplateAppManifestsRequest
 */
export declare class TemplateAppManifestsRequest extends Message<TemplateAppManifestsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * cluster_id is the id of the cluster where the app is installed, presumably in the default deployment target. Ignored if deployment_target_identifier is provided.
   *
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 3;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  /**
   * app_name is the name of the app to retrieve the manifests for
   * the latest successful revision of the app will be used
   *
   * @generated from field: string app_name = 4;
   */
  appName: string;

  constructor(data?: PartialMessage<TemplateAppManifestsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.TemplateAppManifestsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TemplateAppManifestsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TemplateAppManifestsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TemplateAppManifestsRequest;

  static equals(a: TemplateAppManifestsRequest | PlainMessage<TemplateAppManifestsRequest> | undefined, b: TemplateAppManifestsRequest | PlainMessage<TemplateAppManifestsRequest> | undefined): boolean;
}

/**
 * TemplateAppManifestsResponse is the response object for retrieving the manifests for a given app definition
 *
 * @generated from message porter.v1.TemplateAppManifestsResponse
 */
export declare class TemplateAppManifestsResponse extends Message<TemplateAppManifestsResponse> {
  /**
   * base64_manifests is the base64-encoded, stringified manifests for the app
   *
   * @generated from field: string base64_manifests = 1;
   */
  base64Manifests: string;

  constructor(data?: PartialMessage<TemplateAppManifestsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.TemplateAppManifestsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TemplateAppManifestsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TemplateAppManifestsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TemplateAppManifestsResponse;

  static equals(a: TemplateAppManifestsResponse | PlainMessage<TemplateAppManifestsResponse> | undefined, b: TemplateAppManifestsResponse | PlainMessage<TemplateAppManifestsResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.AppInstance
 */
export declare class AppInstance extends Message<AppInstance> {
  /**
   * id is the id of the app instance
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * name is the name of the app instance
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * deployment_target_id is the id of the deployment target where the app is installed
   *
   * @generated from field: string deployment_target_id = 3;
   */
  deploymentTargetId: string;

  /**
   * porter_app_id is the id of the porter app
   *
   * @generated from field: int64 porter_app_id = 4;
   */
  porterAppId: bigint;

  constructor(data?: PartialMessage<AppInstance>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppInstance";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppInstance;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppInstance;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppInstance;

  static equals(a: AppInstance | PlainMessage<AppInstance> | undefined, b: AppInstance | PlainMessage<AppInstance> | undefined): boolean;
}

/**
 * CreateNotificationRequest is the request object for creating notifications
 *
 * @generated from message porter.v1.CreateNotificationRequest
 */
export declare class CreateNotificationRequest extends Message<CreateNotificationRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 3;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  /**
   * app_name is the name of the app
   *
   * @generated from field: string app_name = 4;
   */
  appName: string;

  /**
   * service_name is the name of the service of the app that the notification corresponds with
   *
   * @generated from field: string service_name = 5;
   */
  serviceName: string;

  /**
   * app_revision_id is the revision id of the app that the notification corresponds with
   *
   * @generated from field: string app_revision_id = 6;
   */
  appRevisionId: string;

  /**
   * porter_agent_event_id is the id of the event that triggers the porter agent. This field is used to dedupe notifications
   *
   * @generated from field: int64 porter_agent_event_id = 7;
   */
  porterAgentEventId: bigint;

  /**
   * raw_summary is the raw summary of the notification, used to determine an error code and then converted to a human readable form
   *
   * @generated from field: string raw_summary = 8;
   */
  rawSummary: string;

  /**
   * raw_detail is the raw detail of the notification, used to determine an error code and then converted to a human readable form
   *
   * @generated from field: string raw_detail = 9;
   */
  rawDetail: string;

  /**
   * job_run_id is the id of the job run, if the service is a job type service
   *
   * @generated from field: string job_run_id = 10;
   */
  jobRunId: string;

  constructor(data?: PartialMessage<CreateNotificationRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateNotificationRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateNotificationRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateNotificationRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateNotificationRequest;

  static equals(a: CreateNotificationRequest | PlainMessage<CreateNotificationRequest> | undefined, b: CreateNotificationRequest | PlainMessage<CreateNotificationRequest> | undefined): boolean;
}

/**
 * CreateNotificationResponse is the response object for creating notifications
 *
 * @generated from message porter.v1.CreateNotificationResponse
 */
export declare class CreateNotificationResponse extends Message<CreateNotificationResponse> {
  constructor(data?: PartialMessage<CreateNotificationResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateNotificationResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateNotificationResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateNotificationResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateNotificationResponse;

  static equals(a: CreateNotificationResponse | PlainMessage<CreateNotificationResponse> | undefined, b: CreateNotificationResponse | PlainMessage<CreateNotificationResponse> | undefined): boolean;
}

/**
 * UpdateServiceDeploymentStatusRequest is the request object for updating the deployment status of a service
 *
 * @generated from message porter.v1.UpdateServiceDeploymentStatusRequest
 */
export declare class UpdateServiceDeploymentStatusRequest extends Message<UpdateServiceDeploymentStatusRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * deployment_target_identifier is the object that identifies the deployment target for the app
   *
   * @generated from field: porter.v1.DeploymentTargetIdentifier deployment_target_identifier = 2;
   */
  deploymentTargetIdentifier?: DeploymentTargetIdentifier;

  /**
   * app_name is the name of the app
   *
   * @generated from field: string app_name = 3;
   */
  appName: string;

  /**
   * app_revision_id is the revision id of the app that the deployment corresponds with
   *
   * @generated from field: string app_revision_id = 4;
   */
  appRevisionId: string;

  /**
   * service_name is the name of the service
   *
   * @generated from field: string service_name = 5;
   */
  serviceName: string;

  /**
   * status is the status to update the service deployment to
   *
   * @generated from field: porter.v1.EnumServiceDeploymentStatus status = 6;
   */
  status: EnumServiceDeploymentStatus;

  constructor(data?: PartialMessage<UpdateServiceDeploymentStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateServiceDeploymentStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateServiceDeploymentStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateServiceDeploymentStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateServiceDeploymentStatusRequest;

  static equals(a: UpdateServiceDeploymentStatusRequest | PlainMessage<UpdateServiceDeploymentStatusRequest> | undefined, b: UpdateServiceDeploymentStatusRequest | PlainMessage<UpdateServiceDeploymentStatusRequest> | undefined): boolean;
}

/**
 * UpdateServiceDeploymentStatusResponse is the response object for updating the deployment status of a service
 *
 * @generated from message porter.v1.UpdateServiceDeploymentStatusResponse
 */
export declare class UpdateServiceDeploymentStatusResponse extends Message<UpdateServiceDeploymentStatusResponse> {
  constructor(data?: PartialMessage<UpdateServiceDeploymentStatusResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateServiceDeploymentStatusResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateServiceDeploymentStatusResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateServiceDeploymentStatusResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateServiceDeploymentStatusResponse;

  static equals(a: UpdateServiceDeploymentStatusResponse | PlainMessage<UpdateServiceDeploymentStatusResponse> | undefined, b: UpdateServiceDeploymentStatusResponse | PlainMessage<UpdateServiceDeploymentStatusResponse> | undefined): boolean;
}

/**
 * AreExternalEnvGroupProvidersEnabledRequest is the request object AreExternalEnvGroupProvidersEnabled
 *
 * @generated from message porter.v1.AreExternalEnvGroupProvidersEnabledRequest
 */
export declare class AreExternalEnvGroupProvidersEnabledRequest extends Message<AreExternalEnvGroupProvidersEnabledRequest> {
  /**
   * project_id is the id of the project in which to check whether external env group providers are enabled
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * cluster_id is the id of the cluster in which to check whether external env group providers are enabled
   *
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<AreExternalEnvGroupProvidersEnabledRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AreExternalEnvGroupProvidersEnabledRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AreExternalEnvGroupProvidersEnabledRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AreExternalEnvGroupProvidersEnabledRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AreExternalEnvGroupProvidersEnabledRequest;

  static equals(a: AreExternalEnvGroupProvidersEnabledRequest | PlainMessage<AreExternalEnvGroupProvidersEnabledRequest> | undefined, b: AreExternalEnvGroupProvidersEnabledRequest | PlainMessage<AreExternalEnvGroupProvidersEnabledRequest> | undefined): boolean;
}

/**
 * AreExternalEnvGroupProvidersEnabledResponse is the response object for AreExternalEnvGroupProvidersEnabled
 *
 * @generated from message porter.v1.AreExternalEnvGroupProvidersEnabledResponse
 */
export declare class AreExternalEnvGroupProvidersEnabledResponse extends Message<AreExternalEnvGroupProvidersEnabledResponse> {
  /**
   * enabled is a flag that indicates whether external env group providers are enabled
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * reprovision_required is a flag that indicates whether the cluster needs to be reprovisioned to enable external env group providers
   *
   * @generated from field: bool reprovision_required = 2;
   */
  reprovisionRequired: boolean;

  /**
   * k8s_upgrade_required is a flag that indicates whether the cluster needs to be upgraded to enable external env group providers
   *
   * @generated from field: bool k8s_upgrade_required = 3;
   */
  k8sUpgradeRequired: boolean;

  constructor(data?: PartialMessage<AreExternalEnvGroupProvidersEnabledResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AreExternalEnvGroupProvidersEnabledResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AreExternalEnvGroupProvidersEnabledResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AreExternalEnvGroupProvidersEnabledResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AreExternalEnvGroupProvidersEnabledResponse;

  static equals(a: AreExternalEnvGroupProvidersEnabledResponse | PlainMessage<AreExternalEnvGroupProvidersEnabledResponse> | undefined, b: AreExternalEnvGroupProvidersEnabledResponse | PlainMessage<AreExternalEnvGroupProvidersEnabledResponse> | undefined): boolean;
}

/**
 * EnableExternalEnvGroupProvidersRequest is the request object for EnableExternalEnvGroupProviders
 *
 * @generated from message porter.v1.EnableExternalEnvGroupProvidersRequest
 */
export declare class EnableExternalEnvGroupProvidersRequest extends Message<EnableExternalEnvGroupProvidersRequest> {
  /**
   * project_id is the id of the project where external env group providers should be enabled
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * cluster_id is the id of the cluster where external env group providers should be enabled
   *
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<EnableExternalEnvGroupProvidersRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.EnableExternalEnvGroupProvidersRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnableExternalEnvGroupProvidersRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnableExternalEnvGroupProvidersRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnableExternalEnvGroupProvidersRequest;

  static equals(a: EnableExternalEnvGroupProvidersRequest | PlainMessage<EnableExternalEnvGroupProvidersRequest> | undefined, b: EnableExternalEnvGroupProvidersRequest | PlainMessage<EnableExternalEnvGroupProvidersRequest> | undefined): boolean;
}

/**
 * EnableExternalEnvGroupProvidersResponse is the response object for EnableExternalEnvGroupProviders
 *
 * @generated from message porter.v1.EnableExternalEnvGroupProvidersResponse
 */
export declare class EnableExternalEnvGroupProvidersResponse extends Message<EnableExternalEnvGroupProvidersResponse> {
  constructor(data?: PartialMessage<EnableExternalEnvGroupProvidersResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.EnableExternalEnvGroupProvidersResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnableExternalEnvGroupProvidersResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnableExternalEnvGroupProvidersResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnableExternalEnvGroupProvidersResponse;

  static equals(a: EnableExternalEnvGroupProvidersResponse | PlainMessage<EnableExternalEnvGroupProvidersResponse> | undefined, b: EnableExternalEnvGroupProvidersResponse | PlainMessage<EnableExternalEnvGroupProvidersResponse> | undefined): boolean;
}

/**
 * CreateOrUpdateEnvGroupRequest is the request object for CreateOrUpdateEnvGroup
 *
 * @generated from message porter.v1.CreateOrUpdateEnvGroupRequest
 */
export declare class CreateOrUpdateEnvGroupRequest extends Message<CreateOrUpdateEnvGroupRequest> {
  /**
   * project_id is the id of the project where the env group will be created
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * cluster_id is the id of the cluster where the env group will be created
   *
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * env_group_provider_type is the type of provider for the env group
   *
   * @generated from field: porter.v1.EnumEnvGroupProviderType env_group_provider_type = 3;
   */
  envGroupProviderType: EnumEnvGroupProviderType;

  /**
   * env_group_name is the name of the env group
   *
   * @generated from field: string env_group_name = 4;
   */
  envGroupName: string;

  /**
   * env_group_auth_token is the auth token for the env group. Not required for Porter env groups.
   *
   * @generated from field: string env_group_auth_token = 5;
   */
  envGroupAuthToken: string;

  constructor(data?: PartialMessage<CreateOrUpdateEnvGroupRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateOrUpdateEnvGroupRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrUpdateEnvGroupRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrUpdateEnvGroupRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrUpdateEnvGroupRequest;

  static equals(a: CreateOrUpdateEnvGroupRequest | PlainMessage<CreateOrUpdateEnvGroupRequest> | undefined, b: CreateOrUpdateEnvGroupRequest | PlainMessage<CreateOrUpdateEnvGroupRequest> | undefined): boolean;
}

/**
 * CreateOrUpdateEnvGroupResponse is the response object for CreateOrUpdateEnvGroup
 *
 * @generated from message porter.v1.CreateOrUpdateEnvGroupResponse
 */
export declare class CreateOrUpdateEnvGroupResponse extends Message<CreateOrUpdateEnvGroupResponse> {
  constructor(data?: PartialMessage<CreateOrUpdateEnvGroupResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateOrUpdateEnvGroupResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrUpdateEnvGroupResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrUpdateEnvGroupResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrUpdateEnvGroupResponse;

  static equals(a: CreateOrUpdateEnvGroupResponse | PlainMessage<CreateOrUpdateEnvGroupResponse> | undefined, b: CreateOrUpdateEnvGroupResponse | PlainMessage<CreateOrUpdateEnvGroupResponse> | undefined): boolean;
}

/**
 * DeleteEnvGroupRequest is the request object for DeleteEnvGroup
 *
 * @generated from message porter.v1.DeleteEnvGroupRequest
 */
export declare class DeleteEnvGroupRequest extends Message<DeleteEnvGroupRequest> {
  /**
   * project_id is the id of the project where the env group will be deleted
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * cluster_id is the id of the cluster where the env group will be deleted
   *
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * env_group_provider_type is the type of provider for the env group
   *
   * @generated from field: porter.v1.EnumEnvGroupProviderType env_group_provider_type = 3;
   */
  envGroupProviderType: EnumEnvGroupProviderType;

  /**
   * env_group_name is the name of the env group to delete
   *
   * @generated from field: string env_group_name = 4;
   */
  envGroupName: string;

  constructor(data?: PartialMessage<DeleteEnvGroupRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteEnvGroupRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteEnvGroupRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteEnvGroupRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteEnvGroupRequest;

  static equals(a: DeleteEnvGroupRequest | PlainMessage<DeleteEnvGroupRequest> | undefined, b: DeleteEnvGroupRequest | PlainMessage<DeleteEnvGroupRequest> | undefined): boolean;
}

/**
 * DeleteEnvGroupResponse is the response object for DeleteEnvGroup
 *
 * @generated from message porter.v1.DeleteEnvGroupResponse
 */
export declare class DeleteEnvGroupResponse extends Message<DeleteEnvGroupResponse> {
  constructor(data?: PartialMessage<DeleteEnvGroupResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DeleteEnvGroupResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteEnvGroupResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteEnvGroupResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteEnvGroupResponse;

  static equals(a: DeleteEnvGroupResponse | PlainMessage<DeleteEnvGroupResponse> | undefined, b: DeleteEnvGroupResponse | PlainMessage<DeleteEnvGroupResponse> | undefined): boolean;
}

/**
 * AppsLinkedToEnvGroupRequest is the request object for AppsLinkedToEnvGroup
 *
 * @generated from message porter.v1.AppsLinkedToEnvGroupRequest
 */
export declare class AppsLinkedToEnvGroupRequest extends Message<AppsLinkedToEnvGroupRequest> {
  /**
   * project_id is the id of the project where the env group is installed
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * cluster_id is the id of the cluster where the env group is installed
   *
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * env_group_name is the name of the env group
   *
   * @generated from field: string env_group_name = 3;
   */
  envGroupName: string;

  /**
   * ignore_preview indicates whether to ignore apps in preview deployment targets
   *
   * @generated from field: bool ignore_preview = 4;
   */
  ignorePreview: boolean;

  constructor(data?: PartialMessage<AppsLinkedToEnvGroupRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppsLinkedToEnvGroupRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppsLinkedToEnvGroupRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppsLinkedToEnvGroupRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppsLinkedToEnvGroupRequest;

  static equals(a: AppsLinkedToEnvGroupRequest | PlainMessage<AppsLinkedToEnvGroupRequest> | undefined, b: AppsLinkedToEnvGroupRequest | PlainMessage<AppsLinkedToEnvGroupRequest> | undefined): boolean;
}

/**
 * AppsLinkedToEnvGroupResponse is the response object for AppsLinkedToEnvGroup
 *
 * @generated from message porter.v1.AppsLinkedToEnvGroupResponse
 */
export declare class AppsLinkedToEnvGroupResponse extends Message<AppsLinkedToEnvGroupResponse> {
  /**
   * env_group_name is the name of the env group
   *
   * @generated from field: string env_group_name = 1;
   */
  envGroupName: string;

  /**
   * linked_apps is the list of apps linked to the env group
   *
   * @generated from field: repeated porter.v1.AppInstance linked_apps = 2;
   */
  linkedApps: AppInstance[];

  constructor(data?: PartialMessage<AppsLinkedToEnvGroupResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AppsLinkedToEnvGroupResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppsLinkedToEnvGroupResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppsLinkedToEnvGroupResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppsLinkedToEnvGroupResponse;

  static equals(a: AppsLinkedToEnvGroupResponse | PlainMessage<AppsLinkedToEnvGroupResponse> | undefined, b: AppsLinkedToEnvGroupResponse | PlainMessage<AppsLinkedToEnvGroupResponse> | undefined): boolean;
}

/**
 * ListEnvGroupsRequest is the request object for ListEnvGroups.
 *
 * @generated from message porter.v1.ListEnvGroupsRequest
 */
export declare class ListEnvGroupsRequest extends Message<ListEnvGroupsRequest> {
  /**
   * project_id is the id of the project where the env group is installed
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * cluster_id is the id of the cluster where the env group is installed
   *
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * include_secrets indicates whether to include secret values in the response. If false, the values will be replaced with a placeholder.
   *
   * @generated from field: bool include_secrets = 3;
   */
  includeSecrets: boolean;

  constructor(data?: PartialMessage<ListEnvGroupsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListEnvGroupsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEnvGroupsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEnvGroupsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEnvGroupsRequest;

  static equals(a: ListEnvGroupsRequest | PlainMessage<ListEnvGroupsRequest> | undefined, b: ListEnvGroupsRequest | PlainMessage<ListEnvGroupsRequest> | undefined): boolean;
}

/**
 * ListEnvGroupsResponse is the response object for ListEnvGroups
 *
 * @generated from message porter.v1.ListEnvGroupsResponse
 */
export declare class ListEnvGroupsResponse extends Message<ListEnvGroupsResponse> {
  /**
   * env_groups is the list of env groups installed in the cluster
   *
   * @generated from field: repeated porter.v1.EnvGroup env_groups = 1;
   */
  envGroups: EnvGroup[];

  constructor(data?: PartialMessage<ListEnvGroupsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListEnvGroupsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEnvGroupsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEnvGroupsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEnvGroupsResponse;

  static equals(a: ListEnvGroupsResponse | PlainMessage<ListEnvGroupsResponse> | undefined, b: ListEnvGroupsResponse | PlainMessage<ListEnvGroupsResponse> | undefined): boolean;
}

/**
 * UpdateNotificationConfigRequest is the request object for UpdateNotificationConfig.
 *
 * @generated from message porter.v1.UpdateNotificationConfigRequest
 */
export declare class UpdateNotificationConfigRequest extends Message<UpdateNotificationConfigRequest> {
  /**
   * project_id is the id of the project where the notification config is created
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * notification_config_id is the id of config. If 0, a new config will be created
   *
   * @generated from field: int64 notification_config_id = 2;
   */
  notificationConfigId: bigint;

  /**
   * config is the config to update
   *
   * @generated from field: porter.v1.NotificationConfig config = 3;
   */
  config?: NotificationConfig;

  /**
   * slack_integration_id is the id of the slack integration to update with the notification_config_id, if any
   *
   * @generated from field: int64 slack_integration_id = 4;
   */
  slackIntegrationId: bigint;

  constructor(data?: PartialMessage<UpdateNotificationConfigRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateNotificationConfigRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateNotificationConfigRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateNotificationConfigRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateNotificationConfigRequest;

  static equals(a: UpdateNotificationConfigRequest | PlainMessage<UpdateNotificationConfigRequest> | undefined, b: UpdateNotificationConfigRequest | PlainMessage<UpdateNotificationConfigRequest> | undefined): boolean;
}

/**
 * UpdateNotificationConfigResponse is the response object for UpdateNotificationConfig
 *
 * @generated from message porter.v1.UpdateNotificationConfigResponse
 */
export declare class UpdateNotificationConfigResponse extends Message<UpdateNotificationConfigResponse> {
  /**
   * env_groups is the list of env groups installed in the cluster
   *
   * @generated from field: int64 notification_config_id = 1;
   */
  notificationConfigId: bigint;

  constructor(data?: PartialMessage<UpdateNotificationConfigResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateNotificationConfigResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateNotificationConfigResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateNotificationConfigResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateNotificationConfigResponse;

  static equals(a: UpdateNotificationConfigResponse | PlainMessage<UpdateNotificationConfigResponse> | undefined, b: UpdateNotificationConfigResponse | PlainMessage<UpdateNotificationConfigResponse> | undefined): boolean;
}

/**
 * NotificationConfigRequest is the request object for NotificationConfig.
 *
 * @generated from message porter.v1.NotificationConfigRequest
 */
export declare class NotificationConfigRequest extends Message<NotificationConfigRequest> {
  /**
   * project_id is the id of the project where the notification config is created
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * notification_config_id is the id of the notfication config
   *
   * @generated from field: int64 notification_config_id = 2;
   */
  notificationConfigId: bigint;

  constructor(data?: PartialMessage<NotificationConfigRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.NotificationConfigRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NotificationConfigRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NotificationConfigRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NotificationConfigRequest;

  static equals(a: NotificationConfigRequest | PlainMessage<NotificationConfigRequest> | undefined, b: NotificationConfigRequest | PlainMessage<NotificationConfigRequest> | undefined): boolean;
}

/**
 * NotificationConfigResponse is the response object for NotificationConfig
 *
 * @generated from message porter.v1.NotificationConfigResponse
 */
export declare class NotificationConfigResponse extends Message<NotificationConfigResponse> {
  /**
   * config is the notification config object
   *
   * @generated from field: porter.v1.NotificationConfig config = 1;
   */
  config?: NotificationConfig;

  constructor(data?: PartialMessage<NotificationConfigResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.NotificationConfigResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NotificationConfigResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NotificationConfigResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NotificationConfigResponse;

  static equals(a: NotificationConfigResponse | PlainMessage<NotificationConfigResponse> | undefined, b: NotificationConfigResponse | PlainMessage<NotificationConfigResponse> | undefined): boolean;
}

/**
 * ConnectHostedProjectRequest is the request object for connecting a hosted project to a host cluster
 *
 * @generated from message porter.v1.ConnectHostedProjectRequest
 */
export declare class ConnectHostedProjectRequest extends Message<ConnectHostedProjectRequest> {
  /**
   * project_id is the project id of the new hosted project which should be connected to the host cluster
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  constructor(data?: PartialMessage<ConnectHostedProjectRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ConnectHostedProjectRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectHostedProjectRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectHostedProjectRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectHostedProjectRequest;

  static equals(a: ConnectHostedProjectRequest | PlainMessage<ConnectHostedProjectRequest> | undefined, b: ConnectHostedProjectRequest | PlainMessage<ConnectHostedProjectRequest> | undefined): boolean;
}

/**
 * ConnectHostedProjectResponse is the response object for connecting a hosted project to a host cluster
 *
 * @generated from message porter.v1.ConnectHostedProjectResponse
 */
export declare class ConnectHostedProjectResponse extends Message<ConnectHostedProjectResponse> {
  /**
   * cluster_id is the id of the symbolic hosted cluster linked to the host cluster
   *
   * @generated from field: int64 cluster_id = 1;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<ConnectHostedProjectResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ConnectHostedProjectResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectHostedProjectResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectHostedProjectResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectHostedProjectResponse;

  static equals(a: ConnectHostedProjectResponse | PlainMessage<ConnectHostedProjectResponse> | undefined, b: ConnectHostedProjectResponse | PlainMessage<ConnectHostedProjectResponse> | undefined): boolean;
}

/**
 * UpdateDatastoreRequest is the request object for updating a datastore
 *
 * @generated from message porter.v1.UpdateDatastoreRequest
 */
export declare class UpdateDatastoreRequest extends Message<UpdateDatastoreRequest> {
  /**
   * project_id is the project id that the datastore is provisioned in
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * datastore_id is the id of the datastore
   *
   * @generated from field: string datastore_id = 2;
   */
  datastoreId: string;

  constructor(data?: PartialMessage<UpdateDatastoreRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateDatastoreRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDatastoreRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDatastoreRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDatastoreRequest;

  static equals(a: UpdateDatastoreRequest | PlainMessage<UpdateDatastoreRequest> | undefined, b: UpdateDatastoreRequest | PlainMessage<UpdateDatastoreRequest> | undefined): boolean;
}

/**
 * UpdateDatastoreResponse is the response object for updating a datastore
 *
 * @generated from message porter.v1.UpdateDatastoreResponse
 */
export declare class UpdateDatastoreResponse extends Message<UpdateDatastoreResponse> {
  constructor(data?: PartialMessage<UpdateDatastoreResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.UpdateDatastoreResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDatastoreResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDatastoreResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDatastoreResponse;

  static equals(a: UpdateDatastoreResponse | PlainMessage<UpdateDatastoreResponse> | undefined, b: UpdateDatastoreResponse | PlainMessage<UpdateDatastoreResponse> | undefined): boolean;
}

/**
 * CreateDatastoreProxyRequest is the request object for creating a datastore proxy
 *
 * @generated from message porter.v1.CreateDatastoreProxyRequest
 */
export declare class CreateDatastoreProxyRequest extends Message<CreateDatastoreProxyRequest> {
  /**
   * project_id is the project id that the datastore is provisioned in
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * datastore_id is the id of the datastore
   *
   * @generated from field: string datastore_id = 2;
   */
  datastoreId: string;

  constructor(data?: PartialMessage<CreateDatastoreProxyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateDatastoreProxyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDatastoreProxyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDatastoreProxyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDatastoreProxyRequest;

  static equals(a: CreateDatastoreProxyRequest | PlainMessage<CreateDatastoreProxyRequest> | undefined, b: CreateDatastoreProxyRequest | PlainMessage<CreateDatastoreProxyRequest> | undefined): boolean;
}

/**
 * CreateDatastoreProxyResponse is the response object for creating a datastore proxy
 *
 * @generated from message porter.v1.CreateDatastoreProxyResponse
 */
export declare class CreateDatastoreProxyResponse extends Message<CreateDatastoreProxyResponse> {
  /**
   * pod_name is the name of the pod that was created
   *
   * @generated from field: string pod_name = 1;
   */
  podName: string;

  /**
   * credential is the credential used to connect to the datastore
   *
   * @generated from field: porter.v1.DatastoreCredential credential = 2;
   */
  credential?: DatastoreCredential;

  /**
   * cluster_id is the id of the cluster that the pod was created in
   *
   * @generated from field: int64 cluster_id = 3;
   */
  clusterId: bigint;

  /**
   * namespace is the namespace that the pod was created in
   *
   * @generated from field: string namespace = 4;
   */
  namespace: string;

  constructor(data?: PartialMessage<CreateDatastoreProxyResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CreateDatastoreProxyResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDatastoreProxyResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDatastoreProxyResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDatastoreProxyResponse;

  static equals(a: CreateDatastoreProxyResponse | PlainMessage<CreateDatastoreProxyResponse> | undefined, b: CreateDatastoreProxyResponse | PlainMessage<CreateDatastoreProxyResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.EKSBearerTokenRequest
 * @deprecated
 */
export declare class EKSBearerTokenRequest extends Message<EKSBearerTokenRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<EKSBearerTokenRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.EKSBearerTokenRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EKSBearerTokenRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EKSBearerTokenRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EKSBearerTokenRequest;

  static equals(a: EKSBearerTokenRequest | PlainMessage<EKSBearerTokenRequest> | undefined, b: EKSBearerTokenRequest | PlainMessage<EKSBearerTokenRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.EKSBearerTokenResponse
 * @deprecated
 */
export declare class EKSBearerTokenResponse extends Message<EKSBearerTokenResponse> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  constructor(data?: PartialMessage<EKSBearerTokenResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.EKSBearerTokenResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EKSBearerTokenResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EKSBearerTokenResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EKSBearerTokenResponse;

  static equals(a: EKSBearerTokenResponse | PlainMessage<EKSBearerTokenResponse> | undefined, b: EKSBearerTokenResponse | PlainMessage<EKSBearerTokenResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.CertificateAuthorityDataRequest
 * @deprecated
 */
export declare class CertificateAuthorityDataRequest extends Message<CertificateAuthorityDataRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<CertificateAuthorityDataRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CertificateAuthorityDataRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CertificateAuthorityDataRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CertificateAuthorityDataRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CertificateAuthorityDataRequest;

  static equals(a: CertificateAuthorityDataRequest | PlainMessage<CertificateAuthorityDataRequest> | undefined, b: CertificateAuthorityDataRequest | PlainMessage<CertificateAuthorityDataRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.CertificateAuthorityDataResponse
 * @deprecated
 */
export declare class CertificateAuthorityDataResponse extends Message<CertificateAuthorityDataResponse> {
  /**
   * @generated from field: string certificate_authority_data = 1;
   */
  certificateAuthorityData: string;

  constructor(data?: PartialMessage<CertificateAuthorityDataResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.CertificateAuthorityDataResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CertificateAuthorityDataResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CertificateAuthorityDataResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CertificateAuthorityDataResponse;

  static equals(a: CertificateAuthorityDataResponse | PlainMessage<CertificateAuthorityDataResponse> | undefined, b: CertificateAuthorityDataResponse | PlainMessage<CertificateAuthorityDataResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.AssumeRoleChainTargetsRequest
 * @deprecated
 */
export declare class AssumeRoleChainTargetsRequest extends Message<AssumeRoleChainTargetsRequest> {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  constructor(data?: PartialMessage<AssumeRoleChainTargetsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AssumeRoleChainTargetsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssumeRoleChainTargetsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssumeRoleChainTargetsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssumeRoleChainTargetsRequest;

  static equals(a: AssumeRoleChainTargetsRequest | PlainMessage<AssumeRoleChainTargetsRequest> | undefined, b: AssumeRoleChainTargetsRequest | PlainMessage<AssumeRoleChainTargetsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.AssumeRoleChainTargetsResponse
 * @deprecated
 */
export declare class AssumeRoleChainTargetsResponse extends Message<AssumeRoleChainTargetsResponse> {
  /**
   * @generated from field: repeated porter.v1.AssumeRoleChainLink chain_links = 1;
   */
  chainLinks: AssumeRoleChainLink[];

  constructor(data?: PartialMessage<AssumeRoleChainTargetsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AssumeRoleChainTargetsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssumeRoleChainTargetsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssumeRoleChainTargetsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssumeRoleChainTargetsResponse;

  static equals(a: AssumeRoleChainTargetsResponse | PlainMessage<AssumeRoleChainTargetsResponse> | undefined, b: AssumeRoleChainTargetsResponse | PlainMessage<AssumeRoleChainTargetsResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ECRTokenForRegistryRequest
 * @deprecated
 */
export declare class ECRTokenForRegistryRequest extends Message<ECRTokenForRegistryRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string region = 2;
   */
  region: string;

  /**
   * @generated from field: string aws_account_id = 3;
   */
  awsAccountId: string;

  constructor(data?: PartialMessage<ECRTokenForRegistryRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ECRTokenForRegistryRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ECRTokenForRegistryRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ECRTokenForRegistryRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ECRTokenForRegistryRequest;

  static equals(a: ECRTokenForRegistryRequest | PlainMessage<ECRTokenForRegistryRequest> | undefined, b: ECRTokenForRegistryRequest | PlainMessage<ECRTokenForRegistryRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.ECRTokenForRegistryResponse
 * @deprecated
 */
export declare class ECRTokenForRegistryResponse extends Message<ECRTokenForRegistryResponse> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * @generated from field: google.protobuf.Timestamp expiry = 2;
   */
  expiry?: Timestamp;

  constructor(data?: PartialMessage<ECRTokenForRegistryResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ECRTokenForRegistryResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ECRTokenForRegistryResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ECRTokenForRegistryResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ECRTokenForRegistryResponse;

  static equals(a: ECRTokenForRegistryResponse | PlainMessage<ECRTokenForRegistryResponse> | undefined, b: ECRTokenForRegistryResponse | PlainMessage<ECRTokenForRegistryResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.AssumeRoleCredentialsRequest
 * @deprecated
 */
export declare class AssumeRoleCredentialsRequest extends Message<AssumeRoleCredentialsRequest> {
  /**
   * @generated from field: string aws_account_id = 1;
   */
  awsAccountId: string;

  /**
   * @generated from field: int64 project_id = 2;
   */
  projectId: bigint;

  constructor(data?: PartialMessage<AssumeRoleCredentialsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AssumeRoleCredentialsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssumeRoleCredentialsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssumeRoleCredentialsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssumeRoleCredentialsRequest;

  static equals(a: AssumeRoleCredentialsRequest | PlainMessage<AssumeRoleCredentialsRequest> | undefined, b: AssumeRoleCredentialsRequest | PlainMessage<AssumeRoleCredentialsRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.AssumeRoleCredentialsResponse
 * @deprecated
 */
export declare class AssumeRoleCredentialsResponse extends Message<AssumeRoleCredentialsResponse> {
  /**
   * @generated from field: string aws_access_id = 1;
   */
  awsAccessId: string;

  /**
   * @generated from field: string aws_secret_key = 2;
   */
  awsSecretKey: string;

  /**
   * @generated from field: string aws_session_token = 3;
   */
  awsSessionToken: string;

  constructor(data?: PartialMessage<AssumeRoleCredentialsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.AssumeRoleCredentialsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssumeRoleCredentialsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssumeRoleCredentialsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssumeRoleCredentialsResponse;

  static equals(a: AssumeRoleCredentialsResponse | PlainMessage<AssumeRoleCredentialsResponse> | undefined, b: AssumeRoleCredentialsResponse | PlainMessage<AssumeRoleCredentialsResponse> | undefined): boolean;
}

/**
 * @generated from message porter.v1.DockerConfigFileForRegistryRequest
 * @deprecated
 */
export declare class DockerConfigFileForRegistryRequest extends Message<DockerConfigFileForRegistryRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: string registry_uri = 2;
   */
  registryUri: string;

  constructor(data?: PartialMessage<DockerConfigFileForRegistryRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DockerConfigFileForRegistryRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DockerConfigFileForRegistryRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DockerConfigFileForRegistryRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DockerConfigFileForRegistryRequest;

  static equals(a: DockerConfigFileForRegistryRequest | PlainMessage<DockerConfigFileForRegistryRequest> | undefined, b: DockerConfigFileForRegistryRequest | PlainMessage<DockerConfigFileForRegistryRequest> | undefined): boolean;
}

/**
 * @generated from message porter.v1.DockerConfigFileForRegistryResponse
 * @deprecated
 */
export declare class DockerConfigFileForRegistryResponse extends Message<DockerConfigFileForRegistryResponse> {
  /**
   * @generated from field: bytes docker_config_file = 1;
   */
  dockerConfigFile: Uint8Array;

  constructor(data?: PartialMessage<DockerConfigFileForRegistryResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DockerConfigFileForRegistryResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DockerConfigFileForRegistryResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DockerConfigFileForRegistryResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DockerConfigFileForRegistryResponse;

  static equals(a: DockerConfigFileForRegistryResponse | PlainMessage<DockerConfigFileForRegistryResponse> | undefined, b: DockerConfigFileForRegistryResponse | PlainMessage<DockerConfigFileForRegistryResponse> | undefined): boolean;
}

/**
 * ClusterNetworkSettingsRequest is the request object for fetching cloud provider network settings for a cluster
 *
 * @generated from message porter.v1.ClusterNetworkSettingsRequest
 */
export declare class ClusterNetworkSettingsRequest extends Message<ClusterNetworkSettingsRequest> {
  /**
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  constructor(data?: PartialMessage<ClusterNetworkSettingsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ClusterNetworkSettingsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClusterNetworkSettingsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClusterNetworkSettingsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClusterNetworkSettingsRequest;

  static equals(a: ClusterNetworkSettingsRequest | PlainMessage<ClusterNetworkSettingsRequest> | undefined, b: ClusterNetworkSettingsRequest | PlainMessage<ClusterNetworkSettingsRequest> | undefined): boolean;
}

/**
 * ClusterNetworkSettingsResponse is the response object containing cloud provider network settings for a cluster
 *
 * @generated from message porter.v1.ClusterNetworkSettingsResponse
 */
export declare class ClusterNetworkSettingsResponse extends Message<ClusterNetworkSettingsResponse> {
  /**
   * region is the cloud provider region in which the cluster is located
   *
   * @generated from field: string region = 1;
   */
  region: string;

  /**
   * subnet_ids contains a string list of cloud provider subnets associated with the cluster
   *
   * @generated from field: repeated string subnet_ids = 2;
   */
  subnetIds: string[];

  /**
   * cloud_provider the given cloud provider for the cluster being queried
   *
   * @generated from field: porter.v1.EnumCloudProvider cloud_provider = 3;
   */
  cloudProvider: EnumCloudProvider;

  /**
   * cloud_provider_network contains the relevant cluster network config for the cloud provider on which the cluster exists
   *
   * @generated from oneof porter.v1.ClusterNetworkSettingsResponse.cloud_provider_network
   */
  cloudProviderNetwork: {
    /**
     * eks_cloud_provider_network is the aws vpc for the cluster
     *
     * @generated from field: porter.v1.AWSVpc eks_cloud_provider_network = 4;
     */
    value: AWSVpc;
    case: "eksCloudProviderNetwork";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<ClusterNetworkSettingsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ClusterNetworkSettingsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClusterNetworkSettingsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClusterNetworkSettingsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClusterNetworkSettingsResponse;

  static equals(a: ClusterNetworkSettingsResponse | PlainMessage<ClusterNetworkSettingsResponse> | undefined, b: ClusterNetworkSettingsResponse | PlainMessage<ClusterNetworkSettingsResponse> | undefined): boolean;
}

/**
 * ListDatastoresRequest is the request object for getting a list of datastores for a given project/account
 *
 * @generated from message porter.v1.ListDatastoresRequest
 */
export declare class ListDatastoresRequest extends Message<ListDatastoresRequest> {
  /**
   * project_id id of the project to retrieve datastores for
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * cloud_provider the cloud provider to retrieve datastores for
   *
   * @generated from field: porter.v1.EnumCloudProvider cloud_provider = 2;
   */
  cloudProvider: EnumCloudProvider;

  /**
   * cloud_provider_account_id is an identifier to use when matching resources for a cloud provider
   *
   * @generated from field: string cloud_provider_account_id = 3;
   */
  cloudProviderAccountId: string;

  /**
   * type is an optional type of the datastore to filter by
   *
   * @generated from field: optional porter.v1.EnumDatastore type = 4;
   */
  type?: EnumDatastore;

  /**
   * name is an optional name of the datastore to filter by
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * include_env_group is a field denoting whether to include the datastore env group in the response
   *
   * @generated from field: bool include_env_group = 6;
   */
  includeEnvGroup: boolean;

  /**
   * include_metadata is a field denoting whether to include the datastore metadata in the response
   *
   * @generated from field: bool include_metadata = 7;
   */
  includeMetadata: boolean;

  constructor(data?: PartialMessage<ListDatastoresRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListDatastoresRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDatastoresRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDatastoresRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDatastoresRequest;

  static equals(a: ListDatastoresRequest | PlainMessage<ListDatastoresRequest> | undefined, b: ListDatastoresRequest | PlainMessage<ListDatastoresRequest> | undefined): boolean;
}

/**
 * ListDatastoresResponse is the response object containing a list of datastores
 *
 * @generated from message porter.v1.ListDatastoresResponse
 */
export declare class ListDatastoresResponse extends Message<ListDatastoresResponse> {
  /**
   * datastores list of datastore objects
   *
   * @generated from field: repeated porter.v1.Datastore datastores = 1;
   */
  datastores: Datastore[];

  constructor(data?: PartialMessage<ListDatastoresResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.ListDatastoresResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDatastoresResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDatastoresResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDatastoresResponse;

  static equals(a: ListDatastoresResponse | PlainMessage<ListDatastoresResponse> | undefined, b: ListDatastoresResponse | PlainMessage<ListDatastoresResponse> | undefined): boolean;
}

/**
 * DatastoreStatusRequest is the request object for fetching the status of a datastore in on a cluster
 *
 * @generated from message porter.v1.DatastoreStatusRequest
 */
export declare class DatastoreStatusRequest extends Message<DatastoreStatusRequest> {
  /**
   * project_id id of the project that the datastore belongs to
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * cluster_id id of the cluster that the datastore belongs to
   *
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * type type of the datastore
   *
   * @generated from field: porter.v1.EnumDatastore type = 3;
   */
  type: EnumDatastore;

  /**
   * name name of the datastore
   *
   * @generated from field: string name = 4;
   */
  name: string;

  constructor(data?: PartialMessage<DatastoreStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DatastoreStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DatastoreStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DatastoreStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DatastoreStatusRequest;

  static equals(a: DatastoreStatusRequest | PlainMessage<DatastoreStatusRequest> | undefined, b: DatastoreStatusRequest | PlainMessage<DatastoreStatusRequest> | undefined): boolean;
}

/**
 * DatastoreStatusResponse is the response object containing the status of the datastore
 *
 * @generated from message porter.v1.DatastoreStatusResponse
 */
export declare class DatastoreStatusResponse extends Message<DatastoreStatusResponse> {
  /**
   * status is the status of the datastore
   *
   * @generated from field: string status = 1;
   */
  status: string;

  constructor(data?: PartialMessage<DatastoreStatusResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DatastoreStatusResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DatastoreStatusResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DatastoreStatusResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DatastoreStatusResponse;

  static equals(a: DatastoreStatusResponse | PlainMessage<DatastoreStatusResponse> | undefined, b: DatastoreStatusResponse | PlainMessage<DatastoreStatusResponse> | undefined): boolean;
}

/**
 * Datastore represents a single datastore object
 *
 * @generated from message porter.v1.Datastore
 */
export declare class Datastore extends Message<Datastore> {
  /**
   * type is the type of the datastore
   *
   * @generated from field: porter.v1.EnumDatastore type = 1;
   */
  type: EnumDatastore;

  /**
   * name is the name of the datastore
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * metadata is a list of metadata objects for the datastore
   *
   * @generated from field: repeated porter.v1.DatastoreMetadata metadata = 3;
   */
  metadata: DatastoreMetadata[];

  /**
   * env is the datastore's env group
   *
   * @generated from field: porter.v1.EnvGroup env = 4;
   */
  env?: EnvGroup;

  constructor(data?: PartialMessage<Datastore>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.Datastore";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Datastore;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Datastore;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Datastore;

  static equals(a: Datastore | PlainMessage<Datastore> | undefined, b: Datastore | PlainMessage<Datastore> | undefined): boolean;
}

/**
 * DatastoreMetadata represents an object containing metadata for a given datastore
 *
 * @generated from message porter.v1.DatastoreMetadata
 */
export declare class DatastoreMetadata extends Message<DatastoreMetadata> {
  /**
   * name is the name for the metadata field
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * value is value for the metadata field
   *
   * @generated from field: string value = 2;
   */
  value: string;

  constructor(data?: PartialMessage<DatastoreMetadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.DatastoreMetadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DatastoreMetadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DatastoreMetadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DatastoreMetadata;

  static equals(a: DatastoreMetadata | PlainMessage<DatastoreMetadata> | undefined, b: DatastoreMetadata | PlainMessage<DatastoreMetadata> | undefined): boolean;
}

/**
 * RegistryStatusRequest is the request object for fetching the status of a docker registry associated to a project
 *
 * @generated from message porter.v1.RegistryStatusRequest
 */
export declare class RegistryStatusRequest extends Message<RegistryStatusRequest> {
  /**
   * project_id id of the project that the ecr registry belongs to
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * registry_id id of the ecr registry
   *
   * @generated from field: int64 registry_id = 2;
   */
  registryId: bigint;

  constructor(data?: PartialMessage<RegistryStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.RegistryStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegistryStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegistryStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegistryStatusRequest;

  static equals(a: RegistryStatusRequest | PlainMessage<RegistryStatusRequest> | undefined, b: RegistryStatusRequest | PlainMessage<RegistryStatusRequest> | undefined): boolean;
}

/**
 * RegistryStatusResponse is the response object containing the status of the docker registry
 *
 * @generated from message porter.v1.RegistryStatusResponse
 */
export declare class RegistryStatusResponse extends Message<RegistryStatusResponse> {
  /**
   * is_vulnerability_scanning_enabled is a boolean containing whether scanning is properly enabled or not
   *
   * @generated from field: bool is_vulnerability_scanning_enabled = 1;
   */
  isVulnerabilityScanningEnabled: boolean;

  constructor(data?: PartialMessage<RegistryStatusResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.RegistryStatusResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegistryStatusResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegistryStatusResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegistryStatusResponse;

  static equals(a: RegistryStatusResponse | PlainMessage<RegistryStatusResponse> | undefined, b: RegistryStatusResponse | PlainMessage<RegistryStatusResponse> | undefined): boolean;
}

/**
 * SharedNetworkSettingsRequest is the request object for fetching cloud provider network settings for where a service should be provisioned relative to a cluster
 *
 * @generated from message porter.v1.SharedNetworkSettingsRequest
 */
export declare class SharedNetworkSettingsRequest extends Message<SharedNetworkSettingsRequest> {
  /**
   * project_id id of the project that the service will be provisioned in
   *
   * @generated from field: int64 project_id = 1;
   */
  projectId: bigint;

  /**
   * cluster_id id of the cluster that the service will be peered to in
   *
   * @generated from field: int64 cluster_id = 2;
   */
  clusterId: bigint;

  /**
   * service_type type of the service
   *
   * @generated from field: string service_type = 3;
   */
  serviceType: string;

  constructor(data?: PartialMessage<SharedNetworkSettingsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.SharedNetworkSettingsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SharedNetworkSettingsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SharedNetworkSettingsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SharedNetworkSettingsRequest;

  static equals(a: SharedNetworkSettingsRequest | PlainMessage<SharedNetworkSettingsRequest> | undefined, b: SharedNetworkSettingsRequest | PlainMessage<SharedNetworkSettingsRequest> | undefined): boolean;
}

/**
 * SharedNetworkSettingsResponse is the response object containing cloud provider network settings for a service provisioned relative to a cluster
 *
 * @generated from message porter.v1.SharedNetworkSettingsResponse
 */
export declare class SharedNetworkSettingsResponse extends Message<SharedNetworkSettingsResponse> {
  /**
   * region is the cloud provider region in which the cluster is located
   *
   * @generated from field: string region = 1;
   */
  region: string;

  /**
   * cidr_range is the cidr range of the VPC
   *
   * @generated from field: string cidr_range = 2;
   */
  cidrRange: string;

  /**
   * subnet_ids contains a string list of cloud provider subnets associated with the cluster
   *
   * @generated from field: repeated string subnet_ids = 3;
   */
  subnetIds: string[];

  /**
   * cloud_provider the given cloud provider for the cluster being queried
   *
   * @generated from field: porter.v1.EnumCloudProvider cloud_provider = 4;
   */
  cloudProvider: EnumCloudProvider;

  /**
   * cloud_provider_network contains the relevant cluster network config for the cloud provider on which the cluster exists
   *
   * @generated from oneof porter.v1.SharedNetworkSettingsResponse.cloud_provider_network
   */
  cloudProviderNetwork: {
    /**
     * eks_cloud_provider_network is the aws vpc for the cluster
     *
     * @generated from field: porter.v1.AWSVpc eks_cloud_provider_network = 5;
     */
    value: AWSVpc;
    case: "eksCloudProviderNetwork";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<SharedNetworkSettingsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "porter.v1.SharedNetworkSettingsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SharedNetworkSettingsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SharedNetworkSettingsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SharedNetworkSettingsResponse;

  static equals(a: SharedNetworkSettingsResponse | PlainMessage<SharedNetworkSettingsResponse> | undefined, b: SharedNetworkSettingsResponse | PlainMessage<SharedNetworkSettingsResponse> | undefined): boolean;
}

