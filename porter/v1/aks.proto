syntax = "proto3";

package porter.v1;

message AKS {
  string cluster_name = 1;
  string cluster_version = 2;
  string cidr_range = 3;
  string location = 4;
  repeated AKSNodePool node_pools = 5;
  // sku_tier is the SKU tier of the cluster (Free or Standard).  Standard should be used for all production workloads that require high availability.
  AksSkuTier sku_tier = 6;
  // enable_container_insights enables Azure Monitor for containers on the cluster.
  bool enable_container_insights = 7;
  // enable_rbac enables Azure RBAC on the cluster.
  bool enable_rbac = 8;
}

enum AksSkuTier {
  AKS_SKU_TIER_UNSPECIFIED = 0;
  AKS_SKU_TIER_FREE = 1;
  AKS_SKU_TIER_STANDARD = 2;
}

message AKSNodePool {
  string instance_type = 1;
  uint32 min_instances = 2;
  uint32 max_instances = 3;
  string mode = 4;
  NodePoolType node_pool_type = 5;
  // additional_taints is a list of NoSchedule taints to apply to the node pool.
  // These will be applied on top of the default porter.run/workload-kind taints.
  repeated string additional_taints = 6;
  // node_pool_id is the id of the node pool. This uniquely identifies NodePoolType=User and is generated on creation if not provided.
  string node_pool_id = 7;
  // node_pool_name is the vanity name of the node pool. This is required for NodePoolType=User and can be changed by the user.
  string node_pool_name = 8;
}

enum NodePoolType {
  NODE_POOL_TYPE_UNSPECIFIED = 0;
  NODE_POOL_TYPE_SYSTEM = 1;
  NODE_POOL_TYPE_MONITORING = 2;
  NODE_POOL_TYPE_APPLICATION = 3;
  NODE_POOL_TYPE_CUSTOM = 4;
  // NODE_POOL_TYPE_USER indicates a user-managed node pool (can be created, edited, and deleted by users). Node pools of this type must specify a unique node_pool_name.
  NODE_POOL_TYPE_USER = 5;
}
