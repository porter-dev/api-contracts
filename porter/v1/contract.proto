syntax = "proto3";

package porter.v1;

import "porter/v1/cluster.proto";

// Contract represents a contract for managing clusters and compliance
message Contract {
  Cluster cluster = 1;
  User user = 2;
  // compliance_profiles is a list of compliance profiles that should be enforced on the contract
  ComplianceProfile compliance_profiles = 4;
}

// ContractRevision represents a contract revision which should be acted upon, depending on the stream
// that is was passed through. This approach goes against microservice architectures, by expecting every consumer
// to read the specific contract from the database
message ContractRevision {
  int32 cluster_id = 1;
  int32 project_id = 2;
  // revision_id is the ID of the contract revision that this message applies to.
  // This field is a UUID represented as a string, for better compatibility.
  // Best practice is to parse this as a uuid upon receipt
  string revision_id = 3;
}

// User represents a user of Porter, who actioned the change to the contract
message User {
  int32 id = 1;
}

// ComplianceProfiles are the different compliance profiles that can be enforced on a contract
message ComplianceProfile {
  // soc2 indicates that the contract should be compliant with SOC2
  bool soc2 = 1;
  // hipaa indicates that the contract should be compliant with HIPAA
  bool hipaa = 2;
}
