syntax = "proto3";

package porter.v1;

message GKE {
  string cluster_name = 1;
  string cluster_version = 2;
  GKENetwork network = 3;
  string region = 4;
  repeated GKENodePool node_pools = 5;
}

message GKENodePool {
  string instance_type = 1;
  uint32 min_instances = 2;
  uint32 max_instances = 3;
  // node_pool_type is used to specify the type of node pool. This is used to specify what node pools are used by Porter, vs users.
  GKENodePoolType node_pool_type = 4;
  // additional_taints is a list of NoSchedule taints to apply to the node pool.
  // These will be applied on top of the default porter.run/workload-kind taints.
  repeated string additional_taints = 5;
  // is_spot_instance is used to specify whether the node pool should use spot instances.
  bool is_spot_instance = 6;
  // node_pool_id is the id of the node pool. This uniquely identifies GKENodePoolType=User and is generated on creation if not provided.
  string node_pool_id = 7;
  // node_pool_name is the vanity name of the node pool. This is required for GKENodePoolType=User and can be changed by the user.
  string node_pool_name = 8;
}

enum GKENodePoolType {
  GKE_NODE_POOL_TYPE_UNSPECIFIED = 0;
  GKE_NODE_POOL_TYPE_SYSTEM = 1;
  GKE_NODE_POOL_TYPE_MONITORING = 2;
  GKE_NODE_POOL_TYPE_APPLICATION = 3;
  GKE_NODE_POOL_TYPE_CUSTOM = 4;
  GKE_NODE_POOL_TYPE_USER = 5;
}

// GKENetwork contains all information required to configure the GKE cluster's network
message GKENetwork {
  // cidr_range is the range of the network. This is used to specify the network that Porter will use.
  string cidr_range = 1;
  // control_plane_cidr is a range reserved by GKE for control plane functions such as running a global load balancer.
  string control_plane_cidr = 2;
  // pod_cidr is the range of the network that pods will be assigned IPs from, on the GCP subnet.
  string pod_cidr = 3;
  // service_cidr is the range of the network that services will be assigned IPs from, on the GCP subnet.
  string service_cidr = 4;
}

//GKEPreflightValues is cidr ranges needed for PreflightChecks
message GKEPreflightValues {
  ////Network contains all information required to configure the GKE cluster's network
  GKENetwork network = 1;
}
