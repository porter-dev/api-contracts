syntax = "proto3";

package porter.v1;

import "porter/v1/cluster.proto";

message AWSCredentials {
  // target_arn is the ARN of the IAM role that we will assume
  string target_arn = 1;
  // external_id is optional and is used to prevent privilege escalation
  string external_id = 2;
}

message AzureCredentials {
  string client_id = 1;
  string subscription_id = 2;
  string tenant_id = 3;
  bytes service_principal_secret = 4;
}

message GCPCredentials {
  // service_account_json_base64 is the base64 encoded service account json which can be used to authenticate with GCP
  string service_account_json_base64 = 1;
}

message UpdateCloudProviderCredentialsRequest {
  // project_id [REQUIRED] is the project that we are updating the credentials for
  int64 project_id = 1;
  // cloud_provider [REQUIRED] represents the provider that we will provisioning the cluster in
  EnumCloudProvider cloud_provider = 2;

  // cloud_provider_credentials are the credentials for the specified cloud provider
  oneof cloud_provider_credentials {
    AWSCredentials aws_credentials = 3;
    AzureCredentials azure_credentials = 4;
    GCPCredentials gcp_credentials = 5;
  }

  // credentials_identifier is the identifier for the credentials that we are updating. This is required during update operations, otherwise a new credential will be created
  string credentials_identifier = 6;
}

message UpdateCloudProviderCredentialsResponse {
  int64 project_id = 1;
  string credentials_identifier = 2;
  // percent_completed is used to inform the caller of progress on the credential update, for async updates
  float percent_completed = 3;
}
