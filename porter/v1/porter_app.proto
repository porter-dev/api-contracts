syntax = "proto3";

package porter.v1;

import "google/protobuf/timestamp.proto";
import "porter/v1/env_group.proto";
import "porter/v1/service.proto";

// DeploymentTargetIdentifier is the object that identifies a deployment target. One of id or name must be provided, with id taking precedence.
message DeploymentTargetIdentifier {
  // id is the id of the deployment target
  string id = 1;
  // name is the name of the deployment target
  string name = 2;
}

message DeploymentTarget {
  int64 project_id = 1;
  // name is the vanity name for the deployment target
  string name = 2;
  // namespace is the namespace that the deployment target points to
  string namespace = 3;
  // cluster_id is the id of the cluster that the deployment target points to
  int64 cluster_id = 4;
  // is_preview indicates whether this is a preview deployment target or not
  bool is_preview = 5;
  // is_default indicates whether this is the default deployment target for the cluster
  bool is_default = 6;
  // id is the id of the deployment target
  string id = 7;
}

// PorterApp is the top-level configuration for a Porter application, usually found in porter.yaml
message PorterApp {
  // name is the name of the application
  string name = 1;
  // services is a map of service names to service configurations
  map<string, Service> services = 2 [deprecated = true];
  // env is a list of environment variables to set on the application
  repeated EnvVariable env = 3;
  // build is the build settings for the application
  Build build = 4;
  // predeploy is a job service to run before deploying the application
  Service predeploy = 5;
  // image is the image to use for a given revision of the application
  AppImage image = 6;
  // env_groups is a map of environment variable group names to environment variable group configurations
  repeated EnvGroup env_groups = 7;
  // helm_overrides is stringified json of raw Helm overrides to use for the application. These will override any values generated by the contract.
  HelmOverrides helm_overrides = 8;
  // service_list is a list of service configurations
  repeated Service service_list = 9;
  //efs_storage shared storage across service
  EFS efs_storage = 10;
  // required_apps are other porter apps that this app expects to be deployed alongside it
  repeated RequiredApp required_apps = 11;
  // AutoRollback describes whether the app will be rolled back automatically on deployment failure
  AutoRollback auto_rollback = 12;
  // cloud_sql is the values to configure CloudSQL settings for an app
  CloudSql cloud_sql = 13;
}

// RequiredApp specifies another porter app that this app expects to be deployed alongside it
// These are used for preview environments to pull in the latest deployed version of an app from a different deployment target
message RequiredApp {
  // name is the name of the required app
  string name = 1;
  // from_target is the deployment target from which to pull the contract for the required app
  // If not provided, the contract will be pulled from the default deployment target
  DeploymentTargetIdentifier from_target = 2;
}

// HelmOverrides is a wrapper over stringified json of raw Helm overrides to use for the application. HelmOverrides will only be removed if values is explicitly set to an empty string.
message HelmOverrides {
  // Values is base64-encoded, stringified json of Helm values. We use a string because Typescript does not have a native bytes type.
  string b64_values = 1;
}

// EnvGroup represents the metadata for an env group. We do not want to store the actual variables with the PorterApp.
message EnvGroup {
  // name is the name of the environment variable group
  string name = 1;
  // version is the version of the environment variable group
  int64 version = 2;
  // linked_applications is an optional list of applications linked to the env group
  repeated string linked_applications = 3;
  // variables is an optional map of non-sensitive variable names to values
  map<string, string> variables = 4;
  // secret is an optional map of sensitive variable names to values
  map<string, string> secret_variables = 5;
  // type is the type of the environment variable group
  EnumEnvGroupProviderType type = 6;
  // created_at is the time the env group was created
  google.protobuf.Timestamp created_at = 7;
}

// EnvGroupVariables represents the variables for an env group.
message EnvGroupVariables {
  // normal is a map of non-sensitive variable names to values
  map<string, string> normal = 1;
  // secret is a map of sensitive variable names to values
  map<string, string> secret = 2;
}

// ServiceDeletions contains all explicit deletions from a service
message ServiceDeletions {
  // domain_names is a list of domain names to delete
  repeated string domain_names = 1;
  // ingress_annotations is a list of ingress annotation keys to delete
  repeated string ingress_annotations = 2;
}

// EnvVariableDeletions contains the keys to remove from the app's normal and secret environment variables
message EnvVariableDeletions {
  // variables is a list of environment variable names to delete
  repeated string variables = 1;
  // secrets is a list of secret environment variable names to delete
  repeated string secrets = 2;
}

// Deletions contains all explicit deletions from a PorterApp
message Deletions {
  // service_names is a list of service names to delete
  repeated string service_names = 1;
  // env_group_names is a list of environment variable group names to delete
  repeated string env_group_names = 2;
  // predeploy_names is a list of predeploy jobs to delete. Even though there is only one predeploy job, it is a list to be consistent with the service deletions.
  repeated string predeploy_names = 3;
  // env_variable_names is deprecated in favor of env_group_names. It was a list of environment variable names to delete
  repeated string env_variable_names = 4 [deprecated = true];
  // service_domains is a map of service names to a list of domains to delete
  map<string, DomainNameList> service_domains = 5 [deprecated = true];
  // service_deletions is a map of service names to a list of deletions to perform on the service
  map<string, ServiceDeletions> service_deletions = 6;
  // env_variable_deletions contains the keys to remove from the app's normal and secret environment variables
  EnvVariableDeletions env_variable_deletions = 7;
}

message DomainNameList {
  // domain_names is a list of domain names
  repeated string domain_names = 1;
}

// Build is the build settings for the application
message Build {
  // context is the path to the build context
  string context = 1;
  // method is the build method to use, being one of "pack", "docker", or "registry"
  string method = 2;
  // builder is the builder to use for the "pack" build method
  string builder = 3;
  // buildpacks is a list of buildpacks to use for the "pack" build method
  repeated string buildpacks = 4;
  // dockerfile is the path to the Dockerfile to use for the "docker" build method
  string dockerfile = 5;
  // commit_sha is the commit SHA at which to build the application
  string commit_sha = 6;
}

// AppImage is the image to use for a given revision of the application
message AppImage {
  // repository is the repository to use for the image
  string repository = 1;
  // tag is the tag to use for the image
  string tag = 2;
}

// EFS is the values to configure EFS settings
message EFS {
  //enabled enabes shared storage across services
  bool enabled = 1;
  // file_system_id is the AWS EFS File System ID to mount
  string file_system_id = 2;
}

// AutoRollback describes whether the app will be rolled back automatically on deployment failure
message AutoRollback {
  // enabled describes if the feature is enabled
  bool enabled = 1;
}

// EnvVariableSource is the source type from which to pull the environment variable
enum EnvVariableSource {
  ENV_VARIABLE_SOURCE_UNSPECIFIED = 0;
  ENV_VARIABLE_SOURCE_VALUE = 1;
  ENV_VARIABLE_SOURCE_FROM_APP = 2;
}

message EnvVariable {
  // key is the name of the environment variable
  string key = 1;
  // source specifies how the env variable should be set
  EnvVariableSource source = 2;
  // value is the value of the environment variable. This is only used if case is ENV_VARIABLE_SOURCE_VALUE
  string value = 3;
  // definition is an object that defines how the environment variable should be set
  oneof definition {
    EnvVariableFromApp from_app = 4;
  }
}

// EnvValueFromApp is an enum of the possible values to use in the EnvVariableFromApp definition
enum EnvValueFromApp {
  ENV_VALUE_FROM_APP_UNSPECIFIED = 0;
  ENV_VALUE_FROM_APP_PUBLIC_DOMAIN = 1;
  ENV_VALUE_FROM_APP_INTERNAL_DOMAIN = 2;
}

message EnvVariableFromApp {
  // app_name is the name of the app
  string app_name = 1;
  // value is one of a discrete set of configured values on the app that can be used for the environment variable
  EnvValueFromApp value = 2;
  // service_name is the name of the service where the value is defined
  string service_name = 3;
}

// EnumAppRevisionStatus describes the status of an app revision
enum EnumAppRevisionStatus {
  ENUM_APP_REVISION_STATUS_UNSPECIFIED = 0;
  ENUM_APP_REVISION_STATUS_PROGRESSING = 1;
  ENUM_APP_REVISION_STATUS_SUCCESSFUL = 2;
  ENUM_APP_REVISION_STATUS_FAILED = 3;
}

// EnumJobRunStatus describes the status of a job run
enum EnumJobRunStatus {
  ENUM_JOB_RUN_STATUS_UNSPECIFIED = 0;
  ENUM_JOB_RUN_STATUS_RUNNING = 1;
  ENUM_JOB_RUN_STATUS_SUCCESSFUL = 2;
  ENUM_JOB_RUN_STATUS_FAILED = 3;
}

// JobRun contains details about a job run
message JobRun {
  // id is the id of the job run
  string id = 1;
  // job_name is the name of the job
  string job_name = 2;
  // status is the status of the job run
  EnumJobRunStatus status = 3;
  // created_at is the time the job run was created
  google.protobuf.Timestamp created_at = 4;
  // finished_at is the time the job run finished
  google.protobuf.Timestamp finished_at = 5;
  // app_revision_id is the id of the app revision that the job run is associated with
  string app_revision_id = 6;
  // service_name is the name of the job service in the app
  string service_name = 7;
}

// CloudSQL is the values to configure CloudSQL settings
message CloudSql {
  // enabled enables cloudsql proxying across all services in the app
  bool enabled = 1;
  // service_account_json_secret is the name of the secret where the service account JSON for accessing the CloudSQL instance is stored
  string service_account_json_secret = 2;
  // connection_name is the connection name for the CloudSQL instance
  string connection_name = 3;
  // db_port is the port for the CloudSQL instance
  int32 db_port = 4;
}
